{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1","program":"/Users/r/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","nalgebra","--edition=2018","/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"matrixmultiply\"","--cfg","feature=\"std\"","-C","metadata=b4c89f33f5f292d0","-C","extra-filename=-b4c89f33f5f292d0","--out-dir","/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps","-L","dependency=/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps","--extern","alga=/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps/libalga-33f81c0d9bbee603.rmeta","--extern","approx=/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps/libapprox-4ea912a036e6c805.rmeta","--extern","generic_array=/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps/libgeneric_array-900e09104286b72a.rmeta","--extern","matrixmultiply=/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps/libmatrixmultiply-d1a7ef309269000b.rmeta","--extern","num_complex=/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps/libnum_complex-35e680b090ec2834.rmeta","--extern","num_rational=/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps/libnum_rational-5656524f6ff94480.rmeta","--extern","num_traits=/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps/libnum_traits-301e1a8533ff7168.rmeta","--extern","rand=/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps/librand-ca539701a5784834.rmeta","--extern","typenum=/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps/libtypenum-5bffd5769bb78612.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/r/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/r/Aprendizaje/rust-3d/target/rls/debug/deps/libnalgebra-b4c89f33f5f292d0.rmeta"},"prelude":{"crate_id":{"name":"nalgebra","disambiguator":[3763632042425093026,9704369833257069476]},"crate_root":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src","external_crates":[{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9505258173972014140,1687564053001788342]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11611887195329836898,18391061204127126749]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8031993392717489033,4124505603786489705]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15271802224688203332,8792150453795694033]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7165577602573969849,9858108452520037846]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14698847031314625437,491468730102695142]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13330479813603739683,6803795581109914288]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18059772732427324572,13387991576644447952]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[10236583916794409636,10240650400930061727]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[11381542376919589428,1099759283771964623]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[362513579181741490,3555756610499304386]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726896196391708128,17121846613634101866]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15657039231647705578,5960932578145670068]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7592225372802278695,9789656229435184476]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":15,"id":{"name":"approx","disambiguator":[18088394979405616618,3054199566095749781]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":16,"id":{"name":"num_traits","disambiguator":[14214146962962093446,711409709661983387]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":17,"id":{"name":"libm","disambiguator":[1856375971405814567,15222322997078390553]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":18,"id":{"name":"generic_array","disambiguator":[3178112749203380408,4121976849387363200]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":19,"id":{"name":"typenum","disambiguator":[18059727884575391635,15022118851437400491]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":20,"id":{"name":"matrixmultiply","disambiguator":[10877524109318310191,14444846254295331401]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":21,"id":{"name":"rawpointer","disambiguator":[11554610201955016452,12201804540349799290]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":22,"id":{"name":"num_complex","disambiguator":[13655245971954062642,9524690572889169448]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":23,"id":{"name":"num_rational","disambiguator":[4809412979423905127,7964698929480935825]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":24,"id":{"name":"num_integer","disambiguator":[4036646475546615943,11301807559474545081]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":25,"id":{"name":"rand","disambiguator":[1946140961575193049,12360939091363163989]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":26,"id":{"name":"rand_jitter","disambiguator":[1167839029655284541,6501204534259035342]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":27,"id":{"name":"rand_core","disambiguator":[1080013918326746535,4567489918907392247]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":28,"id":{"name":"libc","disambiguator":[12293655624372226261,1519600221282631606]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":29,"id":{"name":"rand_os","disambiguator":[5949682059529458887,12124035730523006050]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":30,"id":{"name":"rand_isaac","disambiguator":[13709782391300229515,4220877498056775263]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":31,"id":{"name":"rand_core","disambiguator":[2696516622418940804,3326706734499353808]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":32,"id":{"name":"rand_chacha","disambiguator":[10810848343824881731,2083015333388622340]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":33,"id":{"name":"rand_hc","disambiguator":[1511607703005120742,9533011461681907284]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":34,"id":{"name":"rand_pcg","disambiguator":[13316179925578082116,9473508154960473584]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":35,"id":{"name":"rand_xorshift","disambiguator":[2981201097858540801,2322288775218106389]}},{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","num":36,"id":{"name":"alga","disambiguator":[1976805937573888494,14091009477428150093]}}],"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":0,"byte_end":20120,"line_start":1,"line_end":729,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20783,"byte_end":20784,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Matrix, SquareMatrix, RowVector, MatrixSum, Vector, VectorSum","parent":{"krate":0,"index":12}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20783,"byte_end":20784,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Scalar","parent":{"krate":0,"index":12}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20783,"byte_end":20784,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Unit","parent":{"krate":0,"index":12}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20783,"byte_end":20784,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Norm","parent":{"krate":0,"index":12}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20783,"byte_end":20784,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"DefaultAllocator","parent":{"krate":0,"index":12}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20783,"byte_end":20784,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"DimSub, DimDiff, Dim, Dynamic, U1, DimName","parent":{"krate":0,"index":12}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20783,"byte_end":20784,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"MatrixN, Matrix4, Matrix2x3, Vector3, VectorN, RowVectorN, Matrix3, DMatrix, Vector2, MatrixMN, Matrix2, Vector4, Vector1","parent":{"krate":0,"index":12}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20783,"byte_end":20784,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"VectorSliceN, MatrixSliceMutMN, DVectorSlice, MatrixSliceMN","parent":{"krate":0,"index":12}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20783,"byte_end":20784,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"ArrayStorage","parent":{"krate":0,"index":12}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20783,"byte_end":20784,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"MatrixSliceMut, SliceStorageMut, SliceStorage, MatrixSlice","parent":{"krate":0,"index":12}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20783,"byte_end":20784,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"VecStorage","parent":{"krate":0,"index":12}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Point","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Point3, Point2","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Rotation","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Rotation2, Rotation3","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Quaternion, UnitQuaternion","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"UnitComplex","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Translation","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Translation3, Translation2","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Isometry","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"IsometryMatrix3","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Similarity","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"TCategoryMul, TAffine, TCategory, TProjective, Transform, SubTCategoryOf, TGeneral, SuperTCategoryOf","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Projective3","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483263,"byte_end":483264,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Reflection","parent":{"krate":0,"index":3790}},{"kind":"Use","ref_id":{"krate":0,"index":6883},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483734,"byte_end":483747,"line_start":95,"line_end":95,"column_start":29,"column_end":42},"alias_span":null,"name":"Orthographic3","value":"","parent":{"krate":0,"index":3790}},{"kind":"Use","ref_id":{"krate":0,"index":6957},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":483776,"byte_end":483788,"line_start":96,"line_end":96,"column_start":28,"column_end":40},"alias_span":null,"name":"Perspective3","value":"","parent":{"krate":0,"index":3790}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Bidiagonal","parent":{"krate":0,"index":7022}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7022}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7022}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Hessenberg","parent":{"krate":0,"index":7022}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"LU","parent":{"krate":0,"index":7022}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"PermutationSequence","parent":{"krate":0,"index":7022}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7022}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7022}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7022}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7022}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"SymmetricTridiagonal","parent":{"krate":0,"index":7022}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983516,"byte_end":983517,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7022}},{"kind":"Use","ref_id":{"krate":0,"index":12},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":4642,"byte_end":4646,"line_start":147,"line_end":147,"column_start":9,"column_end":13},"alias_span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":4650,"byte_end":4654,"line_start":147,"line_end":147,"column_start":17,"column_end":21},"name":"core","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":4677,"byte_end":4678,"line_start":148,"line_end":148,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Vector, dimension, Norm, constraint, allocator, RowVectorN, VectorN, VectorSliceN, Matrix, Dim, DefaultAllocator, storage, Scalar, U1","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":4677,"byte_end":4678,"line_start":148,"line_end":148,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":4677,"byte_end":4678,"line_start":148,"line_end":148,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1312},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5165,"byte_end":5167,"line_start":164,"line_end":164,"column_start":25,"column_end":27},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":501},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5169,"byte_end":5178,"line_start":164,"line_end":164,"column_start":29,"column_end":38},"alias_span":null,"name":"RealField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":138},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5180,"byte_end":5192,"line_start":164,"line_end":164,"column_start":40,"column_end":52},"alias_span":null,"name":"ComplexField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":734},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5239,"byte_end":5243,"line_start":166,"line_end":166,"column_start":24,"column_end":28},"alias_span":null,"name":"Real","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":471},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5266,"byte_end":5273,"line_start":167,"line_end":167,"column_start":22,"column_end":29},"alias_span":null,"name":"Complex","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":0,"byte_end":20120,"line_start":1,"line_end":729,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":3790},{"krate":0,"index":7022},{"krate":0,"index":7877},{"krate":0,"index":7878},{"krate":0,"index":7879},{"krate":0,"index":7880},{"krate":0,"index":7881},{"krate":0,"index":7885},{"krate":0,"index":7895},{"krate":0,"index":7896},{"krate":0,"index":7901},{"krate":0,"index":7902},{"krate":0,"index":7906},{"krate":0,"index":7907},{"krate":0,"index":7908},{"krate":0,"index":7909},{"krate":0,"index":7911},{"krate":0,"index":7913},{"krate":0,"index":7915},{"krate":0,"index":7917},{"krate":0,"index":7919},{"krate":0,"index":7921},{"krate":0,"index":7923},{"krate":0,"index":7925},{"krate":0,"index":7927},{"krate":0,"index":7929},{"krate":0,"index":7931},{"krate":0,"index":7933},{"krate":0,"index":7935},{"krate":0,"index":7937},{"krate":0,"index":7939},{"krate":0,"index":7941},{"krate":0,"index":7943},{"krate":0,"index":7946},{"krate":0,"index":7949},{"krate":0,"index":7952},{"krate":0,"index":7955},{"krate":0,"index":7957},{"krate":0,"index":7959},{"krate":0,"index":7961},{"krate":0,"index":7963},{"krate":0,"index":7965},{"krate":0,"index":7967},{"krate":0,"index":7969},{"krate":0,"index":7971},{"krate":0,"index":7973},{"krate":0,"index":7975},{"krate":0,"index":7977},{"krate":0,"index":7979},{"krate":0,"index":7981},{"krate":0,"index":7984},{"krate":0,"index":7987},{"krate":0,"index":7990},{"krate":0,"index":7993},{"krate":0,"index":7996},{"krate":0,"index":7999}],"decl_id":null,"docs":"# nalgebra","sig":null,"attributes":[{"value":"!\n# nalgebra\n\n**nalgebra** is a linear algebra library written for Rust targeting:\n\n* General-purpose linear algebra (still lacks a lot of features…)\n* Real-time computer graphics.\n* Real-time computer physics.\n\n## Using **nalgebra**\nYou will need the last stable build of the [rust compiler](https://www.rust-lang.org)\nand the official package manager: [cargo](https://github.com/rust-lang/cargo).\n\nSimply add the following to your `Cargo.toml` file:\n\n```.ignore\n[dependencies]\nnalgebra = \"0.18\"\n```\n\n\nMost useful functionalities of **nalgebra** are grouped in the root module `nalgebra::`.\n\nHowever, the recommended way to use **nalgebra** is to import types and traits\nexplicitly, and call free-functions using the `na::` prefix:\n\n```.rust\n#[macro_use]\nextern crate approx; // For the macro relative_eq!\nextern crate nalgebra as na;\nuse na::{Vector3, Rotation3};\n\nfn main() {\n    let axis  = Vector3::x_axis();\n    let angle = 1.57;\n    let b     = Rotation3::from_axis_angle(&axis, angle);\n\n    relative_eq!(b.axis().unwrap(), axis);\n    relative_eq!(b.angle(), angle);\n}\n```\n\n\n## Features\n**nalgebra** is meant to be a general-purpose, low-dimensional, linear algebra library, with\nan optimized set of tools for computer graphics and physics. Those features include:\n\n* A single parametrizable type `Matrix` for vectors, (square or rectangular) matrices, and slices\n  with dimensions known either at compile-time (using type-level integers) or at runtime.\n* Matrices and vectors with compile-time sizes are statically allocated while dynamic ones are\n  allocated on the heap.\n* Convenient aliases for low-dimensional matrices and vectors: `Vector1` to `Vector6` and\n  `Matrix1x1` to `Matrix6x6`, including rectangular matrices like `Matrix2x5`.\n* Points sizes known at compile time, and convenience aliases:: `Point1` to `Point6`.\n* Translation (seen as a transformation that composes by multiplication): `Translation2`,\n  `Translation3`.\n* Rotation matrices: `Rotation2`, `Rotation3`.\n* Quaternions: `Quaternion`, `UnitQuaternion` (for 3D rotation).\n* Unit complex numbers can be used for 2D rotation: `UnitComplex`.\n* Algebraic entities with a norm equal to one: `Unit<T>`, e.g., `Unit<Vector3<f32>>`.\n* Isometries (translation ⨯ rotation): `Isometry2`, `Isometry3`\n* Similarity transformations (translation ⨯ rotation ⨯ uniform scale): `Similarity2`, `Similarity3`.\n* Affine transformations stored as an homogeneous matrix: `Affine2`, `Affine3`.\n* Projective (i.e. invertible) transformations stored as an homogeneous matrix: `Projective2`,\n  `Projective3`.\n* General transformations that does not have to be invertible, stored as an homogeneous matrix:\n  `Transform2`, `Transform3`.\n* 3D projections for computer graphics: `Perspective3`, `Orthographic3`.\n* Matrix factorizations: `Cholesky`, `QR`, `LU`, `FullPivLU`, `SVD`, `Schur`, `Hessenberg`, `SymmetricEigen`.\n* Insertion and removal of rows of columns of a matrix.\n* Implements traits from the [alga](https://crates.io/crates/alga) crate for\n  generic programming.\n*/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":0,"byte_end":3043,"line_start":1,"line_end":73,"column_start":1,"column_end":3}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":3094,"byte_end":3124,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"deny(unused_parens)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":3125,"byte_end":3148,"line_start":80,"line_end":80,"column_start":1,"column_end":24}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":3149,"byte_end":3181,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"deny(unused_qualifications)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":3182,"byte_end":3213,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"deny(unused_results)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":3214,"byte_end":3238,"line_start":83,"line_end":83,"column_start":1,"column_end":25}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":3239,"byte_end":3261,"line_start":84,"line_end":84,"column_start":1,"column_end":23}},{"value":"warn(incoherent_fundamental_impls)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":3262,"byte_end":3300,"line_start":85,"line_end":85,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base","qualname":"::base","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":67},{"krate":0,"index":317},{"krate":0,"index":361},{"krate":0,"index":381},{"krate":0,"index":464},{"krate":0,"index":585},{"krate":0,"index":716},{"krate":0,"index":1000},{"krate":0,"index":1068},{"krate":0,"index":1199},{"krate":0,"index":1810},{"krate":0,"index":1908},{"krate":0,"index":1948},{"krate":0,"index":2074},{"krate":0,"index":2122},{"krate":0,"index":2255},{"krate":0,"index":2411},{"krate":0,"index":2562},{"krate":0,"index":2997},{"krate":0,"index":3135},{"krate":0,"index":3239},{"krate":0,"index":3396},{"krate":0,"index":3496},{"krate":0,"index":3536},{"krate":0,"index":3545},{"krate":0,"index":3558},{"krate":0,"index":3601},{"krate":0,"index":3656},{"krate":0,"index":3768},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for vector and matrix computations.\n","sig":null,"attributes":[{"value":"! [Reexported at the root of this crate.] Data structures for vector and matrix computations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20122,"byte_end":20217,"line_start":1,"line_end":1,"column_start":1,"column_end":96}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"allocator","qualname":"::base::allocator","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":34},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":53},{"krate":0,"index":59},{"krate":0,"index":63}],"decl_id":null,"docs":" Abstract definition of a matrix data storage allocator.\n","sig":null,"attributes":[{"value":"! Abstract definition of a matrix data storage allocator.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21119,"byte_end":21178,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":26},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21849,"byte_end":21858,"line_start":19,"line_end":19,"column_start":11,"column_end":20},"name":"Allocator","qualname":"::base::allocator::Allocator","value":"Allocator<N: Scalar, R: Dim, C: Dim = U1>: Any + Sized","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"decl_id":null,"docs":" A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`\n elements of type `N`.","sig":null,"attributes":[{"value":"/ A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21420,"byte_end":21510,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/ elements of type `N`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21511,"byte_end":21536,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21537,"byte_end":21540,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ An allocator is said to be:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21541,"byte_end":21572,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/   − static:  if `R` and `C` both implement `DimName`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21573,"byte_end":21632,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/   − dynamic: if either one (or both) of `R` or `C` is equal to `Dynamic`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21633,"byte_end":21712,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21713,"byte_end":21716,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Every allocator must be both static and dynamic. Though not all implementations may share the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21717,"byte_end":21814,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ same `Buffer` type.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21815,"byte_end":21838,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21974,"byte_end":21980,"line_start":21,"line_end":21,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::base::allocator::Allocator::Buffer","value":"type Buffer: ContiguousStorageMut<N, R, C> + Clone;","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" The type of buffer this allocator can instanciate.\n","sig":null,"attributes":[{"value":"/ The type of buffer this allocator can instanciate.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21910,"byte_end":21964,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22139,"byte_end":22161,"line_start":24,"line_end":24,"column_start":15,"column_end":37},"name":"allocate_uninitialized","qualname":"::base::allocator::Allocator::allocate_uninitialized","value":"fn (nrows: R, ncols: C) -> Self::Buffer","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Allocates a buffer with the given number of rows and columns without initializing its content.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer with the given number of rows and columns without initializing its content.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22026,"byte_end":22124,"line_start":23,"line_end":23,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22286,"byte_end":22308,"line_start":27,"line_end":27,"column_start":8,"column_end":30},"name":"allocate_from_iterator","qualname":"::base::allocator::Allocator::allocate_from_iterator","value":"fn <I> (nrows: R, ncols: C, iter: I) -> Self::Buffer","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Allocates a buffer initialized with the content of the given iterator.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer initialized with the content of the given iterator.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22204,"byte_end":22278,"line_start":26,"line_end":26,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22584,"byte_end":22595,"line_start":36,"line_end":36,"column_start":11,"column_end":22},"name":"Reallocator","qualname":"::base::allocator::Reallocator","value":"Reallocator<N: Scalar, RFrom: Dim, CFrom: Dim, RTo: Dim, CTo: Dim>: Allocator<N, RFrom, CFrom> + Allocator<N, RTo, CTo>","parent":null,"children":[{"krate":0,"index":40}],"decl_id":null,"docs":" A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×\n CFrom) elements to a smaller or larger size (RTo, CTo).\n","sig":null,"attributes":[{"value":"/ A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22416,"byte_end":22513,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/ CFrom) elements to a smaller or larger size (RTo, CTo).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22514,"byte_end":22573,"line_start":35,"line_end":35,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":23205,"byte_end":23220,"line_start":46,"line_end":46,"column_start":15,"column_end":30},"name":"reallocate_copy","qualname":"::base::allocator::Reallocator::reallocate_copy","value":"fn (nrows: RTo, ncols: CTo, buf: <Self as Allocator<N, RFrom, CFrom>>::Buffer) -> <Self as Allocator<N, RTo, CTo>>::Buffer","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer\n `buf`. Data stored by `buf` are linearly copied to the output:","sig":null,"attributes":[{"value":"/ Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22714,"byte_end":22808,"line_start":39,"line_end":39,"column_start":5,"column_end":99}},{"value":"/ `buf`. Data stored by `buf` are linearly copied to the output:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22813,"byte_end":22879,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22884,"byte_end":22887,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ * The copy is performed as if both were just arrays (without a matrix structure).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22892,"byte_end":22977,"line_start":42,"line_end":42,"column_start":5,"column_end":90}},{"value":"/ * If `buf` is larger than the output size, then extra elements of `buf` are truncated.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22982,"byte_end":23072,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/ * If `buf` is smaller than the output size, then extra elements of the output are left","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":23077,"byte_end":23167,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ uninitialized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":23172,"byte_end":23190,"line_start":45,"line_end":45,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":23467,"byte_end":23477,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"SameShapeR","qualname":"::base::allocator::SameShapeR","value":"<ShapeConstraint as SameNumberOfRows<R1, R2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of rows of the result of a componentwise operation on two matrices.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":23375,"byte_end":23457,"line_start":53,"line_end":53,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":44},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":23647,"byte_end":23657,"line_start":57,"line_end":57,"column_start":10,"column_end":20},"name":"SameShapeC","qualname":"::base::allocator::SameShapeC","value":"<ShapeConstraint as SameNumberOfColumns<C1, C2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of columns of the result of a componentwise operation on two matrices.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":23552,"byte_end":23637,"line_start":56,"line_end":56,"column_start":1,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":23845,"byte_end":23863,"line_start":61,"line_end":61,"column_start":11,"column_end":29},"name":"SameShapeAllocator","qualname":"::base::allocator::SameShapeAllocator","value":"SameShapeAllocator<N, R1, C1, R2, C2>: Allocator<N, R1, C1> + Allocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows and columns to be respectively the same.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows and columns to be respectively the same.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":23755,"byte_end":23834,"line_start":60,"line_end":60,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":59},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":24535,"byte_end":24559,"line_start":86,"line_end":86,"column_start":11,"column_end":35},"name":"SameShapeVectorAllocator","qualname":"::base::allocator::SameShapeVectorAllocator","value":"SameShapeVectorAllocator<N, R1, R2>: Allocator<N, R1> + Allocator<N, SameShapeR<R1, R2>> +\nSameShapeAllocator<N, R1, U1, R2, U1>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows to be equal.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows to be equal.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":24473,"byte_end":24524,"line_start":85,"line_end":85,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26172,"byte_end":26178,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"icamax","qualname":"<Vector<N, D, S>>::icamax","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest complex or real absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest complex or real absolute value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25708,"byte_end":25803,"line_start":19,"line_end":19,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25808,"byte_end":25811,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25816,"byte_end":25831,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25836,"byte_end":25839,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25844,"byte_end":25851,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25856,"byte_end":25887,"line_start":24,"line_end":24,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25892,"byte_end":25920,"line_start":25,"line_end":25,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25925,"byte_end":25956,"line_start":26,"line_end":26,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25961,"byte_end":25989,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(Complex::new(11.0, 3.0), Complex::new(-15.0, 0.0), Complex::new(13.0, 5.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25994,"byte_end":26097,"line_start":28,"line_end":28,"column_start":5,"column_end":108}},{"value":"/ assert_eq!(vec.icamax(), 2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26102,"byte_end":26134,"line_start":29,"line_end":29,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26139,"byte_end":26146,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26151,"byte_end":26160,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26971,"byte_end":26977,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"argmax","qualname":"<Vector<N, D, S>>::argmax","value":"fn (&self) -> (usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the largest value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26684,"byte_end":26764,"line_start":52,"line_end":52,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26769,"byte_end":26772,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26777,"byte_end":26792,"line_start":54,"line_end":54,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26797,"byte_end":26800,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26805,"byte_end":26812,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26817,"byte_end":26845,"line_start":57,"line_end":57,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26850,"byte_end":26890,"line_start":58,"line_end":58,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmax(), (2, 13));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26895,"byte_end":26933,"line_start":59,"line_end":59,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26938,"byte_end":26945,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26950,"byte_end":26959,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27678,"byte_end":27682,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"imax","qualname":"<Vector<N, D, S>>::imax","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27409,"byte_end":27479,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27484,"byte_end":27487,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27492,"byte_end":27507,"line_start":82,"line_end":82,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27512,"byte_end":27515,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27520,"byte_end":27527,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27532,"byte_end":27560,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27565,"byte_end":27605,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imax(), 2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27610,"byte_end":27640,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27645,"byte_end":27652,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27657,"byte_end":27666,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28015,"byte_end":28020,"line_start":104,"line_end":104,"column_start":12,"column_end":17},"name":"iamax","qualname":"<Vector<N, D, S>>::iamax","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest absolute value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27736,"byte_end":27815,"line_start":94,"line_end":94,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27820,"byte_end":27823,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27828,"byte_end":27843,"line_start":96,"line_end":96,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27848,"byte_end":27851,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27856,"byte_end":27863,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27868,"byte_end":27896,"line_start":99,"line_end":99,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27901,"byte_end":27941,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamax(), 1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27946,"byte_end":27977,"line_start":101,"line_end":101,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27982,"byte_end":27989,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":27994,"byte_end":28003,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28760,"byte_end":28766,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"argmin","qualname":"<Vector<N, D, S>>::argmin","value":"fn (&self) -> (usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the smallest value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28471,"byte_end":28552,"line_start":123,"line_end":123,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28557,"byte_end":28560,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28565,"byte_end":28580,"line_start":125,"line_end":125,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28585,"byte_end":28588,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28593,"byte_end":28600,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28605,"byte_end":28633,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28638,"byte_end":28678,"line_start":129,"line_end":129,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmin(), (1, -15));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28683,"byte_end":28722,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28727,"byte_end":28734,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":28739,"byte_end":28748,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29468,"byte_end":29472,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"imin","qualname":"<Vector<N, D, S>>::imin","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29198,"byte_end":29269,"line_start":151,"line_end":151,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29274,"byte_end":29277,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29282,"byte_end":29297,"line_start":153,"line_end":153,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29302,"byte_end":29305,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29310,"byte_end":29317,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29322,"byte_end":29350,"line_start":156,"line_end":156,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29355,"byte_end":29395,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imin(), 1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29400,"byte_end":29430,"line_start":158,"line_end":158,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29435,"byte_end":29442,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29447,"byte_end":29456,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29806,"byte_end":29811,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"iamin","qualname":"<Vector<N, D, S>>::iamin","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest absolute value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29526,"byte_end":29606,"line_start":165,"line_end":165,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29611,"byte_end":29614,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29619,"byte_end":29634,"line_start":167,"line_end":167,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29639,"byte_end":29642,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29647,"byte_end":29654,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29659,"byte_end":29687,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29692,"byte_end":29732,"line_start":171,"line_end":171,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamin(), 0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29737,"byte_end":29768,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29773,"byte_end":29780,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":29785,"byte_end":29794,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30996,"byte_end":31007,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"icamax_full","qualname":"<Matrix<N, R, C, S>>::icamax_full","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30424,"byte_end":30503,"line_start":197,"line_end":197,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30508,"byte_end":30511,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30516,"byte_end":30531,"line_start":199,"line_end":199,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30536,"byte_end":30539,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30544,"byte_end":30551,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30556,"byte_end":30587,"line_start":202,"line_end":202,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30592,"byte_end":30620,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30625,"byte_end":30656,"line_start":204,"line_end":204,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30661,"byte_end":30691,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(Complex::new(11.0, 1.0), Complex::new(-12.0, 2.0), Complex::new(13.0, 3.0),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30696,"byte_end":30800,"line_start":206,"line_end":206,"column_start":5,"column_end":109}},{"value":"/                          Complex::new(21.0, 43.0), Complex::new(22.0, 5.0), Complex::new(-23.0, 0.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30805,"byte_end":30911,"line_start":207,"line_end":207,"column_start":5,"column_end":111}},{"value":"/ assert_eq!(mat.icamax_full(), (1, 0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30916,"byte_end":30958,"line_start":208,"line_end":208,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30963,"byte_end":30970,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30975,"byte_end":30984,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31979,"byte_end":31989,"line_start":245,"line_end":245,"column_start":12,"column_end":22},"name":"iamax_full","qualname":"<Matrix<N, R, C, S>>::iamax_full","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31640,"byte_end":31719,"line_start":234,"line_end":234,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31724,"byte_end":31727,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31732,"byte_end":31747,"line_start":236,"line_end":236,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31752,"byte_end":31755,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31760,"byte_end":31767,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31772,"byte_end":31802,"line_start":239,"line_end":239,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, -12, 13,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31807,"byte_end":31848,"line_start":240,"line_end":240,"column_start":5,"column_end":46}},{"value":"/                          21, 22, -23);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31853,"byte_end":31895,"line_start":241,"line_end":241,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.iamax_full(), (1, 2));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31900,"byte_end":31941,"line_start":242,"line_end":242,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31946,"byte_end":31953,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31958,"byte_end":31967,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37704,"byte_end":37707,"line_start":393,"line_end":393,"column_start":12,"column_end":15},"name":"dot","qualname":"<Matrix<N, R, C, S>>::dot","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":36796,"byte_end":36866,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":36871,"byte_end":36874,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.transpose() * rhs`. For the sesquilinear complex dot product, use","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":36879,"byte_end":36971,"line_start":371,"line_end":371,"column_start":5,"column_end":97}},{"value":"/ `self.dotc(rhs)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":36976,"byte_end":36997,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37002,"byte_end":37005,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37010,"byte_end":37096,"line_start":374,"line_end":374,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37101,"byte_end":37178,"line_start":375,"line_end":375,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37183,"byte_end":37186,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37191,"byte_end":37206,"line_start":377,"line_end":377,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37211,"byte_end":37214,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37219,"byte_end":37226,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix2x3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37231,"byte_end":37272,"line_start":380,"line_end":380,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37277,"byte_end":37320,"line_start":381,"line_end":381,"column_start":5,"column_end":48}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37325,"byte_end":37368,"line_start":382,"line_end":382,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(vec1.dot(&vec2), 1.4);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37373,"byte_end":37410,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37415,"byte_end":37418,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37423,"byte_end":37467,"line_start":385,"line_end":385,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37472,"byte_end":37517,"line_start":386,"line_end":386,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix2x3::new(0.1, 0.2, 0.3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37522,"byte_end":37566,"line_start":387,"line_end":387,"column_start":5,"column_end":49}},{"value":"/                           0.4, 0.5, 0.6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37571,"byte_end":37616,"line_start":388,"line_end":388,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(mat1.dot(&mat2), 9.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37621,"byte_end":37658,"line_start":389,"line_end":389,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37663,"byte_end":37670,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37675,"byte_end":37678,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37683,"byte_end":37692,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38822,"byte_end":38826,"line_start":421,"line_end":421,"column_start":12,"column_end":16},"name":"dotc","qualname":"<Matrix<N, R, C, S>>::dotc","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The conjugate-linear dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The conjugate-linear dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":37914,"byte_end":38001,"line_start":401,"line_end":401,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38006,"byte_end":38009,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.adjoint() * rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38014,"byte_end":38058,"line_start":403,"line_end":403,"column_start":5,"column_end":49}},{"value":"/ For real vectors, this is identical to `self.dot(&rhs)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38063,"byte_end":38123,"line_start":404,"line_end":404,"column_start":5,"column_end":65}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38128,"byte_end":38214,"line_start":405,"line_end":405,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38219,"byte_end":38296,"line_start":406,"line_end":406,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38301,"byte_end":38304,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38309,"byte_end":38324,"line_start":408,"line_end":408,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38329,"byte_end":38332,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38337,"byte_end":38344,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector2, Complex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38349,"byte_end":38388,"line_start":411,"line_end":411,"column_start":5,"column_end":44}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38393,"byte_end":38469,"line_start":412,"line_end":412,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.4, 0.3), Complex::new(0.2, 0.1));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38474,"byte_end":38550,"line_start":413,"line_end":413,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(vec1.dotc(&vec2), Complex::new(2.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38555,"byte_end":38613,"line_start":414,"line_end":414,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38618,"byte_end":38621,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ // Note that for complex vectors, we generally have:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38626,"byte_end":38682,"line_start":416,"line_end":416,"column_start":5,"column_end":61}},{"value":"/ // vec1.dotc(&vec2) != vec2.dot(&vec2)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38687,"byte_end":38729,"line_start":417,"line_end":417,"column_start":5,"column_end":47}},{"value":"/ assert_ne!(vec1.dotc(&vec2), vec1.dot(&vec2));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38734,"byte_end":38784,"line_start":418,"line_end":418,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38789,"byte_end":38796,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":38801,"byte_end":38810,"line_start":420,"line_end":420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39738,"byte_end":39744,"line_start":448,"line_end":448,"column_start":12,"column_end":18},"name":"tr_dot","qualname":"<Matrix<N, R, C, S>>::tr_dot","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product between the transpose of `self` and `rhs`.","sig":null,"attributes":[{"value":"/ The dot product between the transpose of `self` and `rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39092,"byte_end":39154,"line_start":430,"line_end":430,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39159,"byte_end":39162,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39167,"byte_end":39182,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39187,"byte_end":39190,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39195,"byte_end":39202,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, RowVector3, Matrix2x3, Matrix3x2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39207,"byte_end":39271,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39276,"byte_end":39319,"line_start":436,"line_end":436,"column_start":5,"column_end":48}},{"value":"/ let vec2 = RowVector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39324,"byte_end":39370,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(vec1.tr_dot(&vec2), 1.4);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39375,"byte_end":39415,"line_start":438,"line_end":438,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39420,"byte_end":39423,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39428,"byte_end":39472,"line_start":440,"line_end":440,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39477,"byte_end":39522,"line_start":441,"line_end":441,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix3x2::new(0.1, 0.4,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39527,"byte_end":39566,"line_start":442,"line_end":442,"column_start":5,"column_end":44}},{"value":"/                           0.2, 0.5,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39571,"byte_end":39610,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/                           0.3, 0.6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39615,"byte_end":39655,"line_start":444,"line_end":444,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat1.tr_dot(&mat2), 9.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39660,"byte_end":39700,"line_start":445,"line_end":445,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39705,"byte_end":39712,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":39717,"byte_end":39726,"line_start":447,"line_end":447,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41456,"byte_end":41460,"line_start":509,"line_end":509,"column_start":12,"column_end":16},"name":"axpy","qualname":"<Vector<N, D, S>>::axpy","value":"fn <D2, SB> (&mut self, a: N, x: &Vector<N, D2, SB>, b: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = a * x + b * self`.","sig":null,"attributes":[{"value":"/ Computes `self = a * x + b * self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41045,"byte_end":41084,"line_start":495,"line_end":495,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41089,"byte_end":41092,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ If `b` is zero, `self` is never read from.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41097,"byte_end":41143,"line_start":497,"line_end":497,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41148,"byte_end":41151,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41156,"byte_end":41171,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41176,"byte_end":41179,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41184,"byte_end":41191,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41196,"byte_end":41224,"line_start":502,"line_end":502,"column_start":5,"column_end":33}},{"value":"/ let mut vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41229,"byte_end":41276,"line_start":503,"line_end":503,"column_start":5,"column_end":52}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41281,"byte_end":41324,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/ vec1.axpy(10.0, &vec2, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41329,"byte_end":41361,"line_start":505,"line_end":505,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(vec1, Vector3::new(6.0, 12.0, 18.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41366,"byte_end":41418,"line_start":506,"line_end":506,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41423,"byte_end":41430,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":41435,"byte_end":41444,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42612,"byte_end":42616,"line_start":546,"line_end":546,"column_start":12,"column_end":16},"name":"gemv","qualname":"<Vector<N, D, S>>::gemv","value":"fn <R2, C2, D3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42031,"byte_end":42122,"line_start":529,"line_end":529,"column_start":5,"column_end":96}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42127,"byte_end":42157,"line_start":530,"line_end":530,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42162,"byte_end":42165,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42170,"byte_end":42214,"line_start":532,"line_end":532,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42219,"byte_end":42222,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42227,"byte_end":42242,"line_start":534,"line_end":534,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42247,"byte_end":42250,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42255,"byte_end":42262,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42267,"byte_end":42306,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42311,"byte_end":42353,"line_start":538,"line_end":538,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42358,"byte_end":42396,"line_start":539,"line_end":539,"column_start":5,"column_end":43}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42401,"byte_end":42437,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/                        3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42442,"byte_end":42479,"line_start":541,"line_end":541,"column_start":5,"column_end":42}},{"value":"/ vec1.gemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42484,"byte_end":42522,"line_start":542,"line_end":542,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 21.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42527,"byte_end":42574,"line_start":543,"line_end":543,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42579,"byte_end":42586,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":42591,"byte_end":42600,"line_start":545,"line_end":545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":45399,"byte_end":45408,"line_start":640,"line_end":640,"column_start":12,"column_end":21},"name":"gemv_symm","qualname":"<Vector<N, D, S>>::gemv_symm","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, a: &SquareMatrix<N, D2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.\n","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":45106,"byte_end":45199,"line_start":636,"line_end":636,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":45204,"byte_end":45280,"line_start":637,"line_end":637,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":45285,"byte_end":45294,"line_start":638,"line_end":638,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `sygemv` to match the original BLAS terminology.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":45299,"byte_end":45387,"line_start":639,"line_end":639,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46997,"byte_end":47003,"line_start":684,"line_end":684,"column_start":12,"column_end":18},"name":"sygemv","qualname":"<Vector<N, D, S>>::sygemv","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, a: &SquareMatrix<N, D2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":45775,"byte_end":45868,"line_start":655,"line_end":655,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":45873,"byte_end":45915,"line_start":656,"line_end":656,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":45920,"byte_end":45923,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ For hermitian matrices, use `.hegemv` instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":45928,"byte_end":45978,"line_start":658,"line_end":658,"column_start":5,"column_end":55}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":45983,"byte_end":46077,"line_start":659,"line_end":659,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46082,"byte_end":46128,"line_start":660,"line_end":660,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46133,"byte_end":46136,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46141,"byte_end":46156,"line_start":662,"line_end":662,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46161,"byte_end":46164,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46169,"byte_end":46176,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46181,"byte_end":46220,"line_start":665,"line_end":665,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46225,"byte_end":46261,"line_start":666,"line_end":666,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46266,"byte_end":46303,"line_start":667,"line_end":667,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46308,"byte_end":46350,"line_start":668,"line_end":668,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46355,"byte_end":46393,"line_start":669,"line_end":669,"column_start":5,"column_end":43}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46398,"byte_end":46438,"line_start":670,"line_end":670,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46443,"byte_end":46490,"line_start":671,"line_end":671,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46495,"byte_end":46498,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46503,"byte_end":46506,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46511,"byte_end":46589,"line_start":674,"line_end":674,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46594,"byte_end":46670,"line_start":675,"line_end":675,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46675,"byte_end":46720,"line_start":676,"line_end":676,"column_start":5,"column_end":50}},{"value":"/ let mat = Matrix2::new(1.0, 9999999.9999999,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46725,"byte_end":46773,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46778,"byte_end":46815,"line_start":678,"line_end":678,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46820,"byte_end":46862,"line_start":679,"line_end":679,"column_start":5,"column_end":47}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46867,"byte_end":46907,"line_start":680,"line_end":680,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46912,"byte_end":46959,"line_start":681,"line_end":681,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46964,"byte_end":46971,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":46976,"byte_end":46985,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":49089,"byte_end":49095,"line_start":729,"line_end":729,"column_start":12,"column_end":18},"name":"hegemv","qualname":"<Vector<N, D, S>>::hegemv","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, a: &SquareMatrix<N, D2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47387,"byte_end":47481,"line_start":699,"line_end":699,"column_start":5,"column_end":99}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47486,"byte_end":47528,"line_start":700,"line_end":700,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47533,"byte_end":47536,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47541,"byte_end":47635,"line_start":702,"line_end":702,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47640,"byte_end":47686,"line_start":703,"line_end":703,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47691,"byte_end":47694,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47699,"byte_end":47714,"line_start":705,"line_end":705,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47719,"byte_end":47722,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47727,"byte_end":47734,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47739,"byte_end":47787,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(2.0, -0.1),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47792,"byte_end":47867,"line_start":709,"line_end":709,"column_start":5,"column_end":80}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47872,"byte_end":47947,"line_start":710,"line_end":710,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":47952,"byte_end":48032,"line_start":711,"line_end":711,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48037,"byte_end":48113,"line_start":712,"line_end":712,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48118,"byte_end":48198,"line_start":713,"line_end":713,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48203,"byte_end":48293,"line_start":714,"line_end":714,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48298,"byte_end":48301,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48306,"byte_end":48309,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48314,"byte_end":48392,"line_start":717,"line_end":717,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48397,"byte_end":48473,"line_start":718,"line_end":718,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48478,"byte_end":48523,"line_start":719,"line_end":719,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48528,"byte_end":48531,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(99999999.9, 999999999.9),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48536,"byte_end":48625,"line_start":721,"line_end":721,"column_start":5,"column_end":94}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48630,"byte_end":48705,"line_start":722,"line_end":722,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48710,"byte_end":48790,"line_start":723,"line_end":723,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48795,"byte_end":48871,"line_start":724,"line_end":724,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48876,"byte_end":48956,"line_start":725,"line_end":725,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":48961,"byte_end":49051,"line_start":726,"line_end":726,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":49056,"byte_end":49063,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":49068,"byte_end":49077,"line_start":728,"line_end":728,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51284,"byte_end":51291,"line_start":805,"line_end":805,"column_start":12,"column_end":19},"name":"gemv_tr","qualname":"<Vector<N, D, S>>::gemv_tr","value":"fn <R2, C2, D3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":50629,"byte_end":50732,"line_start":786,"line_end":786,"column_start":5,"column_end":108}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":50737,"byte_end":50767,"line_start":787,"line_end":787,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":50772,"byte_end":50775,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":50780,"byte_end":50824,"line_start":789,"line_end":789,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":50829,"byte_end":50832,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":50837,"byte_end":50852,"line_start":791,"line_end":791,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":50857,"byte_end":50860,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":50865,"byte_end":50872,"line_start":793,"line_end":793,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":50877,"byte_end":50916,"line_start":794,"line_end":794,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":50921,"byte_end":50957,"line_start":795,"line_end":795,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":50962,"byte_end":50999,"line_start":796,"line_end":796,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51004,"byte_end":51046,"line_start":797,"line_end":797,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51051,"byte_end":51089,"line_start":798,"line_end":798,"column_start":5,"column_end":43}},{"value":"/ let expected = mat.transpose() * vec2 * 10.0 + vec1 * 5.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51094,"byte_end":51156,"line_start":799,"line_end":799,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51161,"byte_end":51164,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_tr(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51169,"byte_end":51210,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51215,"byte_end":51246,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51251,"byte_end":51258,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51263,"byte_end":51272,"line_start":804,"line_end":804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":52634,"byte_end":52641,"line_start":840,"line_end":840,"column_start":12,"column_end":19},"name":"gemv_ad","qualname":"<Vector<N, D, S>>::gemv_ad","value":"fn <R2, C2, D3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51683,"byte_end":51784,"line_start":820,"line_end":820,"column_start":5,"column_end":106}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51789,"byte_end":51819,"line_start":821,"line_end":821,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51824,"byte_end":51827,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ For real matrices, this is the same as `.gemv_tr`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51832,"byte_end":51886,"line_start":823,"line_end":823,"column_start":5,"column_end":59}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51891,"byte_end":51935,"line_start":824,"line_end":824,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51940,"byte_end":51943,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51948,"byte_end":51963,"line_start":826,"line_end":826,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51968,"byte_end":51971,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51976,"byte_end":51983,"line_start":828,"line_end":828,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":51988,"byte_end":52036,"line_start":829,"line_end":829,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":52041,"byte_end":52115,"line_start":830,"line_end":830,"column_start":5,"column_end":79}},{"value":"/                        Complex::new(5.0, 6.0), Complex::new(7.0, 8.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":52120,"byte_end":52195,"line_start":831,"line_end":831,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":52200,"byte_end":52280,"line_start":832,"line_end":832,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":52285,"byte_end":52361,"line_start":833,"line_end":833,"column_start":5,"column_end":81}},{"value":"/ let expected = mat.adjoint() * vec2 * Complex::new(10.0, 20.0) + vec1 * Complex::new(5.0, 15.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":52366,"byte_end":52466,"line_start":834,"line_end":834,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":52471,"byte_end":52474,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_ad(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":52479,"byte_end":52560,"line_start":836,"line_end":836,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":52565,"byte_end":52596,"line_start":837,"line_end":837,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":52601,"byte_end":52608,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":52613,"byte_end":52622,"line_start":839,"line_end":839,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54509,"byte_end":54512,"line_start":906,"line_end":906,"column_start":12,"column_end":15},"name":"ger","qualname":"<Matrix<N, R1, C1, S>>::ger","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":53960,"byte_end":54022,"line_start":889,"line_end":889,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54027,"byte_end":54030,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54035,"byte_end":54079,"line_start":891,"line_end":891,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54084,"byte_end":54087,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54092,"byte_end":54107,"line_start":893,"line_end":893,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54112,"byte_end":54115,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54120,"byte_end":54127,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54132,"byte_end":54182,"line_start":896,"line_end":896,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2x3::repeat(4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54187,"byte_end":54228,"line_start":897,"line_end":897,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54233,"byte_end":54271,"line_start":898,"line_end":898,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54276,"byte_end":54319,"line_start":899,"line_end":899,"column_start":5,"column_end":48}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54324,"byte_end":54386,"line_start":900,"line_end":900,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54391,"byte_end":54394,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ mat.ger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54399,"byte_end":54436,"line_start":902,"line_end":902,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54441,"byte_end":54471,"line_start":903,"line_end":903,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54476,"byte_end":54483,"line_start":904,"line_end":904,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54488,"byte_end":54497,"line_start":905,"line_end":905,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55650,"byte_end":55654,"line_start":939,"line_end":939,"column_start":12,"column_end":16},"name":"gerc","qualname":"<Matrix<N, R1, C1, S>>::gerc","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54857,"byte_end":54917,"line_start":921,"line_end":921,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54922,"byte_end":54925,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54930,"byte_end":54974,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54979,"byte_end":54982,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":54987,"byte_end":55002,"line_start":925,"line_end":925,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55007,"byte_end":55010,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55015,"byte_end":55022,"line_start":927,"line_end":927,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55027,"byte_end":55066,"line_start":928,"line_end":928,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3, Complex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55071,"byte_end":55130,"line_start":929,"line_end":929,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2x3::repeat(Complex::new(4.0, 5.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55135,"byte_end":55195,"line_start":930,"line_end":930,"column_start":5,"column_end":65}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55200,"byte_end":55276,"line_start":931,"line_end":931,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector3::new(Complex::new(0.6, 0.5), Complex::new(0.4, 0.5), Complex::new(0.2, 0.1));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55281,"byte_end":55381,"line_start":932,"line_end":932,"column_start":5,"column_end":105}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55386,"byte_end":55486,"line_start":933,"line_end":933,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55491,"byte_end":55494,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ mat.gerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55499,"byte_end":55577,"line_start":935,"line_end":935,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55582,"byte_end":55612,"line_start":936,"line_end":936,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55617,"byte_end":55624,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":55629,"byte_end":55638,"line_start":938,"line_end":938,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56855,"byte_end":56859,"line_start":976,"line_end":976,"column_start":12,"column_end":16},"name":"gemm","qualname":"<Matrix<N, R1, C1, S>>::gemm","value":"fn <R2, C2, R3, C3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56026,"byte_end":56109,"line_start":954,"line_end":954,"column_start":5,"column_end":88}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56114,"byte_end":56148,"line_start":955,"line_end":955,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56153,"byte_end":56156,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56161,"byte_end":56205,"line_start":957,"line_end":957,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56210,"byte_end":56213,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56218,"byte_end":56233,"line_start":959,"line_end":959,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56238,"byte_end":56241,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56246,"byte_end":56253,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56258,"byte_end":56297,"line_start":962,"line_end":962,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x4, Matrix2x4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56302,"byte_end":56356,"line_start":963,"line_end":963,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56361,"byte_end":56402,"line_start":964,"line_end":964,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56407,"byte_end":56451,"line_start":965,"line_end":965,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56456,"byte_end":56501,"line_start":966,"line_end":966,"column_start":5,"column_end":50}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56506,"byte_end":56555,"line_start":967,"line_end":967,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56560,"byte_end":56609,"line_start":968,"line_end":968,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56614,"byte_end":56664,"line_start":969,"line_end":969,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2 * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56669,"byte_end":56720,"line_start":970,"line_end":970,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56725,"byte_end":56728,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56733,"byte_end":56772,"line_start":972,"line_end":972,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(mat1, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56777,"byte_end":56817,"line_start":973,"line_end":973,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56822,"byte_end":56829,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":56834,"byte_end":56843,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61791,"byte_end":61798,"line_start":1109,"line_end":1109,"column_start":12,"column_end":19},"name":"gemm_tr","qualname":"<Matrix<N, R1, C1, S>>::gemm_tr","value":"fn <R2, C2, R3, C3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":60910,"byte_end":61005,"line_start":1086,"line_end":1086,"column_start":5,"column_end":100}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61010,"byte_end":61044,"line_start":1087,"line_end":1087,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61049,"byte_end":61052,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61057,"byte_end":61101,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61106,"byte_end":61109,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61114,"byte_end":61129,"line_start":1091,"line_end":1091,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61134,"byte_end":61137,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61142,"byte_end":61149,"line_start":1093,"line_end":1093,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61154,"byte_end":61193,"line_start":1094,"line_end":1094,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61198,"byte_end":61252,"line_start":1095,"line_end":1095,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61257,"byte_end":61298,"line_start":1096,"line_end":1096,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(1.0, 4.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61303,"byte_end":61342,"line_start":1097,"line_end":1097,"column_start":5,"column_end":44}},{"value":"/                           2.0, 5.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61347,"byte_end":61386,"line_start":1098,"line_end":1098,"column_start":5,"column_end":44}},{"value":"/                           3.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61391,"byte_end":61431,"line_start":1099,"line_end":1099,"column_start":5,"column_end":45}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61436,"byte_end":61485,"line_start":1100,"line_end":1100,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61490,"byte_end":61539,"line_start":1101,"line_end":1101,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61544,"byte_end":61594,"line_start":1102,"line_end":1102,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2.transpose() * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61599,"byte_end":61662,"line_start":1103,"line_end":1103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61667,"byte_end":61670,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_tr(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61675,"byte_end":61717,"line_start":1105,"line_end":1105,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61722,"byte_end":61753,"line_start":1106,"line_end":1106,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61758,"byte_end":61765,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":61770,"byte_end":61779,"line_start":1108,"line_end":1108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":64077,"byte_end":64084,"line_start":1167,"line_end":1167,"column_start":12,"column_end":19},"name":"gemm_ad","qualname":"<Matrix<N, R1, C1, S>>::gemm_ad","value":"fn <R2, C2, R3, C3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":62766,"byte_end":62859,"line_start":1144,"line_end":1144,"column_start":5,"column_end":98}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":62864,"byte_end":62898,"line_start":1145,"line_end":1145,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":62903,"byte_end":62906,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":62911,"byte_end":62955,"line_start":1147,"line_end":1147,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":62960,"byte_end":62963,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":62968,"byte_end":62983,"line_start":1149,"line_end":1149,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":62988,"byte_end":62991,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":62996,"byte_end":63003,"line_start":1151,"line_end":1151,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63008,"byte_end":63047,"line_start":1152,"line_end":1152,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4, Complex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63052,"byte_end":63115,"line_start":1153,"line_end":1153,"column_start":5,"column_end":68}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63120,"byte_end":63161,"line_start":1154,"line_end":1154,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(Complex::new(1.0, 4.0), Complex::new(7.0, 8.0),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63166,"byte_end":63243,"line_start":1155,"line_end":1155,"column_start":5,"column_end":82}},{"value":"/                           Complex::new(2.0, 5.0), Complex::new(9.0, 10.0),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63248,"byte_end":63326,"line_start":1156,"line_end":1156,"column_start":5,"column_end":83}},{"value":"/                           Complex::new(3.0, 6.0), Complex::new(11.0, 12.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63331,"byte_end":63411,"line_start":1157,"line_end":1157,"column_start":5,"column_end":85}},{"value":"/ let mat3 = Matrix3x4::new(Complex::new(0.1, 1.3), Complex::new(0.2, 1.4), Complex::new(0.3, 1.5), Complex::new(0.4, 1.6),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63416,"byte_end":63541,"line_start":1158,"line_end":1158,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.5, 1.7), Complex::new(0.6, 1.8), Complex::new(0.7, 1.9), Complex::new(0.8, 2.0),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63546,"byte_end":63671,"line_start":1159,"line_end":1159,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.9, 2.1), Complex::new(1.0, 2.2), Complex::new(1.1, 2.3), Complex::new(1.2, 2.4));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63676,"byte_end":63802,"line_start":1160,"line_end":1160,"column_start":5,"column_end":131}},{"value":"/ let expected = mat2.adjoint() * mat3 * Complex::new(10.0, 20.0) + mat1 * Complex::new(5.0, 15.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63807,"byte_end":63908,"line_start":1161,"line_end":1161,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63913,"byte_end":63916,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_ad(Complex::new(10.0, 20.0), &mat2, &mat3, Complex::new(5.0, 15.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":63921,"byte_end":64003,"line_start":1163,"line_end":1163,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":64008,"byte_end":64039,"line_start":1164,"line_end":1164,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":64044,"byte_end":64051,"line_start":1165,"line_end":1165,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":64056,"byte_end":64065,"line_start":1166,"line_end":1166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67183,"byte_end":67191,"line_start":1262,"line_end":1262,"column_start":12,"column_end":20},"name":"ger_symm","qualname":"<Matrix<N, R1, C1, S>>::ger_symm","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66194,"byte_end":66288,"line_start":1241,"line_end":1241,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66293,"byte_end":66304,"line_start":1242,"line_end":1242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66309,"byte_end":66312,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66317,"byte_end":66412,"line_start":1244,"line_end":1244,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66417,"byte_end":66477,"line_start":1245,"line_end":1245,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66482,"byte_end":66485,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66490,"byte_end":66505,"line_start":1247,"line_end":1247,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66510,"byte_end":66513,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66518,"byte_end":66525,"line_start":1249,"line_end":1249,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66530,"byte_end":66569,"line_start":1250,"line_end":1250,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66574,"byte_end":66612,"line_start":1251,"line_end":1251,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66617,"byte_end":66655,"line_start":1252,"line_end":1252,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66660,"byte_end":66698,"line_start":1253,"line_end":1253,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66703,"byte_end":66765,"line_start":1254,"line_end":1254,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66770,"byte_end":66876,"line_start":1255,"line_end":1255,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66881,"byte_end":66884,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ mat.ger_symm(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66889,"byte_end":66931,"line_start":1257,"line_end":1257,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":66936,"byte_end":67000,"line_start":1258,"line_end":1258,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67005,"byte_end":67065,"line_start":1259,"line_end":1259,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67070,"byte_end":67079,"line_start":1260,"line_end":1260,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `syger` to match the original BLAS terminology.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67084,"byte_end":67171,"line_start":1261,"line_end":1261,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68487,"byte_end":68492,"line_start":1298,"line_end":1298,"column_start":12,"column_end":17},"name":"syger","qualname":"<Matrix<N, R1, C1, S>>::syger","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67530,"byte_end":67624,"line_start":1277,"line_end":1277,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67629,"byte_end":67640,"line_start":1278,"line_end":1278,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67645,"byte_end":67648,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ For hermitian complex matrices, use `.hegerc` instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67653,"byte_end":67711,"line_start":1280,"line_end":1280,"column_start":5,"column_end":63}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67716,"byte_end":67811,"line_start":1281,"line_end":1281,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67816,"byte_end":67876,"line_start":1282,"line_end":1282,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67881,"byte_end":67884,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67889,"byte_end":67904,"line_start":1284,"line_end":1284,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67909,"byte_end":67912,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67917,"byte_end":67924,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67929,"byte_end":67968,"line_start":1287,"line_end":1287,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":67973,"byte_end":68011,"line_start":1288,"line_end":1288,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68016,"byte_end":68054,"line_start":1289,"line_end":1289,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68059,"byte_end":68097,"line_start":1290,"line_end":1290,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68102,"byte_end":68164,"line_start":1291,"line_end":1291,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68169,"byte_end":68275,"line_start":1292,"line_end":1292,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68280,"byte_end":68283,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ mat.syger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68288,"byte_end":68327,"line_start":1294,"line_end":1294,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68332,"byte_end":68396,"line_start":1295,"line_end":1295,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68401,"byte_end":68461,"line_start":1296,"line_end":1296,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68466,"byte_end":68475,"line_start":1297,"line_end":1297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69950,"byte_end":69956,"line_start":1333,"line_end":1333,"column_start":12,"column_end":18},"name":"hegerc","qualname":"<Matrix<N, R1, C1, S>>::hegerc","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68839,"byte_end":68932,"line_start":1313,"line_end":1313,"column_start":5,"column_end":98}},{"value":"/ matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68937,"byte_end":68948,"line_start":1314,"line_end":1314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68953,"byte_end":68956,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":68961,"byte_end":69056,"line_start":1316,"line_end":1316,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69061,"byte_end":69121,"line_start":1317,"line_end":1317,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69126,"byte_end":69129,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69134,"byte_end":69149,"line_start":1319,"line_end":1319,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69154,"byte_end":69157,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69162,"byte_end":69169,"line_start":1321,"line_end":1321,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69174,"byte_end":69222,"line_start":1322,"line_end":1322,"column_start":5,"column_end":53}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69227,"byte_end":69265,"line_start":1323,"line_end":1323,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 3.0), Complex::new(2.0, 4.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69270,"byte_end":69346,"line_start":1324,"line_end":1324,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.2, 0.4), Complex::new(0.1, 0.3));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69351,"byte_end":69427,"line_start":1325,"line_end":1325,"column_start":5,"column_end":81}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69432,"byte_end":69532,"line_start":1326,"line_end":1326,"column_start":5,"column_end":105}},{"value":"/ mat.m12 = Complex::new(99999.99999, 88888.88888); // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69537,"byte_end":69670,"line_start":1327,"line_end":1327,"column_start":5,"column_end":138}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69675,"byte_end":69678,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ mat.hegerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69683,"byte_end":69763,"line_start":1329,"line_end":1329,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69768,"byte_end":69832,"line_start":1330,"line_end":1330,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, Complex::new(99999.99999, 88888.88888)); // This was untouched.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69837,"byte_end":69924,"line_start":1331,"line_end":1331,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":69929,"byte_end":69938,"line_start":1332,"line_end":1332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71869,"byte_end":71895,"line_start":1378,"line_end":1378,"column_start":12,"column_end":38},"name":"quadform_tr_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr_with_workspace","value":"fn <D2, S2, R3, C3, S3, D4, S4> (&mut self, work: &mut Vector<N, D2, S2>, alpha: N, lhs: &Matrix<N, R3, C3, S3>, mid: &SquareMatrix<N, D4, S4>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70453,"byte_end":70544,"line_start":1352,"line_end":1352,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70549,"byte_end":70552,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70557,"byte_end":70647,"line_start":1354,"line_end":1354,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70652,"byte_end":70655,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70660,"byte_end":70675,"line_start":1356,"line_end":1356,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70680,"byte_end":70683,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70688,"byte_end":70695,"line_start":1358,"line_end":1358,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70700,"byte_end":70739,"line_start":1359,"line_end":1359,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70744,"byte_end":70783,"line_start":1360,"line_end":1360,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70788,"byte_end":70862,"line_start":1361,"line_end":1361,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70867,"byte_end":70948,"line_start":1362,"line_end":1362,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70953,"byte_end":71032,"line_start":1363,"line_end":1363,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71037,"byte_end":71113,"line_start":1364,"line_end":1364,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71118,"byte_end":71160,"line_start":1365,"line_end":1365,"column_start":5,"column_end":47}},{"value":"/ let lhs = DMatrix::from_row_slice(2, 3, &[1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71165,"byte_end":71225,"line_start":1366,"line_end":1366,"column_start":5,"column_end":65}},{"value":"/                                           4.0, 5.0, 6.0]);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71230,"byte_end":71292,"line_start":1367,"line_end":1367,"column_start":5,"column_end":67}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71297,"byte_end":71357,"line_start":1368,"line_end":1368,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71362,"byte_end":71422,"line_start":1369,"line_end":1369,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71427,"byte_end":71489,"line_start":1370,"line_end":1370,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71494,"byte_end":71553,"line_start":1371,"line_end":1371,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71558,"byte_end":71600,"line_start":1372,"line_end":1372,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71605,"byte_end":71652,"line_start":1373,"line_end":1373,"column_start":5,"column_end":52}},{"value":"/ let expected = &lhs * &mid * lhs.transpose() * 10.0 + &mat * 5.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71657,"byte_end":71726,"line_start":1374,"line_end":1374,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71731,"byte_end":71734,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr_with_workspace(&mut workspace, 10.0, &lhs, &mid, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71739,"byte_end":71813,"line_start":1376,"line_end":1376,"column_start":5,"column_end":79}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":71818,"byte_end":71857,"line_start":1377,"line_end":1377,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73624,"byte_end":73635,"line_start":1425,"line_end":1425,"column_start":12,"column_end":23},"name":"quadform_tr","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr","value":"fn <R3, C3, S3, D4, S4> (&mut self, alpha: N, lhs: &Matrix<N, R3, C3, S3>, mid: &SquareMatrix<N, D4, S4>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":72658,"byte_end":72749,"line_start":1404,"line_end":1404,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":72754,"byte_end":72757,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D1 for intermediate results.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":72762,"byte_end":72841,"line_start":1406,"line_end":1406,"column_start":5,"column_end":84}},{"value":"/ If `D1` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":72846,"byte_end":72929,"line_start":1407,"line_end":1407,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_tr_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":72934,"byte_end":73006,"line_start":1408,"line_end":1408,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73011,"byte_end":73014,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73019,"byte_end":73034,"line_start":1410,"line_end":1410,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73039,"byte_end":73042,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73047,"byte_end":73054,"line_start":1412,"line_end":1412,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73059,"byte_end":73098,"line_start":1413,"line_end":1413,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3, Matrix2x3, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73103,"byte_end":73162,"line_start":1414,"line_end":1414,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73167,"byte_end":73205,"line_start":1415,"line_end":1415,"column_start":5,"column_end":43}},{"value":"/ let lhs = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73210,"byte_end":73253,"line_start":1416,"line_end":1416,"column_start":5,"column_end":48}},{"value":"/                          4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73258,"byte_end":73302,"line_start":1417,"line_end":1417,"column_start":5,"column_end":49}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73307,"byte_end":73348,"line_start":1418,"line_end":1418,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73353,"byte_end":73394,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73399,"byte_end":73441,"line_start":1420,"line_end":1420,"column_start":5,"column_end":47}},{"value":"/ let expected = lhs * mid * lhs.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73446,"byte_end":73512,"line_start":1421,"line_end":1421,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73517,"byte_end":73520,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr(10.0, &lhs, &mid, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73525,"byte_end":73568,"line_start":1423,"line_end":1423,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":73573,"byte_end":73612,"line_start":1424,"line_end":1424,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75650,"byte_end":75673,"line_start":1469,"line_end":1469,"column_start":12,"column_end":35},"name":"quadform_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_with_workspace","value":"fn <D2, S2, D3, S3, R4, C4, S4> (&mut self, work: &mut Vector<N, D2, S2>, alpha: N, mid: &SquareMatrix<N, D3, S3>, rhs: &Matrix<N, R4, C4, S4>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74215,"byte_end":74306,"line_start":1444,"line_end":1444,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74311,"byte_end":74314,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74319,"byte_end":74409,"line_start":1446,"line_end":1446,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74414,"byte_end":74417,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74422,"byte_end":74429,"line_start":1448,"line_end":1448,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74434,"byte_end":74473,"line_start":1449,"line_end":1449,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74478,"byte_end":74517,"line_start":1450,"line_end":1450,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74522,"byte_end":74596,"line_start":1451,"line_end":1451,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74601,"byte_end":74682,"line_start":1452,"line_end":1452,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74687,"byte_end":74766,"line_start":1453,"line_end":1453,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74771,"byte_end":74847,"line_start":1454,"line_end":1454,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74852,"byte_end":74894,"line_start":1455,"line_end":1455,"column_start":5,"column_end":47}},{"value":"/ let rhs = DMatrix::from_row_slice(3, 2, &[1.0, 2.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74899,"byte_end":74954,"line_start":1456,"line_end":1456,"column_start":5,"column_end":60}},{"value":"/                                           3.0, 4.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":74959,"byte_end":75014,"line_start":1457,"line_end":1457,"column_start":5,"column_end":60}},{"value":"/                                           5.0, 6.0]);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75019,"byte_end":75076,"line_start":1458,"line_end":1458,"column_start":5,"column_end":62}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75081,"byte_end":75141,"line_start":1459,"line_end":1459,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75146,"byte_end":75206,"line_start":1460,"line_end":1460,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75211,"byte_end":75273,"line_start":1461,"line_end":1461,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75278,"byte_end":75337,"line_start":1462,"line_end":1462,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75342,"byte_end":75384,"line_start":1463,"line_end":1463,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75389,"byte_end":75436,"line_start":1464,"line_end":1464,"column_start":5,"column_end":52}},{"value":"/ let expected = rhs.transpose() * &mid * &rhs * 10.0 + &mat * 5.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75441,"byte_end":75510,"line_start":1465,"line_end":1465,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75515,"byte_end":75518,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_with_workspace(&mut workspace, 10.0, &mid, &rhs, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75523,"byte_end":75594,"line_start":1467,"line_end":1467,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":75599,"byte_end":75638,"line_start":1468,"line_end":1468,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":77434,"byte_end":77442,"line_start":1516,"line_end":1516,"column_start":12,"column_end":20},"name":"quadform","qualname":"<SquareMatrix<N, D1, S>>::quadform","value":"fn <D2, S2, R3, C3, S3> (&mut self, alpha: N, mid: &SquareMatrix<N, D2, S2>, rhs: &Matrix<N, R3, C3, S3>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":76478,"byte_end":76569,"line_start":1496,"line_end":1496,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":76574,"byte_end":76577,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D2 for intermediate results.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":76582,"byte_end":76661,"line_start":1498,"line_end":1498,"column_start":5,"column_end":84}},{"value":"/ If `D2` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":76666,"byte_end":76749,"line_start":1499,"line_end":1499,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":76754,"byte_end":76823,"line_start":1500,"line_end":1500,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":76828,"byte_end":76831,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":76836,"byte_end":76843,"line_start":1502,"line_end":1502,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":76848,"byte_end":76887,"line_start":1503,"line_end":1503,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3x2, Matrix3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":76892,"byte_end":76942,"line_start":1504,"line_end":1504,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":76947,"byte_end":76985,"line_start":1505,"line_end":1505,"column_start":5,"column_end":43}},{"value":"/ let rhs = Matrix3x2::new(1.0, 2.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":76990,"byte_end":77028,"line_start":1506,"line_end":1506,"column_start":5,"column_end":43}},{"value":"/                          3.0, 4.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":77033,"byte_end":77071,"line_start":1507,"line_end":1507,"column_start":5,"column_end":43}},{"value":"/                          5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":77076,"byte_end":77115,"line_start":1508,"line_end":1508,"column_start":5,"column_end":44}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":77120,"byte_end":77161,"line_start":1509,"line_end":1509,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":77166,"byte_end":77207,"line_start":1510,"line_end":1510,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":77212,"byte_end":77254,"line_start":1511,"line_end":1511,"column_start":5,"column_end":47}},{"value":"/ let expected = rhs.transpose() * mid * rhs * 10.0 + mat * 5.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":77259,"byte_end":77325,"line_start":1512,"line_end":1512,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":77330,"byte_end":77333,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ mat.quadform(10.0, &mid, &rhs, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":77338,"byte_end":77378,"line_start":1514,"line_end":1514,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":77383,"byte_end":77422,"line_start":1515,"line_end":1515,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":317},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constraint","qualname":"::base::constraint","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":329},{"krate":0,"index":334},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":8002},{"krate":0,"index":8006},{"krate":0,"index":8009},{"krate":0,"index":8012},{"krate":0,"index":8015},{"krate":0,"index":8019},{"krate":0,"index":8022},{"krate":0,"index":8025},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358}],"decl_id":null,"docs":" Compatibility constraints between matrix shapes, e.g., for addition or multiplication.\n","sig":null,"attributes":[{"value":"! Compatibility constraints between matrix shapes, e.g., for addition or multiplication.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78034,"byte_end":78124,"line_start":1,"line_end":1,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":322},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78253,"byte_end":78268,"line_start":6,"line_end":6,"column_start":12,"column_end":27},"name":"ShapeConstraint","qualname":"::base::constraint::ShapeConstraint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type used in `where` clauses for enforcing constraints.\n","sig":null,"attributes":[{"value":"/ A type used in `where` clauses for enforcing constraints.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78180,"byte_end":78241,"line_start":5,"line_end":5,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":324},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78329,"byte_end":78344,"line_start":9,"line_end":9,"column_start":11,"column_end":26},"name":"AreMultipliable","qualname":"::base::constraint::AreMultipliable","value":"AreMultipliable<R1: Dim, C1: Dim, R2: Dim, C2: Dim>: DimEq<C1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Constraints `C1` and `R2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `C1` and `R2` to be equivalent.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78271,"byte_end":78318,"line_start":8,"line_end":8,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":334},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78592,"byte_end":78597,"line_start":15,"line_end":15,"column_start":11,"column_end":16},"name":"DimEq","qualname":"::base::constraint::DimEq","value":"DimEq<D1: Dim, D2: Dim>","parent":null,"children":[{"krate":0,"index":337}],"decl_id":null,"docs":" Constraints `D1` and `D2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `D1` and `D2` to be equivalent.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78534,"byte_end":78581,"line_start":14,"line_end":14,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":337},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78746,"byte_end":78760,"line_start":18,"line_end":18,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::DimEq::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78622,"byte_end":78718,"line_start":16,"line_end":16,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78723,"byte_end":78736,"line_start":17,"line_end":17,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":8002},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":79993,"byte_end":80009,"line_start":61,"line_end":61,"column_start":5,"column_end":21},"name":"SameNumberOfRows","qualname":"::base::constraint::SameNumberOfRows","value":"SameNumberOfRows<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":8005}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of rows of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8015},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80143,"byte_end":80162,"line_start":65,"line_end":65,"column_start":5,"column_end":24},"name":"SameNumberOfColumns","qualname":"::base::constraint::SameNumberOfColumns","value":"SameNumberOfColumns<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":8018}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of columns of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":348},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80308,"byte_end":80321,"line_start":70,"line_end":70,"column_start":11,"column_end":24},"name":"SameDimension","qualname":"::base::constraint::SameDimension","value":"SameDimension<D1: Dim, D2: Dim>: SameNumberOfRows<D1, D2> + SameNumberOfColumns<D1, D2>","parent":null,"children":[{"krate":0,"index":351}],"decl_id":null,"docs":" Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic\n entities (e.g. square matrices).\n","sig":null,"attributes":[{"value":"/ Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80167,"byte_end":80260,"line_start":68,"line_end":68,"column_start":1,"column_end":94}},{"value":"/ entities (e.g. square matrices).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80261,"byte_end":80297,"line_start":69,"line_end":69,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":351},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80530,"byte_end":80544,"line_start":75,"line_end":75,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::SameDimension::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80406,"byte_end":80502,"line_start":73,"line_end":73,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80507,"byte_end":80520,"line_start":74,"line_end":74,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":361},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"coordinates","qualname":"::base::coordinates","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":8028},{"krate":0,"index":8049},{"krate":0,"index":8051},{"krate":0,"index":8043},{"krate":0,"index":8045},{"krate":0,"index":8040},{"krate":0,"index":8036},{"krate":0,"index":8033},{"krate":0,"index":8031},{"krate":0,"index":8054},{"krate":0,"index":8076},{"krate":0,"index":8078},{"krate":0,"index":8070},{"krate":0,"index":8072},{"krate":0,"index":8067},{"krate":0,"index":8063},{"krate":0,"index":8060},{"krate":0,"index":8058},{"krate":0,"index":8081},{"krate":0,"index":8104},{"krate":0,"index":8106},{"krate":0,"index":8098},{"krate":0,"index":8100},{"krate":0,"index":8095},{"krate":0,"index":8091},{"krate":0,"index":8088},{"krate":0,"index":8086},{"krate":0,"index":8109},{"krate":0,"index":8133},{"krate":0,"index":8135},{"krate":0,"index":8127},{"krate":0,"index":8129},{"krate":0,"index":8124},{"krate":0,"index":8120},{"krate":0,"index":8117},{"krate":0,"index":8115},{"krate":0,"index":8138},{"krate":0,"index":8163},{"krate":0,"index":8165},{"krate":0,"index":8157},{"krate":0,"index":8159},{"krate":0,"index":8154},{"krate":0,"index":8150},{"krate":0,"index":8147},{"krate":0,"index":8145},{"krate":0,"index":8168},{"krate":0,"index":8194},{"krate":0,"index":8196},{"krate":0,"index":8188},{"krate":0,"index":8190},{"krate":0,"index":8185},{"krate":0,"index":8181},{"krate":0,"index":8178},{"krate":0,"index":8176},{"krate":0,"index":8199},{"krate":0,"index":8223},{"krate":0,"index":8225},{"krate":0,"index":8217},{"krate":0,"index":8219},{"krate":0,"index":8214},{"krate":0,"index":8210},{"krate":0,"index":8207},{"krate":0,"index":8205},{"krate":0,"index":8228},{"krate":0,"index":8252},{"krate":0,"index":8254},{"krate":0,"index":8246},{"krate":0,"index":8248},{"krate":0,"index":8243},{"krate":0,"index":8239},{"krate":0,"index":8236},{"krate":0,"index":8234},{"krate":0,"index":8257},{"krate":0,"index":8283},{"krate":0,"index":8285},{"krate":0,"index":8277},{"krate":0,"index":8279},{"krate":0,"index":8274},{"krate":0,"index":8270},{"krate":0,"index":8267},{"krate":0,"index":8265},{"krate":0,"index":8288},{"krate":0,"index":8316},{"krate":0,"index":8318},{"krate":0,"index":8310},{"krate":0,"index":8312},{"krate":0,"index":8307},{"krate":0,"index":8303},{"krate":0,"index":8300},{"krate":0,"index":8298},{"krate":0,"index":8321},{"krate":0,"index":8351},{"krate":0,"index":8353},{"krate":0,"index":8345},{"krate":0,"index":8347},{"krate":0,"index":8342},{"krate":0,"index":8338},{"krate":0,"index":8335},{"krate":0,"index":8333},{"krate":0,"index":8356},{"krate":0,"index":8388},{"krate":0,"index":8390},{"krate":0,"index":8382},{"krate":0,"index":8384},{"krate":0,"index":8379},{"krate":0,"index":8375},{"krate":0,"index":8372},{"krate":0,"index":8370},{"krate":0,"index":8393},{"krate":0,"index":8419},{"krate":0,"index":8421},{"krate":0,"index":8413},{"krate":0,"index":8415},{"krate":0,"index":8410},{"krate":0,"index":8406},{"krate":0,"index":8403},{"krate":0,"index":8401},{"krate":0,"index":8424},{"krate":0,"index":8453},{"krate":0,"index":8455},{"krate":0,"index":8447},{"krate":0,"index":8449},{"krate":0,"index":8444},{"krate":0,"index":8440},{"krate":0,"index":8437},{"krate":0,"index":8435},{"krate":0,"index":8458},{"krate":0,"index":8490},{"krate":0,"index":8492},{"krate":0,"index":8484},{"krate":0,"index":8486},{"krate":0,"index":8481},{"krate":0,"index":8477},{"krate":0,"index":8474},{"krate":0,"index":8472},{"krate":0,"index":8495},{"krate":0,"index":8530},{"krate":0,"index":8532},{"krate":0,"index":8524},{"krate":0,"index":8526},{"krate":0,"index":8521},{"krate":0,"index":8517},{"krate":0,"index":8514},{"krate":0,"index":8512},{"krate":0,"index":8535},{"krate":0,"index":8573},{"krate":0,"index":8575},{"krate":0,"index":8567},{"krate":0,"index":8569},{"krate":0,"index":8564},{"krate":0,"index":8560},{"krate":0,"index":8557},{"krate":0,"index":8555},{"krate":0,"index":8578},{"krate":0,"index":8606},{"krate":0,"index":8608},{"krate":0,"index":8600},{"krate":0,"index":8602},{"krate":0,"index":8597},{"krate":0,"index":8593},{"krate":0,"index":8590},{"krate":0,"index":8588},{"krate":0,"index":8611},{"krate":0,"index":8643},{"krate":0,"index":8645},{"krate":0,"index":8637},{"krate":0,"index":8639},{"krate":0,"index":8634},{"krate":0,"index":8630},{"krate":0,"index":8627},{"krate":0,"index":8625},{"krate":0,"index":8648},{"krate":0,"index":8684},{"krate":0,"index":8686},{"krate":0,"index":8678},{"krate":0,"index":8680},{"krate":0,"index":8675},{"krate":0,"index":8671},{"krate":0,"index":8668},{"krate":0,"index":8666},{"krate":0,"index":8689},{"krate":0,"index":8729},{"krate":0,"index":8731},{"krate":0,"index":8723},{"krate":0,"index":8725},{"krate":0,"index":8720},{"krate":0,"index":8716},{"krate":0,"index":8713},{"krate":0,"index":8711},{"krate":0,"index":8734},{"krate":0,"index":8778},{"krate":0,"index":8780},{"krate":0,"index":8772},{"krate":0,"index":8774},{"krate":0,"index":8769},{"krate":0,"index":8765},{"krate":0,"index":8762},{"krate":0,"index":8760},{"krate":0,"index":8783},{"krate":0,"index":8813},{"krate":0,"index":8815},{"krate":0,"index":8807},{"krate":0,"index":8809},{"krate":0,"index":8804},{"krate":0,"index":8800},{"krate":0,"index":8797},{"krate":0,"index":8795},{"krate":0,"index":8818},{"krate":0,"index":8853},{"krate":0,"index":8855},{"krate":0,"index":8847},{"krate":0,"index":8849},{"krate":0,"index":8844},{"krate":0,"index":8840},{"krate":0,"index":8837},{"krate":0,"index":8835},{"krate":0,"index":8858},{"krate":0,"index":8898},{"krate":0,"index":8900},{"krate":0,"index":8892},{"krate":0,"index":8894},{"krate":0,"index":8889},{"krate":0,"index":8885},{"krate":0,"index":8882},{"krate":0,"index":8880},{"krate":0,"index":8903},{"krate":0,"index":8948},{"krate":0,"index":8950},{"krate":0,"index":8942},{"krate":0,"index":8944},{"krate":0,"index":8939},{"krate":0,"index":8935},{"krate":0,"index":8932},{"krate":0,"index":8930},{"krate":0,"index":8953},{"krate":0,"index":9003},{"krate":0,"index":9005},{"krate":0,"index":8997},{"krate":0,"index":8999},{"krate":0,"index":8994},{"krate":0,"index":8990},{"krate":0,"index":8987},{"krate":0,"index":8985},{"krate":0,"index":9008},{"krate":0,"index":9040},{"krate":0,"index":9042},{"krate":0,"index":9034},{"krate":0,"index":9036},{"krate":0,"index":9031},{"krate":0,"index":9027},{"krate":0,"index":9024},{"krate":0,"index":9022},{"krate":0,"index":9045},{"krate":0,"index":9083},{"krate":0,"index":9085},{"krate":0,"index":9077},{"krate":0,"index":9079},{"krate":0,"index":9074},{"krate":0,"index":9070},{"krate":0,"index":9067},{"krate":0,"index":9065},{"krate":0,"index":9088},{"krate":0,"index":9132},{"krate":0,"index":9134},{"krate":0,"index":9126},{"krate":0,"index":9128},{"krate":0,"index":9123},{"krate":0,"index":9119},{"krate":0,"index":9116},{"krate":0,"index":9114},{"krate":0,"index":9137},{"krate":0,"index":9187},{"krate":0,"index":9189},{"krate":0,"index":9181},{"krate":0,"index":9183},{"krate":0,"index":9178},{"krate":0,"index":9174},{"krate":0,"index":9171},{"krate":0,"index":9169},{"krate":0,"index":9192},{"krate":0,"index":9248},{"krate":0,"index":9250},{"krate":0,"index":9242},{"krate":0,"index":9244},{"krate":0,"index":9239},{"krate":0,"index":9235},{"krate":0,"index":9232},{"krate":0,"index":9230},{"krate":0,"index":9253},{"krate":0,"index":9258},{"krate":0,"index":9262},{"krate":0,"index":9267},{"krate":0,"index":9271},{"krate":0,"index":9276},{"krate":0,"index":9280},{"krate":0,"index":9285},{"krate":0,"index":9289},{"krate":0,"index":9294},{"krate":0,"index":9298},{"krate":0,"index":9303},{"krate":0,"index":9307},{"krate":0,"index":9312},{"krate":0,"index":9316},{"krate":0,"index":9321},{"krate":0,"index":9325},{"krate":0,"index":9330},{"krate":0,"index":9334},{"krate":0,"index":9339},{"krate":0,"index":9343},{"krate":0,"index":9348},{"krate":0,"index":9352},{"krate":0,"index":9357},{"krate":0,"index":9361},{"krate":0,"index":9366},{"krate":0,"index":9370},{"krate":0,"index":9375},{"krate":0,"index":9379},{"krate":0,"index":9384},{"krate":0,"index":9388},{"krate":0,"index":9393},{"krate":0,"index":9397},{"krate":0,"index":9402},{"krate":0,"index":9406},{"krate":0,"index":9411},{"krate":0,"index":9415},{"krate":0,"index":9420},{"krate":0,"index":9424},{"krate":0,"index":9429},{"krate":0,"index":9433},{"krate":0,"index":9438},{"krate":0,"index":9442},{"krate":0,"index":9447},{"krate":0,"index":9451},{"krate":0,"index":9456},{"krate":0,"index":9460},{"krate":0,"index":9465},{"krate":0,"index":9469},{"krate":0,"index":9474},{"krate":0,"index":9478},{"krate":0,"index":9483},{"krate":0,"index":9487},{"krate":0,"index":9492},{"krate":0,"index":9496},{"krate":0,"index":9501},{"krate":0,"index":9505},{"krate":0,"index":9510},{"krate":0,"index":9514},{"krate":0,"index":9519},{"krate":0,"index":9523},{"krate":0,"index":9528},{"krate":0,"index":9532},{"krate":0,"index":9537},{"krate":0,"index":9541},{"krate":0,"index":9546},{"krate":0,"index":9550},{"krate":0,"index":9555},{"krate":0,"index":9559},{"krate":0,"index":9564},{"krate":0,"index":9568},{"krate":0,"index":9573}],"decl_id":null,"docs":" Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access\n components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead\n of `v[2]`.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":80835,"byte_end":80858,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"! Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":80860,"byte_end":80956,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":80957,"byte_end":81054,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"! of `v[2]`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81055,"byte_end":81069,"line_start":5,"line_end":5,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8028},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82545,"byte_end":82546,"line_start":60,"line_end":60,"column_start":14,"column_end":15},"name":"X","qualname":"::base::coordinates::X","value":"X { x }","parent":null,"children":[{"krate":0,"index":8030}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8030},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82548,"byte_end":82549,"line_start":60,"line_end":60,"column_start":17,"column_end":18},"name":"x","qualname":"::base::coordinates::X::x","value":"N","parent":{"krate":0,"index":8028},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8054},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82565,"byte_end":82567,"line_start":61,"line_end":61,"column_start":14,"column_end":16},"name":"XY","qualname":"::base::coordinates::XY","value":"XY { x, y }","parent":null,"children":[{"krate":0,"index":8056},{"krate":0,"index":8057}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8056},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82569,"byte_end":82570,"line_start":61,"line_end":61,"column_start":18,"column_end":19},"name":"x","qualname":"::base::coordinates::XY::x","value":"N","parent":{"krate":0,"index":8054},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8057},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82572,"byte_end":82573,"line_start":61,"line_end":61,"column_start":21,"column_end":22},"name":"y","qualname":"::base::coordinates::XY::y","value":"N","parent":{"krate":0,"index":8054},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8081},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82589,"byte_end":82592,"line_start":62,"line_end":62,"column_start":14,"column_end":17},"name":"XYZ","qualname":"::base::coordinates::XYZ","value":"XYZ { x, y, z }","parent":null,"children":[{"krate":0,"index":8083},{"krate":0,"index":8084},{"krate":0,"index":8085}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8083},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82594,"byte_end":82595,"line_start":62,"line_end":62,"column_start":19,"column_end":20},"name":"x","qualname":"::base::coordinates::XYZ::x","value":"N","parent":{"krate":0,"index":8081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8084},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82597,"byte_end":82598,"line_start":62,"line_end":62,"column_start":22,"column_end":23},"name":"y","qualname":"::base::coordinates::XYZ::y","value":"N","parent":{"krate":0,"index":8081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8085},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82600,"byte_end":82601,"line_start":62,"line_end":62,"column_start":25,"column_end":26},"name":"z","qualname":"::base::coordinates::XYZ::z","value":"N","parent":{"krate":0,"index":8081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8109},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82617,"byte_end":82621,"line_start":63,"line_end":63,"column_start":14,"column_end":18},"name":"XYZW","qualname":"::base::coordinates::XYZW","value":"XYZW { x, y, z, w }","parent":null,"children":[{"krate":0,"index":8111},{"krate":0,"index":8112},{"krate":0,"index":8113},{"krate":0,"index":8114}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8111},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82623,"byte_end":82624,"line_start":63,"line_end":63,"column_start":20,"column_end":21},"name":"x","qualname":"::base::coordinates::XYZW::x","value":"N","parent":{"krate":0,"index":8109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8112},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82626,"byte_end":82627,"line_start":63,"line_end":63,"column_start":23,"column_end":24},"name":"y","qualname":"::base::coordinates::XYZW::y","value":"N","parent":{"krate":0,"index":8109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8113},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82629,"byte_end":82630,"line_start":63,"line_end":63,"column_start":26,"column_end":27},"name":"z","qualname":"::base::coordinates::XYZW::z","value":"N","parent":{"krate":0,"index":8109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8114},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82632,"byte_end":82633,"line_start":63,"line_end":63,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::XYZW::w","value":"N","parent":{"krate":0,"index":8109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8138},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82649,"byte_end":82654,"line_start":64,"line_end":64,"column_start":14,"column_end":19},"name":"XYZWA","qualname":"::base::coordinates::XYZWA","value":"XYZWA { x, y, z, w, a }","parent":null,"children":[{"krate":0,"index":8140},{"krate":0,"index":8141},{"krate":0,"index":8142},{"krate":0,"index":8143},{"krate":0,"index":8144}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8140},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82656,"byte_end":82657,"line_start":64,"line_end":64,"column_start":21,"column_end":22},"name":"x","qualname":"::base::coordinates::XYZWA::x","value":"N","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8141},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82659,"byte_end":82660,"line_start":64,"line_end":64,"column_start":24,"column_end":25},"name":"y","qualname":"::base::coordinates::XYZWA::y","value":"N","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8142},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82662,"byte_end":82663,"line_start":64,"line_end":64,"column_start":27,"column_end":28},"name":"z","qualname":"::base::coordinates::XYZWA::z","value":"N","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8143},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82665,"byte_end":82666,"line_start":64,"line_end":64,"column_start":30,"column_end":31},"name":"w","qualname":"::base::coordinates::XYZWA::w","value":"N","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8144},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82668,"byte_end":82669,"line_start":64,"line_end":64,"column_start":33,"column_end":34},"name":"a","qualname":"::base::coordinates::XYZWA::a","value":"N","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8168},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82685,"byte_end":82691,"line_start":65,"line_end":65,"column_start":14,"column_end":20},"name":"XYZWAB","qualname":"::base::coordinates::XYZWAB","value":"XYZWAB { x, y, z, w, a, b }","parent":null,"children":[{"krate":0,"index":8170},{"krate":0,"index":8171},{"krate":0,"index":8172},{"krate":0,"index":8173},{"krate":0,"index":8174},{"krate":0,"index":8175}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8170},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82693,"byte_end":82694,"line_start":65,"line_end":65,"column_start":22,"column_end":23},"name":"x","qualname":"::base::coordinates::XYZWAB::x","value":"N","parent":{"krate":0,"index":8168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8171},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82696,"byte_end":82697,"line_start":65,"line_end":65,"column_start":25,"column_end":26},"name":"y","qualname":"::base::coordinates::XYZWAB::y","value":"N","parent":{"krate":0,"index":8168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8172},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82699,"byte_end":82700,"line_start":65,"line_end":65,"column_start":28,"column_end":29},"name":"z","qualname":"::base::coordinates::XYZWAB::z","value":"N","parent":{"krate":0,"index":8168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8173},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82702,"byte_end":82703,"line_start":65,"line_end":65,"column_start":31,"column_end":32},"name":"w","qualname":"::base::coordinates::XYZWAB::w","value":"N","parent":{"krate":0,"index":8168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8174},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82705,"byte_end":82706,"line_start":65,"line_end":65,"column_start":34,"column_end":35},"name":"a","qualname":"::base::coordinates::XYZWAB::a","value":"N","parent":{"krate":0,"index":8168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8175},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82708,"byte_end":82709,"line_start":65,"line_end":65,"column_start":37,"column_end":38},"name":"b","qualname":"::base::coordinates::XYZWAB::b","value":"N","parent":{"krate":0,"index":8168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8199},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82725,"byte_end":82729,"line_start":66,"line_end":66,"column_start":14,"column_end":18},"name":"IJKW","qualname":"::base::coordinates::IJKW","value":"IJKW { i, j, k, w }","parent":null,"children":[{"krate":0,"index":8201},{"krate":0,"index":8202},{"krate":0,"index":8203},{"krate":0,"index":8204}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8201},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82731,"byte_end":82732,"line_start":66,"line_end":66,"column_start":20,"column_end":21},"name":"i","qualname":"::base::coordinates::IJKW::i","value":"N","parent":{"krate":0,"index":8199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8202},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82734,"byte_end":82735,"line_start":66,"line_end":66,"column_start":23,"column_end":24},"name":"j","qualname":"::base::coordinates::IJKW::j","value":"N","parent":{"krate":0,"index":8199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8203},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82737,"byte_end":82738,"line_start":66,"line_end":66,"column_start":26,"column_end":27},"name":"k","qualname":"::base::coordinates::IJKW::k","value":"N","parent":{"krate":0,"index":8199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8204},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82740,"byte_end":82741,"line_start":66,"line_end":66,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::IJKW::w","value":"N","parent":{"krate":0,"index":8199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8228},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82802,"byte_end":82806,"line_start":71,"line_end":71,"column_start":14,"column_end":18},"name":"M2x2","qualname":"::base::coordinates::M2x2","value":"M2x2 { m11, m21, m12, m22 }","parent":null,"children":[{"krate":0,"index":8230},{"krate":0,"index":8231},{"krate":0,"index":8232},{"krate":0,"index":8233}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8230},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82808,"byte_end":82811,"line_start":71,"line_end":71,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x2::m11","value":"N","parent":{"krate":0,"index":8228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8231},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82813,"byte_end":82816,"line_start":71,"line_end":71,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x2::m21","value":"N","parent":{"krate":0,"index":8228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8232},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82837,"byte_end":82840,"line_start":72,"line_end":72,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x2::m12","value":"N","parent":{"krate":0,"index":8228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8233},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82842,"byte_end":82845,"line_start":72,"line_end":72,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x2::m22","value":"N","parent":{"krate":0,"index":8228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8257},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82861,"byte_end":82865,"line_start":73,"line_end":73,"column_start":14,"column_end":18},"name":"M2x3","qualname":"::base::coordinates::M2x3","value":"M2x3 { m11, m21, m12, m22, m13, m23 }","parent":null,"children":[{"krate":0,"index":8259},{"krate":0,"index":8260},{"krate":0,"index":8261},{"krate":0,"index":8262},{"krate":0,"index":8263},{"krate":0,"index":8264}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8259},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82867,"byte_end":82870,"line_start":73,"line_end":73,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x3::m11","value":"N","parent":{"krate":0,"index":8257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8260},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82872,"byte_end":82875,"line_start":73,"line_end":73,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x3::m21","value":"N","parent":{"krate":0,"index":8257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8261},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82896,"byte_end":82899,"line_start":74,"line_end":74,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x3::m12","value":"N","parent":{"krate":0,"index":8257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8262},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82901,"byte_end":82904,"line_start":74,"line_end":74,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x3::m22","value":"N","parent":{"krate":0,"index":8257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8263},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82925,"byte_end":82928,"line_start":75,"line_end":75,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x3::m13","value":"N","parent":{"krate":0,"index":8257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8264},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82930,"byte_end":82933,"line_start":75,"line_end":75,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x3::m23","value":"N","parent":{"krate":0,"index":8257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8288},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82949,"byte_end":82953,"line_start":76,"line_end":76,"column_start":14,"column_end":18},"name":"M2x4","qualname":"::base::coordinates::M2x4","value":"M2x4 { m11, m21, m12, m22, m13, m23, m14, m24 }","parent":null,"children":[{"krate":0,"index":8290},{"krate":0,"index":8291},{"krate":0,"index":8292},{"krate":0,"index":8293},{"krate":0,"index":8294},{"krate":0,"index":8295},{"krate":0,"index":8296},{"krate":0,"index":8297}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8290},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82955,"byte_end":82958,"line_start":76,"line_end":76,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x4::m11","value":"N","parent":{"krate":0,"index":8288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8291},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82960,"byte_end":82963,"line_start":76,"line_end":76,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x4::m21","value":"N","parent":{"krate":0,"index":8288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8292},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82984,"byte_end":82987,"line_start":77,"line_end":77,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x4::m12","value":"N","parent":{"krate":0,"index":8288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8293},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":82989,"byte_end":82992,"line_start":77,"line_end":77,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x4::m22","value":"N","parent":{"krate":0,"index":8288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8294},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83013,"byte_end":83016,"line_start":78,"line_end":78,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x4::m13","value":"N","parent":{"krate":0,"index":8288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8295},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83018,"byte_end":83021,"line_start":78,"line_end":78,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x4::m23","value":"N","parent":{"krate":0,"index":8288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8296},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83042,"byte_end":83045,"line_start":79,"line_end":79,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x4::m14","value":"N","parent":{"krate":0,"index":8288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8297},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83047,"byte_end":83050,"line_start":79,"line_end":79,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x4::m24","value":"N","parent":{"krate":0,"index":8288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8321},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83066,"byte_end":83070,"line_start":80,"line_end":80,"column_start":14,"column_end":18},"name":"M2x5","qualname":"::base::coordinates::M2x5","value":"M2x5 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25 }","parent":null,"children":[{"krate":0,"index":8323},{"krate":0,"index":8324},{"krate":0,"index":8325},{"krate":0,"index":8326},{"krate":0,"index":8327},{"krate":0,"index":8328},{"krate":0,"index":8329},{"krate":0,"index":8330},{"krate":0,"index":8331},{"krate":0,"index":8332}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8323},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83072,"byte_end":83075,"line_start":80,"line_end":80,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x5::m11","value":"N","parent":{"krate":0,"index":8321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8324},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83077,"byte_end":83080,"line_start":80,"line_end":80,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x5::m21","value":"N","parent":{"krate":0,"index":8321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8325},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83101,"byte_end":83104,"line_start":81,"line_end":81,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x5::m12","value":"N","parent":{"krate":0,"index":8321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8326},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83106,"byte_end":83109,"line_start":81,"line_end":81,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x5::m22","value":"N","parent":{"krate":0,"index":8321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8327},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83130,"byte_end":83133,"line_start":82,"line_end":82,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x5::m13","value":"N","parent":{"krate":0,"index":8321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8328},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83135,"byte_end":83138,"line_start":82,"line_end":82,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x5::m23","value":"N","parent":{"krate":0,"index":8321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8329},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83159,"byte_end":83162,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x5::m14","value":"N","parent":{"krate":0,"index":8321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8330},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83164,"byte_end":83167,"line_start":83,"line_end":83,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x5::m24","value":"N","parent":{"krate":0,"index":8321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8331},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83188,"byte_end":83191,"line_start":84,"line_end":84,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x5::m15","value":"N","parent":{"krate":0,"index":8321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8332},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83193,"byte_end":83196,"line_start":84,"line_end":84,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x5::m25","value":"N","parent":{"krate":0,"index":8321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8356},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83212,"byte_end":83216,"line_start":85,"line_end":85,"column_start":14,"column_end":18},"name":"M2x6","qualname":"::base::coordinates::M2x6","value":"M2x6 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25, m16, m26 }","parent":null,"children":[{"krate":0,"index":8358},{"krate":0,"index":8359},{"krate":0,"index":8360},{"krate":0,"index":8361},{"krate":0,"index":8362},{"krate":0,"index":8363},{"krate":0,"index":8364},{"krate":0,"index":8365},{"krate":0,"index":8366},{"krate":0,"index":8367},{"krate":0,"index":8368},{"krate":0,"index":8369}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8358},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83218,"byte_end":83221,"line_start":85,"line_end":85,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x6::m11","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8359},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83223,"byte_end":83226,"line_start":85,"line_end":85,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x6::m21","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8360},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83247,"byte_end":83250,"line_start":86,"line_end":86,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x6::m12","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8361},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83252,"byte_end":83255,"line_start":86,"line_end":86,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x6::m22","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8362},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83276,"byte_end":83279,"line_start":87,"line_end":87,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x6::m13","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8363},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83281,"byte_end":83284,"line_start":87,"line_end":87,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x6::m23","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8364},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83305,"byte_end":83308,"line_start":88,"line_end":88,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x6::m14","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8365},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83310,"byte_end":83313,"line_start":88,"line_end":88,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x6::m24","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8366},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83334,"byte_end":83337,"line_start":89,"line_end":89,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x6::m15","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8367},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83339,"byte_end":83342,"line_start":89,"line_end":89,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x6::m25","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8368},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83363,"byte_end":83366,"line_start":90,"line_end":90,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M2x6::m16","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8369},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83368,"byte_end":83371,"line_start":90,"line_end":90,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M2x6::m26","value":"N","parent":{"krate":0,"index":8356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8393},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83432,"byte_end":83436,"line_start":95,"line_end":95,"column_start":14,"column_end":18},"name":"M3x2","qualname":"::base::coordinates::M3x2","value":"M3x2 { m11, m21, m31, m12, m22, m32 }","parent":null,"children":[{"krate":0,"index":8395},{"krate":0,"index":8396},{"krate":0,"index":8397},{"krate":0,"index":8398},{"krate":0,"index":8399},{"krate":0,"index":8400}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8395},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83438,"byte_end":83441,"line_start":95,"line_end":95,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x2::m11","value":"N","parent":{"krate":0,"index":8393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8396},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83443,"byte_end":83446,"line_start":95,"line_end":95,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x2::m21","value":"N","parent":{"krate":0,"index":8393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8397},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83448,"byte_end":83451,"line_start":95,"line_end":95,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x2::m31","value":"N","parent":{"krate":0,"index":8393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8398},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83472,"byte_end":83475,"line_start":96,"line_end":96,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x2::m12","value":"N","parent":{"krate":0,"index":8393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8399},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83477,"byte_end":83480,"line_start":96,"line_end":96,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x2::m22","value":"N","parent":{"krate":0,"index":8393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8400},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83482,"byte_end":83485,"line_start":96,"line_end":96,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x2::m32","value":"N","parent":{"krate":0,"index":8393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8424},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83501,"byte_end":83505,"line_start":97,"line_end":97,"column_start":14,"column_end":18},"name":"M3x3","qualname":"::base::coordinates::M3x3","value":"M3x3 { m11, m21, m31, m12, m22, m32, m13, m23, m33 }","parent":null,"children":[{"krate":0,"index":8426},{"krate":0,"index":8427},{"krate":0,"index":8428},{"krate":0,"index":8429},{"krate":0,"index":8430},{"krate":0,"index":8431},{"krate":0,"index":8432},{"krate":0,"index":8433},{"krate":0,"index":8434}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8426},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83507,"byte_end":83510,"line_start":97,"line_end":97,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x3::m11","value":"N","parent":{"krate":0,"index":8424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8427},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83512,"byte_end":83515,"line_start":97,"line_end":97,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x3::m21","value":"N","parent":{"krate":0,"index":8424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8428},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83517,"byte_end":83520,"line_start":97,"line_end":97,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x3::m31","value":"N","parent":{"krate":0,"index":8424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8429},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83541,"byte_end":83544,"line_start":98,"line_end":98,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x3::m12","value":"N","parent":{"krate":0,"index":8424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8430},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83546,"byte_end":83549,"line_start":98,"line_end":98,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x3::m22","value":"N","parent":{"krate":0,"index":8424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8431},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83551,"byte_end":83554,"line_start":98,"line_end":98,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x3::m32","value":"N","parent":{"krate":0,"index":8424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8432},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83575,"byte_end":83578,"line_start":99,"line_end":99,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x3::m13","value":"N","parent":{"krate":0,"index":8424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8433},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83580,"byte_end":83583,"line_start":99,"line_end":99,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x3::m23","value":"N","parent":{"krate":0,"index":8424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8434},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83585,"byte_end":83588,"line_start":99,"line_end":99,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x3::m33","value":"N","parent":{"krate":0,"index":8424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8458},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83604,"byte_end":83608,"line_start":100,"line_end":100,"column_start":14,"column_end":18},"name":"M3x4","qualname":"::base::coordinates::M3x4","value":"M3x4 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34 }","parent":null,"children":[{"krate":0,"index":8460},{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8463},{"krate":0,"index":8464},{"krate":0,"index":8465},{"krate":0,"index":8466},{"krate":0,"index":8467},{"krate":0,"index":8468},{"krate":0,"index":8469},{"krate":0,"index":8470},{"krate":0,"index":8471}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8460},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83610,"byte_end":83613,"line_start":100,"line_end":100,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x4::m11","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8461},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83615,"byte_end":83618,"line_start":100,"line_end":100,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x4::m21","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8462},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83620,"byte_end":83623,"line_start":100,"line_end":100,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x4::m31","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8463},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83644,"byte_end":83647,"line_start":101,"line_end":101,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x4::m12","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8464},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83649,"byte_end":83652,"line_start":101,"line_end":101,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x4::m22","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8465},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83654,"byte_end":83657,"line_start":101,"line_end":101,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x4::m32","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8466},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83678,"byte_end":83681,"line_start":102,"line_end":102,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x4::m13","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8467},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83683,"byte_end":83686,"line_start":102,"line_end":102,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x4::m23","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8468},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83688,"byte_end":83691,"line_start":102,"line_end":102,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x4::m33","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8469},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83712,"byte_end":83715,"line_start":103,"line_end":103,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x4::m14","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8470},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83717,"byte_end":83720,"line_start":103,"line_end":103,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x4::m24","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8471},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83722,"byte_end":83725,"line_start":103,"line_end":103,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x4::m34","value":"N","parent":{"krate":0,"index":8458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8495},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83741,"byte_end":83745,"line_start":104,"line_end":104,"column_start":14,"column_end":18},"name":"M3x5","qualname":"::base::coordinates::M3x5","value":"M3x5 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35 }","parent":null,"children":[{"krate":0,"index":8497},{"krate":0,"index":8498},{"krate":0,"index":8499},{"krate":0,"index":8500},{"krate":0,"index":8501},{"krate":0,"index":8502},{"krate":0,"index":8503},{"krate":0,"index":8504},{"krate":0,"index":8505},{"krate":0,"index":8506},{"krate":0,"index":8507},{"krate":0,"index":8508},{"krate":0,"index":8509},{"krate":0,"index":8510},{"krate":0,"index":8511}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8497},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83747,"byte_end":83750,"line_start":104,"line_end":104,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x5::m11","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8498},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83752,"byte_end":83755,"line_start":104,"line_end":104,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x5::m21","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8499},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83757,"byte_end":83760,"line_start":104,"line_end":104,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x5::m31","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8500},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83781,"byte_end":83784,"line_start":105,"line_end":105,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x5::m12","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8501},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83786,"byte_end":83789,"line_start":105,"line_end":105,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x5::m22","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8502},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83791,"byte_end":83794,"line_start":105,"line_end":105,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x5::m32","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8503},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83815,"byte_end":83818,"line_start":106,"line_end":106,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x5::m13","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8504},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83820,"byte_end":83823,"line_start":106,"line_end":106,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x5::m23","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8505},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83825,"byte_end":83828,"line_start":106,"line_end":106,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x5::m33","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8506},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83849,"byte_end":83852,"line_start":107,"line_end":107,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x5::m14","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8507},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83854,"byte_end":83857,"line_start":107,"line_end":107,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x5::m24","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8508},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83859,"byte_end":83862,"line_start":107,"line_end":107,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x5::m34","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8509},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83883,"byte_end":83886,"line_start":108,"line_end":108,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x5::m15","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8510},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83888,"byte_end":83891,"line_start":108,"line_end":108,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x5::m25","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8511},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83893,"byte_end":83896,"line_start":108,"line_end":108,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x5::m35","value":"N","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8535},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83912,"byte_end":83916,"line_start":109,"line_end":109,"column_start":14,"column_end":18},"name":"M3x6","qualname":"::base::coordinates::M3x6","value":"M3x6 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35, m16, m26, m36 }","parent":null,"children":[{"krate":0,"index":8537},{"krate":0,"index":8538},{"krate":0,"index":8539},{"krate":0,"index":8540},{"krate":0,"index":8541},{"krate":0,"index":8542},{"krate":0,"index":8543},{"krate":0,"index":8544},{"krate":0,"index":8545},{"krate":0,"index":8546},{"krate":0,"index":8547},{"krate":0,"index":8548},{"krate":0,"index":8549},{"krate":0,"index":8550},{"krate":0,"index":8551},{"krate":0,"index":8552},{"krate":0,"index":8553},{"krate":0,"index":8554}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8537},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83918,"byte_end":83921,"line_start":109,"line_end":109,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x6::m11","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8538},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83923,"byte_end":83926,"line_start":109,"line_end":109,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x6::m21","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8539},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83928,"byte_end":83931,"line_start":109,"line_end":109,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x6::m31","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8540},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83952,"byte_end":83955,"line_start":110,"line_end":110,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x6::m12","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8541},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83957,"byte_end":83960,"line_start":110,"line_end":110,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x6::m22","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8542},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83962,"byte_end":83965,"line_start":110,"line_end":110,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x6::m32","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8543},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83986,"byte_end":83989,"line_start":111,"line_end":111,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x6::m13","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8544},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83991,"byte_end":83994,"line_start":111,"line_end":111,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x6::m23","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8545},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":83996,"byte_end":83999,"line_start":111,"line_end":111,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x6::m33","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8546},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84020,"byte_end":84023,"line_start":112,"line_end":112,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x6::m14","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8547},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84025,"byte_end":84028,"line_start":112,"line_end":112,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x6::m24","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8548},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84030,"byte_end":84033,"line_start":112,"line_end":112,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x6::m34","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8549},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84054,"byte_end":84057,"line_start":113,"line_end":113,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x6::m15","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8550},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84059,"byte_end":84062,"line_start":113,"line_end":113,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x6::m25","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8551},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84064,"byte_end":84067,"line_start":113,"line_end":113,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x6::m35","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8552},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84088,"byte_end":84091,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M3x6::m16","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8553},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84093,"byte_end":84096,"line_start":114,"line_end":114,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M3x6::m26","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8554},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84098,"byte_end":84101,"line_start":114,"line_end":114,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M3x6::m36","value":"N","parent":{"krate":0,"index":8535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8578},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84162,"byte_end":84166,"line_start":119,"line_end":119,"column_start":14,"column_end":18},"name":"M4x2","qualname":"::base::coordinates::M4x2","value":"M4x2 { m11, m21, m31, m41, m12, m22, m32, m42 }","parent":null,"children":[{"krate":0,"index":8580},{"krate":0,"index":8581},{"krate":0,"index":8582},{"krate":0,"index":8583},{"krate":0,"index":8584},{"krate":0,"index":8585},{"krate":0,"index":8586},{"krate":0,"index":8587}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8580},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84168,"byte_end":84171,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x2::m11","value":"N","parent":{"krate":0,"index":8578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8581},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84173,"byte_end":84176,"line_start":119,"line_end":119,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x2::m21","value":"N","parent":{"krate":0,"index":8578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8582},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84178,"byte_end":84181,"line_start":119,"line_end":119,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x2::m31","value":"N","parent":{"krate":0,"index":8578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8583},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84183,"byte_end":84186,"line_start":119,"line_end":119,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x2::m41","value":"N","parent":{"krate":0,"index":8578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8584},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84207,"byte_end":84210,"line_start":120,"line_end":120,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x2::m12","value":"N","parent":{"krate":0,"index":8578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8585},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84212,"byte_end":84215,"line_start":120,"line_end":120,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x2::m22","value":"N","parent":{"krate":0,"index":8578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8586},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84217,"byte_end":84220,"line_start":120,"line_end":120,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x2::m32","value":"N","parent":{"krate":0,"index":8578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8587},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84222,"byte_end":84225,"line_start":120,"line_end":120,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x2::m42","value":"N","parent":{"krate":0,"index":8578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8611},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84241,"byte_end":84245,"line_start":121,"line_end":121,"column_start":14,"column_end":18},"name":"M4x3","qualname":"::base::coordinates::M4x3","value":"M4x3 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43 }","parent":null,"children":[{"krate":0,"index":8613},{"krate":0,"index":8614},{"krate":0,"index":8615},{"krate":0,"index":8616},{"krate":0,"index":8617},{"krate":0,"index":8618},{"krate":0,"index":8619},{"krate":0,"index":8620},{"krate":0,"index":8621},{"krate":0,"index":8622},{"krate":0,"index":8623},{"krate":0,"index":8624}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8613},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84247,"byte_end":84250,"line_start":121,"line_end":121,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x3::m11","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8614},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84252,"byte_end":84255,"line_start":121,"line_end":121,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x3::m21","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8615},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84257,"byte_end":84260,"line_start":121,"line_end":121,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x3::m31","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8616},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84262,"byte_end":84265,"line_start":121,"line_end":121,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x3::m41","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8617},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84286,"byte_end":84289,"line_start":122,"line_end":122,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x3::m12","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8618},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84291,"byte_end":84294,"line_start":122,"line_end":122,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x3::m22","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8619},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84296,"byte_end":84299,"line_start":122,"line_end":122,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x3::m32","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8620},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84301,"byte_end":84304,"line_start":122,"line_end":122,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x3::m42","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8621},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84325,"byte_end":84328,"line_start":123,"line_end":123,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x3::m13","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8622},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84330,"byte_end":84333,"line_start":123,"line_end":123,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x3::m23","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8623},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84335,"byte_end":84338,"line_start":123,"line_end":123,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x3::m33","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8624},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84340,"byte_end":84343,"line_start":123,"line_end":123,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x3::m43","value":"N","parent":{"krate":0,"index":8611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8648},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84359,"byte_end":84363,"line_start":124,"line_end":124,"column_start":14,"column_end":18},"name":"M4x4","qualname":"::base::coordinates::M4x4","value":"M4x4 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44 }","parent":null,"children":[{"krate":0,"index":8650},{"krate":0,"index":8651},{"krate":0,"index":8652},{"krate":0,"index":8653},{"krate":0,"index":8654},{"krate":0,"index":8655},{"krate":0,"index":8656},{"krate":0,"index":8657},{"krate":0,"index":8658},{"krate":0,"index":8659},{"krate":0,"index":8660},{"krate":0,"index":8661},{"krate":0,"index":8662},{"krate":0,"index":8663},{"krate":0,"index":8664},{"krate":0,"index":8665}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8650},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84365,"byte_end":84368,"line_start":124,"line_end":124,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x4::m11","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8651},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84370,"byte_end":84373,"line_start":124,"line_end":124,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x4::m21","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8652},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84375,"byte_end":84378,"line_start":124,"line_end":124,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x4::m31","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8653},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84380,"byte_end":84383,"line_start":124,"line_end":124,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x4::m41","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8654},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84404,"byte_end":84407,"line_start":125,"line_end":125,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x4::m12","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8655},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84409,"byte_end":84412,"line_start":125,"line_end":125,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x4::m22","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8656},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84414,"byte_end":84417,"line_start":125,"line_end":125,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x4::m32","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8657},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84419,"byte_end":84422,"line_start":125,"line_end":125,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x4::m42","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8658},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84443,"byte_end":84446,"line_start":126,"line_end":126,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x4::m13","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8659},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84448,"byte_end":84451,"line_start":126,"line_end":126,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x4::m23","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8660},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84453,"byte_end":84456,"line_start":126,"line_end":126,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x4::m33","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8661},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84458,"byte_end":84461,"line_start":126,"line_end":126,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x4::m43","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8662},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84482,"byte_end":84485,"line_start":127,"line_end":127,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x4::m14","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8663},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84487,"byte_end":84490,"line_start":127,"line_end":127,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x4::m24","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8664},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84492,"byte_end":84495,"line_start":127,"line_end":127,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x4::m34","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8665},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84497,"byte_end":84500,"line_start":127,"line_end":127,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x4::m44","value":"N","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8689},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84516,"byte_end":84520,"line_start":128,"line_end":128,"column_start":14,"column_end":18},"name":"M4x5","qualname":"::base::coordinates::M4x5","value":"M4x5 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45 }","parent":null,"children":[{"krate":0,"index":8691},{"krate":0,"index":8692},{"krate":0,"index":8693},{"krate":0,"index":8694},{"krate":0,"index":8695},{"krate":0,"index":8696},{"krate":0,"index":8697},{"krate":0,"index":8698},{"krate":0,"index":8699},{"krate":0,"index":8700},{"krate":0,"index":8701},{"krate":0,"index":8702},{"krate":0,"index":8703},{"krate":0,"index":8704},{"krate":0,"index":8705},{"krate":0,"index":8706},{"krate":0,"index":8707},{"krate":0,"index":8708},{"krate":0,"index":8709},{"krate":0,"index":8710}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8691},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84522,"byte_end":84525,"line_start":128,"line_end":128,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x5::m11","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8692},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84527,"byte_end":84530,"line_start":128,"line_end":128,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x5::m21","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8693},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84532,"byte_end":84535,"line_start":128,"line_end":128,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x5::m31","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8694},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84537,"byte_end":84540,"line_start":128,"line_end":128,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x5::m41","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8695},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84561,"byte_end":84564,"line_start":129,"line_end":129,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x5::m12","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8696},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84566,"byte_end":84569,"line_start":129,"line_end":129,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x5::m22","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8697},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84571,"byte_end":84574,"line_start":129,"line_end":129,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x5::m32","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8698},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84576,"byte_end":84579,"line_start":129,"line_end":129,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x5::m42","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8699},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84600,"byte_end":84603,"line_start":130,"line_end":130,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x5::m13","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8700},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84605,"byte_end":84608,"line_start":130,"line_end":130,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x5::m23","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8701},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84610,"byte_end":84613,"line_start":130,"line_end":130,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x5::m33","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8702},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84615,"byte_end":84618,"line_start":130,"line_end":130,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x5::m43","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8703},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84639,"byte_end":84642,"line_start":131,"line_end":131,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x5::m14","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8704},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84644,"byte_end":84647,"line_start":131,"line_end":131,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x5::m24","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8705},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84649,"byte_end":84652,"line_start":131,"line_end":131,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x5::m34","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8706},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84654,"byte_end":84657,"line_start":131,"line_end":131,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x5::m44","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8707},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84678,"byte_end":84681,"line_start":132,"line_end":132,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x5::m15","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8708},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84683,"byte_end":84686,"line_start":132,"line_end":132,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x5::m25","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8709},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84688,"byte_end":84691,"line_start":132,"line_end":132,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x5::m35","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8710},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84693,"byte_end":84696,"line_start":132,"line_end":132,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x5::m45","value":"N","parent":{"krate":0,"index":8689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8734},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84712,"byte_end":84716,"line_start":133,"line_end":133,"column_start":14,"column_end":18},"name":"M4x6","qualname":"::base::coordinates::M4x6","value":"M4x6 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45, m16, m26, m36, m46 }","parent":null,"children":[{"krate":0,"index":8736},{"krate":0,"index":8737},{"krate":0,"index":8738},{"krate":0,"index":8739},{"krate":0,"index":8740},{"krate":0,"index":8741},{"krate":0,"index":8742},{"krate":0,"index":8743},{"krate":0,"index":8744},{"krate":0,"index":8745},{"krate":0,"index":8746},{"krate":0,"index":8747},{"krate":0,"index":8748},{"krate":0,"index":8749},{"krate":0,"index":8750},{"krate":0,"index":8751},{"krate":0,"index":8752},{"krate":0,"index":8753},{"krate":0,"index":8754},{"krate":0,"index":8755},{"krate":0,"index":8756},{"krate":0,"index":8757},{"krate":0,"index":8758},{"krate":0,"index":8759}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8736},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84718,"byte_end":84721,"line_start":133,"line_end":133,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x6::m11","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8737},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84723,"byte_end":84726,"line_start":133,"line_end":133,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x6::m21","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8738},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84728,"byte_end":84731,"line_start":133,"line_end":133,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x6::m31","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8739},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84733,"byte_end":84736,"line_start":133,"line_end":133,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x6::m41","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8740},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84757,"byte_end":84760,"line_start":134,"line_end":134,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x6::m12","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8741},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84762,"byte_end":84765,"line_start":134,"line_end":134,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x6::m22","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8742},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84767,"byte_end":84770,"line_start":134,"line_end":134,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x6::m32","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8743},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84772,"byte_end":84775,"line_start":134,"line_end":134,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x6::m42","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8744},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84796,"byte_end":84799,"line_start":135,"line_end":135,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x6::m13","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8745},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84801,"byte_end":84804,"line_start":135,"line_end":135,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x6::m23","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8746},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84806,"byte_end":84809,"line_start":135,"line_end":135,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x6::m33","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8747},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84811,"byte_end":84814,"line_start":135,"line_end":135,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x6::m43","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8748},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84835,"byte_end":84838,"line_start":136,"line_end":136,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x6::m14","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8749},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84840,"byte_end":84843,"line_start":136,"line_end":136,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x6::m24","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8750},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84845,"byte_end":84848,"line_start":136,"line_end":136,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x6::m34","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8751},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84850,"byte_end":84853,"line_start":136,"line_end":136,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x6::m44","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8752},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84874,"byte_end":84877,"line_start":137,"line_end":137,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x6::m15","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8753},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84879,"byte_end":84882,"line_start":137,"line_end":137,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x6::m25","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8754},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84884,"byte_end":84887,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x6::m35","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8755},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84889,"byte_end":84892,"line_start":137,"line_end":137,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x6::m45","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8756},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84913,"byte_end":84916,"line_start":138,"line_end":138,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M4x6::m16","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8757},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84918,"byte_end":84921,"line_start":138,"line_end":138,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M4x6::m26","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8758},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84923,"byte_end":84926,"line_start":138,"line_end":138,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M4x6::m36","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8759},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84928,"byte_end":84931,"line_start":138,"line_end":138,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M4x6::m46","value":"N","parent":{"krate":0,"index":8734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8783},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84992,"byte_end":84996,"line_start":143,"line_end":143,"column_start":14,"column_end":18},"name":"M5x2","qualname":"::base::coordinates::M5x2","value":"M5x2 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52 }","parent":null,"children":[{"krate":0,"index":8785},{"krate":0,"index":8786},{"krate":0,"index":8787},{"krate":0,"index":8788},{"krate":0,"index":8789},{"krate":0,"index":8790},{"krate":0,"index":8791},{"krate":0,"index":8792},{"krate":0,"index":8793},{"krate":0,"index":8794}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8785},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":84998,"byte_end":85001,"line_start":143,"line_end":143,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x2::m11","value":"N","parent":{"krate":0,"index":8783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8786},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85003,"byte_end":85006,"line_start":143,"line_end":143,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x2::m21","value":"N","parent":{"krate":0,"index":8783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8787},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85008,"byte_end":85011,"line_start":143,"line_end":143,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x2::m31","value":"N","parent":{"krate":0,"index":8783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8788},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85013,"byte_end":85016,"line_start":143,"line_end":143,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x2::m41","value":"N","parent":{"krate":0,"index":8783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8789},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85018,"byte_end":85021,"line_start":143,"line_end":143,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x2::m51","value":"N","parent":{"krate":0,"index":8783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8790},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85042,"byte_end":85045,"line_start":144,"line_end":144,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x2::m12","value":"N","parent":{"krate":0,"index":8783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8791},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85047,"byte_end":85050,"line_start":144,"line_end":144,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x2::m22","value":"N","parent":{"krate":0,"index":8783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8792},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85052,"byte_end":85055,"line_start":144,"line_end":144,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x2::m32","value":"N","parent":{"krate":0,"index":8783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8793},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85057,"byte_end":85060,"line_start":144,"line_end":144,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x2::m42","value":"N","parent":{"krate":0,"index":8783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8794},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85062,"byte_end":85065,"line_start":144,"line_end":144,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x2::m52","value":"N","parent":{"krate":0,"index":8783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8818},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85081,"byte_end":85085,"line_start":145,"line_end":145,"column_start":14,"column_end":18},"name":"M5x3","qualname":"::base::coordinates::M5x3","value":"M5x3 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53 }","parent":null,"children":[{"krate":0,"index":8820},{"krate":0,"index":8821},{"krate":0,"index":8822},{"krate":0,"index":8823},{"krate":0,"index":8824},{"krate":0,"index":8825},{"krate":0,"index":8826},{"krate":0,"index":8827},{"krate":0,"index":8828},{"krate":0,"index":8829},{"krate":0,"index":8830},{"krate":0,"index":8831},{"krate":0,"index":8832},{"krate":0,"index":8833},{"krate":0,"index":8834}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8820},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85087,"byte_end":85090,"line_start":145,"line_end":145,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x3::m11","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8821},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85092,"byte_end":85095,"line_start":145,"line_end":145,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x3::m21","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8822},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85097,"byte_end":85100,"line_start":145,"line_end":145,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x3::m31","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8823},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85102,"byte_end":85105,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x3::m41","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8824},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85107,"byte_end":85110,"line_start":145,"line_end":145,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x3::m51","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8825},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85131,"byte_end":85134,"line_start":146,"line_end":146,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x3::m12","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8826},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85136,"byte_end":85139,"line_start":146,"line_end":146,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x3::m22","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8827},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85141,"byte_end":85144,"line_start":146,"line_end":146,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x3::m32","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8828},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85146,"byte_end":85149,"line_start":146,"line_end":146,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x3::m42","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8829},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85151,"byte_end":85154,"line_start":146,"line_end":146,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x3::m52","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8830},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85175,"byte_end":85178,"line_start":147,"line_end":147,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x3::m13","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8831},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85180,"byte_end":85183,"line_start":147,"line_end":147,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x3::m23","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8832},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85185,"byte_end":85188,"line_start":147,"line_end":147,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x3::m33","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8833},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85190,"byte_end":85193,"line_start":147,"line_end":147,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x3::m43","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8834},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85195,"byte_end":85198,"line_start":147,"line_end":147,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x3::m53","value":"N","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8858},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85214,"byte_end":85218,"line_start":148,"line_end":148,"column_start":14,"column_end":18},"name":"M5x4","qualname":"::base::coordinates::M5x4","value":"M5x4 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54 }","parent":null,"children":[{"krate":0,"index":8860},{"krate":0,"index":8861},{"krate":0,"index":8862},{"krate":0,"index":8863},{"krate":0,"index":8864},{"krate":0,"index":8865},{"krate":0,"index":8866},{"krate":0,"index":8867},{"krate":0,"index":8868},{"krate":0,"index":8869},{"krate":0,"index":8870},{"krate":0,"index":8871},{"krate":0,"index":8872},{"krate":0,"index":8873},{"krate":0,"index":8874},{"krate":0,"index":8875},{"krate":0,"index":8876},{"krate":0,"index":8877},{"krate":0,"index":8878},{"krate":0,"index":8879}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8860},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85220,"byte_end":85223,"line_start":148,"line_end":148,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x4::m11","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8861},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85225,"byte_end":85228,"line_start":148,"line_end":148,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x4::m21","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8862},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85230,"byte_end":85233,"line_start":148,"line_end":148,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x4::m31","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8863},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85235,"byte_end":85238,"line_start":148,"line_end":148,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x4::m41","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8864},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85240,"byte_end":85243,"line_start":148,"line_end":148,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x4::m51","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8865},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85264,"byte_end":85267,"line_start":149,"line_end":149,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x4::m12","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8866},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85269,"byte_end":85272,"line_start":149,"line_end":149,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x4::m22","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8867},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85274,"byte_end":85277,"line_start":149,"line_end":149,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x4::m32","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8868},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85279,"byte_end":85282,"line_start":149,"line_end":149,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x4::m42","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8869},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85284,"byte_end":85287,"line_start":149,"line_end":149,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x4::m52","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8870},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85308,"byte_end":85311,"line_start":150,"line_end":150,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x4::m13","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8871},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85313,"byte_end":85316,"line_start":150,"line_end":150,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x4::m23","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8872},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85318,"byte_end":85321,"line_start":150,"line_end":150,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x4::m33","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8873},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85323,"byte_end":85326,"line_start":150,"line_end":150,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x4::m43","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8874},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85328,"byte_end":85331,"line_start":150,"line_end":150,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x4::m53","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8875},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85352,"byte_end":85355,"line_start":151,"line_end":151,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x4::m14","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8876},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85357,"byte_end":85360,"line_start":151,"line_end":151,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x4::m24","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8877},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85362,"byte_end":85365,"line_start":151,"line_end":151,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x4::m34","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8878},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85367,"byte_end":85370,"line_start":151,"line_end":151,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x4::m44","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8879},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85372,"byte_end":85375,"line_start":151,"line_end":151,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x4::m54","value":"N","parent":{"krate":0,"index":8858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8903},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85391,"byte_end":85395,"line_start":152,"line_end":152,"column_start":14,"column_end":18},"name":"M5x5","qualname":"::base::coordinates::M5x5","value":"M5x5 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55 }","parent":null,"children":[{"krate":0,"index":8905},{"krate":0,"index":8906},{"krate":0,"index":8907},{"krate":0,"index":8908},{"krate":0,"index":8909},{"krate":0,"index":8910},{"krate":0,"index":8911},{"krate":0,"index":8912},{"krate":0,"index":8913},{"krate":0,"index":8914},{"krate":0,"index":8915},{"krate":0,"index":8916},{"krate":0,"index":8917},{"krate":0,"index":8918},{"krate":0,"index":8919},{"krate":0,"index":8920},{"krate":0,"index":8921},{"krate":0,"index":8922},{"krate":0,"index":8923},{"krate":0,"index":8924},{"krate":0,"index":8925},{"krate":0,"index":8926},{"krate":0,"index":8927},{"krate":0,"index":8928},{"krate":0,"index":8929}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8905},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85397,"byte_end":85400,"line_start":152,"line_end":152,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x5::m11","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8906},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85402,"byte_end":85405,"line_start":152,"line_end":152,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x5::m21","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8907},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85407,"byte_end":85410,"line_start":152,"line_end":152,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x5::m31","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8908},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85412,"byte_end":85415,"line_start":152,"line_end":152,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x5::m41","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8909},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85417,"byte_end":85420,"line_start":152,"line_end":152,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x5::m51","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8910},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85441,"byte_end":85444,"line_start":153,"line_end":153,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x5::m12","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8911},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85446,"byte_end":85449,"line_start":153,"line_end":153,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x5::m22","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8912},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85451,"byte_end":85454,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x5::m32","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8913},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85456,"byte_end":85459,"line_start":153,"line_end":153,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x5::m42","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8914},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85461,"byte_end":85464,"line_start":153,"line_end":153,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x5::m52","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8915},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85485,"byte_end":85488,"line_start":154,"line_end":154,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x5::m13","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8916},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85490,"byte_end":85493,"line_start":154,"line_end":154,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x5::m23","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8917},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85495,"byte_end":85498,"line_start":154,"line_end":154,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x5::m33","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8918},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85500,"byte_end":85503,"line_start":154,"line_end":154,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x5::m43","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8919},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85505,"byte_end":85508,"line_start":154,"line_end":154,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x5::m53","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8920},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85529,"byte_end":85532,"line_start":155,"line_end":155,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x5::m14","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8921},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85534,"byte_end":85537,"line_start":155,"line_end":155,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x5::m24","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8922},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85539,"byte_end":85542,"line_start":155,"line_end":155,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x5::m34","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8923},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85544,"byte_end":85547,"line_start":155,"line_end":155,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x5::m44","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8924},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85549,"byte_end":85552,"line_start":155,"line_end":155,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x5::m54","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8925},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85573,"byte_end":85576,"line_start":156,"line_end":156,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x5::m15","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8926},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85578,"byte_end":85581,"line_start":156,"line_end":156,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x5::m25","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8927},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85583,"byte_end":85586,"line_start":156,"line_end":156,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x5::m35","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8928},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85588,"byte_end":85591,"line_start":156,"line_end":156,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x5::m45","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8929},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85593,"byte_end":85596,"line_start":156,"line_end":156,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x5::m55","value":"N","parent":{"krate":0,"index":8903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8953},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85612,"byte_end":85616,"line_start":157,"line_end":157,"column_start":14,"column_end":18},"name":"M5x6","qualname":"::base::coordinates::M5x6","value":"M5x6 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55, m16, m26, m36, m46, m56 }","parent":null,"children":[{"krate":0,"index":8955},{"krate":0,"index":8956},{"krate":0,"index":8957},{"krate":0,"index":8958},{"krate":0,"index":8959},{"krate":0,"index":8960},{"krate":0,"index":8961},{"krate":0,"index":8962},{"krate":0,"index":8963},{"krate":0,"index":8964},{"krate":0,"index":8965},{"krate":0,"index":8966},{"krate":0,"index":8967},{"krate":0,"index":8968},{"krate":0,"index":8969},{"krate":0,"index":8970},{"krate":0,"index":8971},{"krate":0,"index":8972},{"krate":0,"index":8973},{"krate":0,"index":8974},{"krate":0,"index":8975},{"krate":0,"index":8976},{"krate":0,"index":8977},{"krate":0,"index":8978},{"krate":0,"index":8979},{"krate":0,"index":8980},{"krate":0,"index":8981},{"krate":0,"index":8982},{"krate":0,"index":8983},{"krate":0,"index":8984}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8955},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85618,"byte_end":85621,"line_start":157,"line_end":157,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x6::m11","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8956},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85623,"byte_end":85626,"line_start":157,"line_end":157,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x6::m21","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8957},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85628,"byte_end":85631,"line_start":157,"line_end":157,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x6::m31","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8958},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85633,"byte_end":85636,"line_start":157,"line_end":157,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x6::m41","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8959},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85638,"byte_end":85641,"line_start":157,"line_end":157,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x6::m51","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8960},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85662,"byte_end":85665,"line_start":158,"line_end":158,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x6::m12","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8961},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85667,"byte_end":85670,"line_start":158,"line_end":158,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x6::m22","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8962},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85672,"byte_end":85675,"line_start":158,"line_end":158,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x6::m32","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8963},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85677,"byte_end":85680,"line_start":158,"line_end":158,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x6::m42","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8964},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85682,"byte_end":85685,"line_start":158,"line_end":158,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x6::m52","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8965},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85706,"byte_end":85709,"line_start":159,"line_end":159,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x6::m13","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8966},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85711,"byte_end":85714,"line_start":159,"line_end":159,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x6::m23","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8967},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85716,"byte_end":85719,"line_start":159,"line_end":159,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x6::m33","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8968},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85721,"byte_end":85724,"line_start":159,"line_end":159,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x6::m43","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8969},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85726,"byte_end":85729,"line_start":159,"line_end":159,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x6::m53","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8970},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85750,"byte_end":85753,"line_start":160,"line_end":160,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x6::m14","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8971},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85755,"byte_end":85758,"line_start":160,"line_end":160,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x6::m24","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8972},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85760,"byte_end":85763,"line_start":160,"line_end":160,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x6::m34","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8973},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85765,"byte_end":85768,"line_start":160,"line_end":160,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x6::m44","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8974},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85770,"byte_end":85773,"line_start":160,"line_end":160,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x6::m54","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8975},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85794,"byte_end":85797,"line_start":161,"line_end":161,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x6::m15","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8976},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85799,"byte_end":85802,"line_start":161,"line_end":161,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x6::m25","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8977},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85804,"byte_end":85807,"line_start":161,"line_end":161,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x6::m35","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8978},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85809,"byte_end":85812,"line_start":161,"line_end":161,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x6::m45","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8979},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85814,"byte_end":85817,"line_start":161,"line_end":161,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x6::m55","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8980},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85838,"byte_end":85841,"line_start":162,"line_end":162,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M5x6::m16","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8981},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85843,"byte_end":85846,"line_start":162,"line_end":162,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M5x6::m26","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8982},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85848,"byte_end":85851,"line_start":162,"line_end":162,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M5x6::m36","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8983},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85853,"byte_end":85856,"line_start":162,"line_end":162,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M5x6::m46","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8984},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85858,"byte_end":85861,"line_start":162,"line_end":162,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M5x6::m56","value":"N","parent":{"krate":0,"index":8953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9008},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85923,"byte_end":85927,"line_start":168,"line_end":168,"column_start":14,"column_end":18},"name":"M6x2","qualname":"::base::coordinates::M6x2","value":"M6x2 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62 }","parent":null,"children":[{"krate":0,"index":9010},{"krate":0,"index":9011},{"krate":0,"index":9012},{"krate":0,"index":9013},{"krate":0,"index":9014},{"krate":0,"index":9015},{"krate":0,"index":9016},{"krate":0,"index":9017},{"krate":0,"index":9018},{"krate":0,"index":9019},{"krate":0,"index":9020},{"krate":0,"index":9021}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9010},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85929,"byte_end":85932,"line_start":168,"line_end":168,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x2::m11","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9011},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85934,"byte_end":85937,"line_start":168,"line_end":168,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x2::m21","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9012},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85939,"byte_end":85942,"line_start":168,"line_end":168,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x2::m31","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9013},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85944,"byte_end":85947,"line_start":168,"line_end":168,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x2::m41","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9014},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85949,"byte_end":85952,"line_start":168,"line_end":168,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x2::m51","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9015},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85954,"byte_end":85957,"line_start":168,"line_end":168,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x2::m61","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9016},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85978,"byte_end":85981,"line_start":169,"line_end":169,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x2::m12","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9017},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85983,"byte_end":85986,"line_start":169,"line_end":169,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x2::m22","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9018},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85988,"byte_end":85991,"line_start":169,"line_end":169,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x2::m32","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9019},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85993,"byte_end":85996,"line_start":169,"line_end":169,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x2::m42","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9020},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":85998,"byte_end":86001,"line_start":169,"line_end":169,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x2::m52","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9021},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86003,"byte_end":86006,"line_start":169,"line_end":169,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x2::m62","value":"N","parent":{"krate":0,"index":9008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9045},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86022,"byte_end":86026,"line_start":170,"line_end":170,"column_start":14,"column_end":18},"name":"M6x3","qualname":"::base::coordinates::M6x3","value":"M6x3 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63 }","parent":null,"children":[{"krate":0,"index":9047},{"krate":0,"index":9048},{"krate":0,"index":9049},{"krate":0,"index":9050},{"krate":0,"index":9051},{"krate":0,"index":9052},{"krate":0,"index":9053},{"krate":0,"index":9054},{"krate":0,"index":9055},{"krate":0,"index":9056},{"krate":0,"index":9057},{"krate":0,"index":9058},{"krate":0,"index":9059},{"krate":0,"index":9060},{"krate":0,"index":9061},{"krate":0,"index":9062},{"krate":0,"index":9063},{"krate":0,"index":9064}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9047},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86028,"byte_end":86031,"line_start":170,"line_end":170,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x3::m11","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9048},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86033,"byte_end":86036,"line_start":170,"line_end":170,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x3::m21","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9049},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86038,"byte_end":86041,"line_start":170,"line_end":170,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x3::m31","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9050},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86043,"byte_end":86046,"line_start":170,"line_end":170,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x3::m41","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9051},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86048,"byte_end":86051,"line_start":170,"line_end":170,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x3::m51","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9052},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86053,"byte_end":86056,"line_start":170,"line_end":170,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x3::m61","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9053},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86077,"byte_end":86080,"line_start":171,"line_end":171,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x3::m12","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9054},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86082,"byte_end":86085,"line_start":171,"line_end":171,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x3::m22","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9055},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86087,"byte_end":86090,"line_start":171,"line_end":171,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x3::m32","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9056},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86092,"byte_end":86095,"line_start":171,"line_end":171,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x3::m42","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9057},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86097,"byte_end":86100,"line_start":171,"line_end":171,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x3::m52","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9058},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86102,"byte_end":86105,"line_start":171,"line_end":171,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x3::m62","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9059},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86126,"byte_end":86129,"line_start":172,"line_end":172,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x3::m13","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9060},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86131,"byte_end":86134,"line_start":172,"line_end":172,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x3::m23","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9061},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86136,"byte_end":86139,"line_start":172,"line_end":172,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x3::m33","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9062},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86141,"byte_end":86144,"line_start":172,"line_end":172,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x3::m43","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9063},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86146,"byte_end":86149,"line_start":172,"line_end":172,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x3::m53","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9064},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86151,"byte_end":86154,"line_start":172,"line_end":172,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x3::m63","value":"N","parent":{"krate":0,"index":9045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9088},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86170,"byte_end":86174,"line_start":173,"line_end":173,"column_start":14,"column_end":18},"name":"M6x4","qualname":"::base::coordinates::M6x4","value":"M6x4 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64 }","parent":null,"children":[{"krate":0,"index":9090},{"krate":0,"index":9091},{"krate":0,"index":9092},{"krate":0,"index":9093},{"krate":0,"index":9094},{"krate":0,"index":9095},{"krate":0,"index":9096},{"krate":0,"index":9097},{"krate":0,"index":9098},{"krate":0,"index":9099},{"krate":0,"index":9100},{"krate":0,"index":9101},{"krate":0,"index":9102},{"krate":0,"index":9103},{"krate":0,"index":9104},{"krate":0,"index":9105},{"krate":0,"index":9106},{"krate":0,"index":9107},{"krate":0,"index":9108},{"krate":0,"index":9109},{"krate":0,"index":9110},{"krate":0,"index":9111},{"krate":0,"index":9112},{"krate":0,"index":9113}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9090},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86176,"byte_end":86179,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x4::m11","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9091},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86181,"byte_end":86184,"line_start":173,"line_end":173,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x4::m21","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9092},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86186,"byte_end":86189,"line_start":173,"line_end":173,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x4::m31","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9093},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86191,"byte_end":86194,"line_start":173,"line_end":173,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x4::m41","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9094},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86196,"byte_end":86199,"line_start":173,"line_end":173,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x4::m51","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9095},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86201,"byte_end":86204,"line_start":173,"line_end":173,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x4::m61","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9096},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86225,"byte_end":86228,"line_start":174,"line_end":174,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x4::m12","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9097},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86230,"byte_end":86233,"line_start":174,"line_end":174,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x4::m22","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9098},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86235,"byte_end":86238,"line_start":174,"line_end":174,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x4::m32","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9099},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86240,"byte_end":86243,"line_start":174,"line_end":174,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x4::m42","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9100},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86245,"byte_end":86248,"line_start":174,"line_end":174,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x4::m52","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9101},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86250,"byte_end":86253,"line_start":174,"line_end":174,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x4::m62","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9102},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86274,"byte_end":86277,"line_start":175,"line_end":175,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x4::m13","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9103},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86279,"byte_end":86282,"line_start":175,"line_end":175,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x4::m23","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9104},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86284,"byte_end":86287,"line_start":175,"line_end":175,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x4::m33","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9105},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86289,"byte_end":86292,"line_start":175,"line_end":175,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x4::m43","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9106},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86294,"byte_end":86297,"line_start":175,"line_end":175,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x4::m53","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9107},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86299,"byte_end":86302,"line_start":175,"line_end":175,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x4::m63","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9108},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86323,"byte_end":86326,"line_start":176,"line_end":176,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x4::m14","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9109},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86328,"byte_end":86331,"line_start":176,"line_end":176,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x4::m24","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9110},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86333,"byte_end":86336,"line_start":176,"line_end":176,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x4::m34","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9111},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86338,"byte_end":86341,"line_start":176,"line_end":176,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x4::m44","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9112},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86343,"byte_end":86346,"line_start":176,"line_end":176,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x4::m54","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9113},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86348,"byte_end":86351,"line_start":176,"line_end":176,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x4::m64","value":"N","parent":{"krate":0,"index":9088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9137},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86367,"byte_end":86371,"line_start":177,"line_end":177,"column_start":14,"column_end":18},"name":"M6x5","qualname":"::base::coordinates::M6x5","value":"M6x5 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65 }","parent":null,"children":[{"krate":0,"index":9139},{"krate":0,"index":9140},{"krate":0,"index":9141},{"krate":0,"index":9142},{"krate":0,"index":9143},{"krate":0,"index":9144},{"krate":0,"index":9145},{"krate":0,"index":9146},{"krate":0,"index":9147},{"krate":0,"index":9148},{"krate":0,"index":9149},{"krate":0,"index":9150},{"krate":0,"index":9151},{"krate":0,"index":9152},{"krate":0,"index":9153},{"krate":0,"index":9154},{"krate":0,"index":9155},{"krate":0,"index":9156},{"krate":0,"index":9157},{"krate":0,"index":9158},{"krate":0,"index":9159},{"krate":0,"index":9160},{"krate":0,"index":9161},{"krate":0,"index":9162},{"krate":0,"index":9163},{"krate":0,"index":9164},{"krate":0,"index":9165},{"krate":0,"index":9166},{"krate":0,"index":9167},{"krate":0,"index":9168}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9139},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86373,"byte_end":86376,"line_start":177,"line_end":177,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x5::m11","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9140},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86378,"byte_end":86381,"line_start":177,"line_end":177,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x5::m21","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9141},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86383,"byte_end":86386,"line_start":177,"line_end":177,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x5::m31","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9142},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86388,"byte_end":86391,"line_start":177,"line_end":177,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x5::m41","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9143},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86393,"byte_end":86396,"line_start":177,"line_end":177,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x5::m51","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9144},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86398,"byte_end":86401,"line_start":177,"line_end":177,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x5::m61","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9145},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86422,"byte_end":86425,"line_start":178,"line_end":178,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x5::m12","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9146},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86427,"byte_end":86430,"line_start":178,"line_end":178,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x5::m22","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9147},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86432,"byte_end":86435,"line_start":178,"line_end":178,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x5::m32","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9148},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86437,"byte_end":86440,"line_start":178,"line_end":178,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x5::m42","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9149},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86442,"byte_end":86445,"line_start":178,"line_end":178,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x5::m52","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9150},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86447,"byte_end":86450,"line_start":178,"line_end":178,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x5::m62","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9151},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86471,"byte_end":86474,"line_start":179,"line_end":179,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x5::m13","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9152},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86476,"byte_end":86479,"line_start":179,"line_end":179,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x5::m23","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9153},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86481,"byte_end":86484,"line_start":179,"line_end":179,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x5::m33","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9154},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86486,"byte_end":86489,"line_start":179,"line_end":179,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x5::m43","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9155},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86491,"byte_end":86494,"line_start":179,"line_end":179,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x5::m53","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9156},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86496,"byte_end":86499,"line_start":179,"line_end":179,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x5::m63","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9157},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86520,"byte_end":86523,"line_start":180,"line_end":180,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x5::m14","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9158},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86525,"byte_end":86528,"line_start":180,"line_end":180,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x5::m24","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9159},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86530,"byte_end":86533,"line_start":180,"line_end":180,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x5::m34","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9160},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86535,"byte_end":86538,"line_start":180,"line_end":180,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x5::m44","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9161},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86540,"byte_end":86543,"line_start":180,"line_end":180,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x5::m54","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9162},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86545,"byte_end":86548,"line_start":180,"line_end":180,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x5::m64","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9163},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86569,"byte_end":86572,"line_start":181,"line_end":181,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x5::m15","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9164},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86574,"byte_end":86577,"line_start":181,"line_end":181,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x5::m25","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9165},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86579,"byte_end":86582,"line_start":181,"line_end":181,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x5::m35","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9166},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86584,"byte_end":86587,"line_start":181,"line_end":181,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x5::m45","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9167},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86589,"byte_end":86592,"line_start":181,"line_end":181,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x5::m55","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9168},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86594,"byte_end":86597,"line_start":181,"line_end":181,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x5::m65","value":"N","parent":{"krate":0,"index":9137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9192},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86613,"byte_end":86617,"line_start":182,"line_end":182,"column_start":14,"column_end":18},"name":"M6x6","qualname":"::base::coordinates::M6x6","value":"M6x6 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65, m16, m26, m36, m46, m56, m66 }","parent":null,"children":[{"krate":0,"index":9194},{"krate":0,"index":9195},{"krate":0,"index":9196},{"krate":0,"index":9197},{"krate":0,"index":9198},{"krate":0,"index":9199},{"krate":0,"index":9200},{"krate":0,"index":9201},{"krate":0,"index":9202},{"krate":0,"index":9203},{"krate":0,"index":9204},{"krate":0,"index":9205},{"krate":0,"index":9206},{"krate":0,"index":9207},{"krate":0,"index":9208},{"krate":0,"index":9209},{"krate":0,"index":9210},{"krate":0,"index":9211},{"krate":0,"index":9212},{"krate":0,"index":9213},{"krate":0,"index":9214},{"krate":0,"index":9215},{"krate":0,"index":9216},{"krate":0,"index":9217},{"krate":0,"index":9218},{"krate":0,"index":9219},{"krate":0,"index":9220},{"krate":0,"index":9221},{"krate":0,"index":9222},{"krate":0,"index":9223},{"krate":0,"index":9224},{"krate":0,"index":9225},{"krate":0,"index":9226},{"krate":0,"index":9227},{"krate":0,"index":9228},{"krate":0,"index":9229}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81430,"byte_end":81517,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81526,"byte_end":81587,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":81596,"byte_end":81606,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9194},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86619,"byte_end":86622,"line_start":182,"line_end":182,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x6::m11","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9195},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86624,"byte_end":86627,"line_start":182,"line_end":182,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x6::m21","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9196},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86629,"byte_end":86632,"line_start":182,"line_end":182,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x6::m31","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9197},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86634,"byte_end":86637,"line_start":182,"line_end":182,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x6::m41","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9198},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86639,"byte_end":86642,"line_start":182,"line_end":182,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x6::m51","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9199},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86644,"byte_end":86647,"line_start":182,"line_end":182,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x6::m61","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9200},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86668,"byte_end":86671,"line_start":183,"line_end":183,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x6::m12","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9201},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86673,"byte_end":86676,"line_start":183,"line_end":183,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x6::m22","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9202},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86678,"byte_end":86681,"line_start":183,"line_end":183,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x6::m32","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9203},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86683,"byte_end":86686,"line_start":183,"line_end":183,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x6::m42","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9204},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86688,"byte_end":86691,"line_start":183,"line_end":183,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x6::m52","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9205},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86693,"byte_end":86696,"line_start":183,"line_end":183,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x6::m62","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9206},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86717,"byte_end":86720,"line_start":184,"line_end":184,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x6::m13","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9207},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86722,"byte_end":86725,"line_start":184,"line_end":184,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x6::m23","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9208},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86727,"byte_end":86730,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x6::m33","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9209},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86732,"byte_end":86735,"line_start":184,"line_end":184,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x6::m43","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9210},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86737,"byte_end":86740,"line_start":184,"line_end":184,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x6::m53","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9211},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86742,"byte_end":86745,"line_start":184,"line_end":184,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x6::m63","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9212},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86766,"byte_end":86769,"line_start":185,"line_end":185,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x6::m14","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9213},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86771,"byte_end":86774,"line_start":185,"line_end":185,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x6::m24","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9214},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86776,"byte_end":86779,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x6::m34","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9215},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86781,"byte_end":86784,"line_start":185,"line_end":185,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x6::m44","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9216},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86786,"byte_end":86789,"line_start":185,"line_end":185,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x6::m54","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9217},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86791,"byte_end":86794,"line_start":185,"line_end":185,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x6::m64","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9218},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86815,"byte_end":86818,"line_start":186,"line_end":186,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x6::m15","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9219},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86820,"byte_end":86823,"line_start":186,"line_end":186,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x6::m25","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9220},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86825,"byte_end":86828,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x6::m35","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9221},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86830,"byte_end":86833,"line_start":186,"line_end":186,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x6::m45","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9222},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86835,"byte_end":86838,"line_start":186,"line_end":186,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x6::m55","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9223},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86840,"byte_end":86843,"line_start":186,"line_end":186,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x6::m65","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9224},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86864,"byte_end":86867,"line_start":187,"line_end":187,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M6x6::m16","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9225},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86869,"byte_end":86872,"line_start":187,"line_end":187,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M6x6::m26","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9226},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86874,"byte_end":86877,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M6x6::m36","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9227},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86879,"byte_end":86882,"line_start":187,"line_end":187,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M6x6::m46","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9228},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86884,"byte_end":86887,"line_start":187,"line_end":187,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M6x6::m56","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9229},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/coordinates.rs","byte_start":86889,"byte_end":86892,"line_start":187,"line_end":187,"column_start":45,"column_end":48},"name":"m66","qualname":"::base::coordinates::M6x6::m66","value":"N","parent":{"krate":0,"index":9192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":381},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"default_allocator","qualname":"::base::default_allocator","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":411},{"krate":0,"index":418},{"krate":0,"index":425},{"krate":0,"index":432},{"krate":0,"index":438},{"krate":0,"index":444},{"krate":0,"index":449},{"krate":0,"index":454},{"krate":0,"index":459}],"decl_id":null,"docs":" The default matrix data storage allocator.","sig":null,"attributes":[{"value":"! The default matrix data storage allocator.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":87920,"byte_end":87966,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":87967,"byte_end":87970,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This will use stack-allocated buffers for matrices with dimensions known at compile-time, and","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":87971,"byte_end":88068,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"! heap-allocated buffers for matrices with at least one dimension unknown at compile-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":88069,"byte_end":88161,"line_start":4,"line_end":4,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":401},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":88912,"byte_end":88928,"line_start":34,"line_end":34,"column_start":12,"column_end":28},"name":"DefaultAllocator","qualname":"::base::default_allocator::DefaultAllocator","value":"","parent":null,"children":[],"decl_id":null,"docs":" An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized\n matrices respectively.\n","sig":null,"attributes":[{"value":"/ An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":88773,"byte_end":88873,"line_start":32,"line_end":32,"column_start":1,"column_end":101}},{"value":"/ matrices respectively.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":88874,"byte_end":88900,"line_start":33,"line_end":33,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":464},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dimension","qualname":"::base::dimension","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":475},{"krate":0,"index":9577},{"krate":0,"index":9589},{"krate":0,"index":9588},{"krate":0,"index":9585},{"krate":0,"index":9586},{"krate":0,"index":9581},{"krate":0,"index":9582},{"krate":0,"index":9579},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":502},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":9591},{"krate":0,"index":9594},{"krate":0,"index":9598},{"krate":0,"index":9603},{"krate":0,"index":9607},{"krate":0,"index":9611},{"krate":0,"index":9614},{"krate":0,"index":9618},{"krate":0,"index":9623},{"krate":0,"index":9626},{"krate":0,"index":9630},{"krate":0,"index":9635},{"krate":0,"index":9639},{"krate":0,"index":9643},{"krate":0,"index":9646},{"krate":0,"index":9650},{"krate":0,"index":9655},{"krate":0,"index":9658},{"krate":0,"index":9662},{"krate":0,"index":9667},{"krate":0,"index":9671},{"krate":0,"index":9675},{"krate":0,"index":9678},{"krate":0,"index":9682},{"krate":0,"index":9687},{"krate":0,"index":9690},{"krate":0,"index":9694},{"krate":0,"index":9699},{"krate":0,"index":9703},{"krate":0,"index":9707},{"krate":0,"index":9710},{"krate":0,"index":9714},{"krate":0,"index":9719},{"krate":0,"index":9722},{"krate":0,"index":9726},{"krate":0,"index":9731},{"krate":0,"index":9735},{"krate":0,"index":9739},{"krate":0,"index":9742},{"krate":0,"index":9746},{"krate":0,"index":9751},{"krate":0,"index":9754},{"krate":0,"index":9758},{"krate":0,"index":9763},{"krate":0,"index":9767},{"krate":0,"index":9771},{"krate":0,"index":9774},{"krate":0,"index":9778},{"krate":0,"index":513},{"krate":0,"index":517},{"krate":0,"index":9783},{"krate":0,"index":9797},{"krate":0,"index":9796},{"krate":0,"index":9794},{"krate":0,"index":9791},{"krate":0,"index":9788},{"krate":0,"index":9789},{"krate":0,"index":9785},{"krate":0,"index":9786},{"krate":0,"index":519},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":11069},{"krate":0,"index":11083},{"krate":0,"index":11082},{"krate":0,"index":11080},{"krate":0,"index":11077},{"krate":0,"index":11074},{"krate":0,"index":11075},{"krate":0,"index":11071},{"krate":0,"index":11072},{"krate":0,"index":9799},{"krate":0,"index":9803},{"krate":0,"index":9806},{"krate":0,"index":9808},{"krate":0,"index":11085},{"krate":0,"index":11099},{"krate":0,"index":11098},{"krate":0,"index":11096},{"krate":0,"index":11093},{"krate":0,"index":11090},{"krate":0,"index":11091},{"krate":0,"index":11087},{"krate":0,"index":11088},{"krate":0,"index":9809},{"krate":0,"index":9813},{"krate":0,"index":9816},{"krate":0,"index":9818},{"krate":0,"index":11101},{"krate":0,"index":11115},{"krate":0,"index":11114},{"krate":0,"index":11112},{"krate":0,"index":11109},{"krate":0,"index":11106},{"krate":0,"index":11107},{"krate":0,"index":11103},{"krate":0,"index":11104},{"krate":0,"index":9819},{"krate":0,"index":9823},{"krate":0,"index":9826},{"krate":0,"index":9828},{"krate":0,"index":11117},{"krate":0,"index":11131},{"krate":0,"index":11130},{"krate":0,"index":11128},{"krate":0,"index":11125},{"krate":0,"index":11122},{"krate":0,"index":11123},{"krate":0,"index":11119},{"krate":0,"index":11120},{"krate":0,"index":9829},{"krate":0,"index":9833},{"krate":0,"index":9836},{"krate":0,"index":9838},{"krate":0,"index":11133},{"krate":0,"index":11147},{"krate":0,"index":11146},{"krate":0,"index":11144},{"krate":0,"index":11141},{"krate":0,"index":11138},{"krate":0,"index":11139},{"krate":0,"index":11135},{"krate":0,"index":11136},{"krate":0,"index":9839},{"krate":0,"index":9843},{"krate":0,"index":9846},{"krate":0,"index":9848},{"krate":0,"index":11149},{"krate":0,"index":11163},{"krate":0,"index":11162},{"krate":0,"index":11160},{"krate":0,"index":11157},{"krate":0,"index":11154},{"krate":0,"index":11155},{"krate":0,"index":11151},{"krate":0,"index":11152},{"krate":0,"index":9849},{"krate":0,"index":9853},{"krate":0,"index":9856},{"krate":0,"index":9858},{"krate":0,"index":11165},{"krate":0,"index":11179},{"krate":0,"index":11178},{"krate":0,"index":11176},{"krate":0,"index":11173},{"krate":0,"index":11170},{"krate":0,"index":11171},{"krate":0,"index":11167},{"krate":0,"index":11168},{"krate":0,"index":9859},{"krate":0,"index":9863},{"krate":0,"index":9866},{"krate":0,"index":9868},{"krate":0,"index":11181},{"krate":0,"index":11195},{"krate":0,"index":11194},{"krate":0,"index":11192},{"krate":0,"index":11189},{"krate":0,"index":11186},{"krate":0,"index":11187},{"krate":0,"index":11183},{"krate":0,"index":11184},{"krate":0,"index":9869},{"krate":0,"index":9873},{"krate":0,"index":9876},{"krate":0,"index":9878},{"krate":0,"index":11197},{"krate":0,"index":11211},{"krate":0,"index":11210},{"krate":0,"index":11208},{"krate":0,"index":11205},{"krate":0,"index":11202},{"krate":0,"index":11203},{"krate":0,"index":11199},{"krate":0,"index":11200},{"krate":0,"index":9879},{"krate":0,"index":9883},{"krate":0,"index":9886},{"krate":0,"index":9888},{"krate":0,"index":11213},{"krate":0,"index":11227},{"krate":0,"index":11226},{"krate":0,"index":11224},{"krate":0,"index":11221},{"krate":0,"index":11218},{"krate":0,"index":11219},{"krate":0,"index":11215},{"krate":0,"index":11216},{"krate":0,"index":9889},{"krate":0,"index":9893},{"krate":0,"index":9896},{"krate":0,"index":9898},{"krate":0,"index":11229},{"krate":0,"index":11243},{"krate":0,"index":11242},{"krate":0,"index":11240},{"krate":0,"index":11237},{"krate":0,"index":11234},{"krate":0,"index":11235},{"krate":0,"index":11231},{"krate":0,"index":11232},{"krate":0,"index":9899},{"krate":0,"index":9903},{"krate":0,"index":9906},{"krate":0,"index":9908},{"krate":0,"index":11245},{"krate":0,"index":11259},{"krate":0,"index":11258},{"krate":0,"index":11256},{"krate":0,"index":11253},{"krate":0,"index":11250},{"krate":0,"index":11251},{"krate":0,"index":11247},{"krate":0,"index":11248},{"krate":0,"index":9909},{"krate":0,"index":9913},{"krate":0,"index":9916},{"krate":0,"index":9918},{"krate":0,"index":11261},{"krate":0,"index":11275},{"krate":0,"index":11274},{"krate":0,"index":11272},{"krate":0,"index":11269},{"krate":0,"index":11266},{"krate":0,"index":11267},{"krate":0,"index":11263},{"krate":0,"index":11264},{"krate":0,"index":9919},{"krate":0,"index":9923},{"krate":0,"index":9926},{"krate":0,"index":9928},{"krate":0,"index":11277},{"krate":0,"index":11291},{"krate":0,"index":11290},{"krate":0,"index":11288},{"krate":0,"index":11285},{"krate":0,"index":11282},{"krate":0,"index":11283},{"krate":0,"index":11279},{"krate":0,"index":11280},{"krate":0,"index":9929},{"krate":0,"index":9933},{"krate":0,"index":9936},{"krate":0,"index":9938},{"krate":0,"index":11293},{"krate":0,"index":11307},{"krate":0,"index":11306},{"krate":0,"index":11304},{"krate":0,"index":11301},{"krate":0,"index":11298},{"krate":0,"index":11299},{"krate":0,"index":11295},{"krate":0,"index":11296},{"krate":0,"index":9939},{"krate":0,"index":9943},{"krate":0,"index":9946},{"krate":0,"index":9948},{"krate":0,"index":11309},{"krate":0,"index":11323},{"krate":0,"index":11322},{"krate":0,"index":11320},{"krate":0,"index":11317},{"krate":0,"index":11314},{"krate":0,"index":11315},{"krate":0,"index":11311},{"krate":0,"index":11312},{"krate":0,"index":9949},{"krate":0,"index":9953},{"krate":0,"index":9956},{"krate":0,"index":9958},{"krate":0,"index":11325},{"krate":0,"index":11339},{"krate":0,"index":11338},{"krate":0,"index":11336},{"krate":0,"index":11333},{"krate":0,"index":11330},{"krate":0,"index":11331},{"krate":0,"index":11327},{"krate":0,"index":11328},{"krate":0,"index":9959},{"krate":0,"index":9963},{"krate":0,"index":9966},{"krate":0,"index":9968},{"krate":0,"index":11341},{"krate":0,"index":11355},{"krate":0,"index":11354},{"krate":0,"index":11352},{"krate":0,"index":11349},{"krate":0,"index":11346},{"krate":0,"index":11347},{"krate":0,"index":11343},{"krate":0,"index":11344},{"krate":0,"index":9969},{"krate":0,"index":9973},{"krate":0,"index":9976},{"krate":0,"index":9978},{"krate":0,"index":11357},{"krate":0,"index":11371},{"krate":0,"index":11370},{"krate":0,"index":11368},{"krate":0,"index":11365},{"krate":0,"index":11362},{"krate":0,"index":11363},{"krate":0,"index":11359},{"krate":0,"index":11360},{"krate":0,"index":9979},{"krate":0,"index":9983},{"krate":0,"index":9986},{"krate":0,"index":9988},{"krate":0,"index":11373},{"krate":0,"index":11387},{"krate":0,"index":11386},{"krate":0,"index":11384},{"krate":0,"index":11381},{"krate":0,"index":11378},{"krate":0,"index":11379},{"krate":0,"index":11375},{"krate":0,"index":11376},{"krate":0,"index":9989},{"krate":0,"index":9993},{"krate":0,"index":9996},{"krate":0,"index":9998},{"krate":0,"index":11389},{"krate":0,"index":11403},{"krate":0,"index":11402},{"krate":0,"index":11400},{"krate":0,"index":11397},{"krate":0,"index":11394},{"krate":0,"index":11395},{"krate":0,"index":11391},{"krate":0,"index":11392},{"krate":0,"index":9999},{"krate":0,"index":10003},{"krate":0,"index":10006},{"krate":0,"index":10008},{"krate":0,"index":11405},{"krate":0,"index":11419},{"krate":0,"index":11418},{"krate":0,"index":11416},{"krate":0,"index":11413},{"krate":0,"index":11410},{"krate":0,"index":11411},{"krate":0,"index":11407},{"krate":0,"index":11408},{"krate":0,"index":10009},{"krate":0,"index":10013},{"krate":0,"index":10016},{"krate":0,"index":10018},{"krate":0,"index":11421},{"krate":0,"index":11435},{"krate":0,"index":11434},{"krate":0,"index":11432},{"krate":0,"index":11429},{"krate":0,"index":11426},{"krate":0,"index":11427},{"krate":0,"index":11423},{"krate":0,"index":11424},{"krate":0,"index":10019},{"krate":0,"index":10023},{"krate":0,"index":10026},{"krate":0,"index":10028},{"krate":0,"index":11437},{"krate":0,"index":11451},{"krate":0,"index":11450},{"krate":0,"index":11448},{"krate":0,"index":11445},{"krate":0,"index":11442},{"krate":0,"index":11443},{"krate":0,"index":11439},{"krate":0,"index":11440},{"krate":0,"index":10029},{"krate":0,"index":10033},{"krate":0,"index":10036},{"krate":0,"index":10038},{"krate":0,"index":11453},{"krate":0,"index":11467},{"krate":0,"index":11466},{"krate":0,"index":11464},{"krate":0,"index":11461},{"krate":0,"index":11458},{"krate":0,"index":11459},{"krate":0,"index":11455},{"krate":0,"index":11456},{"krate":0,"index":10039},{"krate":0,"index":10043},{"krate":0,"index":10046},{"krate":0,"index":10048},{"krate":0,"index":11469},{"krate":0,"index":11483},{"krate":0,"index":11482},{"krate":0,"index":11480},{"krate":0,"index":11477},{"krate":0,"index":11474},{"krate":0,"index":11475},{"krate":0,"index":11471},{"krate":0,"index":11472},{"krate":0,"index":10049},{"krate":0,"index":10053},{"krate":0,"index":10056},{"krate":0,"index":10058},{"krate":0,"index":11485},{"krate":0,"index":11499},{"krate":0,"index":11498},{"krate":0,"index":11496},{"krate":0,"index":11493},{"krate":0,"index":11490},{"krate":0,"index":11491},{"krate":0,"index":11487},{"krate":0,"index":11488},{"krate":0,"index":10059},{"krate":0,"index":10063},{"krate":0,"index":10066},{"krate":0,"index":10068},{"krate":0,"index":11501},{"krate":0,"index":11515},{"krate":0,"index":11514},{"krate":0,"index":11512},{"krate":0,"index":11509},{"krate":0,"index":11506},{"krate":0,"index":11507},{"krate":0,"index":11503},{"krate":0,"index":11504},{"krate":0,"index":10069},{"krate":0,"index":10073},{"krate":0,"index":10076},{"krate":0,"index":10078},{"krate":0,"index":11517},{"krate":0,"index":11531},{"krate":0,"index":11530},{"krate":0,"index":11528},{"krate":0,"index":11525},{"krate":0,"index":11522},{"krate":0,"index":11523},{"krate":0,"index":11519},{"krate":0,"index":11520},{"krate":0,"index":10079},{"krate":0,"index":10083},{"krate":0,"index":10086},{"krate":0,"index":10088},{"krate":0,"index":11533},{"krate":0,"index":11547},{"krate":0,"index":11546},{"krate":0,"index":11544},{"krate":0,"index":11541},{"krate":0,"index":11538},{"krate":0,"index":11539},{"krate":0,"index":11535},{"krate":0,"index":11536},{"krate":0,"index":10089},{"krate":0,"index":10093},{"krate":0,"index":10096},{"krate":0,"index":10098},{"krate":0,"index":11549},{"krate":0,"index":11563},{"krate":0,"index":11562},{"krate":0,"index":11560},{"krate":0,"index":11557},{"krate":0,"index":11554},{"krate":0,"index":11555},{"krate":0,"index":11551},{"krate":0,"index":11552},{"krate":0,"index":10099},{"krate":0,"index":10103},{"krate":0,"index":10106},{"krate":0,"index":10108},{"krate":0,"index":11565},{"krate":0,"index":11579},{"krate":0,"index":11578},{"krate":0,"index":11576},{"krate":0,"index":11573},{"krate":0,"index":11570},{"krate":0,"index":11571},{"krate":0,"index":11567},{"krate":0,"index":11568},{"krate":0,"index":10109},{"krate":0,"index":10113},{"krate":0,"index":10116},{"krate":0,"index":10118},{"krate":0,"index":11581},{"krate":0,"index":11595},{"krate":0,"index":11594},{"krate":0,"index":11592},{"krate":0,"index":11589},{"krate":0,"index":11586},{"krate":0,"index":11587},{"krate":0,"index":11583},{"krate":0,"index":11584},{"krate":0,"index":10119},{"krate":0,"index":10123},{"krate":0,"index":10126},{"krate":0,"index":10128},{"krate":0,"index":11597},{"krate":0,"index":11611},{"krate":0,"index":11610},{"krate":0,"index":11608},{"krate":0,"index":11605},{"krate":0,"index":11602},{"krate":0,"index":11603},{"krate":0,"index":11599},{"krate":0,"index":11600},{"krate":0,"index":10129},{"krate":0,"index":10133},{"krate":0,"index":10136},{"krate":0,"index":10138},{"krate":0,"index":11613},{"krate":0,"index":11627},{"krate":0,"index":11626},{"krate":0,"index":11624},{"krate":0,"index":11621},{"krate":0,"index":11618},{"krate":0,"index":11619},{"krate":0,"index":11615},{"krate":0,"index":11616},{"krate":0,"index":10139},{"krate":0,"index":10143},{"krate":0,"index":10146},{"krate":0,"index":10148},{"krate":0,"index":11629},{"krate":0,"index":11643},{"krate":0,"index":11642},{"krate":0,"index":11640},{"krate":0,"index":11637},{"krate":0,"index":11634},{"krate":0,"index":11635},{"krate":0,"index":11631},{"krate":0,"index":11632},{"krate":0,"index":10149},{"krate":0,"index":10153},{"krate":0,"index":10156},{"krate":0,"index":10158},{"krate":0,"index":11645},{"krate":0,"index":11659},{"krate":0,"index":11658},{"krate":0,"index":11656},{"krate":0,"index":11653},{"krate":0,"index":11650},{"krate":0,"index":11651},{"krate":0,"index":11647},{"krate":0,"index":11648},{"krate":0,"index":10159},{"krate":0,"index":10163},{"krate":0,"index":10166},{"krate":0,"index":10168},{"krate":0,"index":11661},{"krate":0,"index":11675},{"krate":0,"index":11674},{"krate":0,"index":11672},{"krate":0,"index":11669},{"krate":0,"index":11666},{"krate":0,"index":11667},{"krate":0,"index":11663},{"krate":0,"index":11664},{"krate":0,"index":10169},{"krate":0,"index":10173},{"krate":0,"index":10176},{"krate":0,"index":10178},{"krate":0,"index":11677},{"krate":0,"index":11691},{"krate":0,"index":11690},{"krate":0,"index":11688},{"krate":0,"index":11685},{"krate":0,"index":11682},{"krate":0,"index":11683},{"krate":0,"index":11679},{"krate":0,"index":11680},{"krate":0,"index":10179},{"krate":0,"index":10183},{"krate":0,"index":10186},{"krate":0,"index":10188},{"krate":0,"index":11693},{"krate":0,"index":11707},{"krate":0,"index":11706},{"krate":0,"index":11704},{"krate":0,"index":11701},{"krate":0,"index":11698},{"krate":0,"index":11699},{"krate":0,"index":11695},{"krate":0,"index":11696},{"krate":0,"index":10189},{"krate":0,"index":10193},{"krate":0,"index":10196},{"krate":0,"index":10198},{"krate":0,"index":11709},{"krate":0,"index":11723},{"krate":0,"index":11722},{"krate":0,"index":11720},{"krate":0,"index":11717},{"krate":0,"index":11714},{"krate":0,"index":11715},{"krate":0,"index":11711},{"krate":0,"index":11712},{"krate":0,"index":10199},{"krate":0,"index":10203},{"krate":0,"index":10206},{"krate":0,"index":10208},{"krate":0,"index":11725},{"krate":0,"index":11739},{"krate":0,"index":11738},{"krate":0,"index":11736},{"krate":0,"index":11733},{"krate":0,"index":11730},{"krate":0,"index":11731},{"krate":0,"index":11727},{"krate":0,"index":11728},{"krate":0,"index":10209},{"krate":0,"index":10213},{"krate":0,"index":10216},{"krate":0,"index":10218},{"krate":0,"index":11741},{"krate":0,"index":11755},{"krate":0,"index":11754},{"krate":0,"index":11752},{"krate":0,"index":11749},{"krate":0,"index":11746},{"krate":0,"index":11747},{"krate":0,"index":11743},{"krate":0,"index":11744},{"krate":0,"index":10219},{"krate":0,"index":10223},{"krate":0,"index":10226},{"krate":0,"index":10228},{"krate":0,"index":11757},{"krate":0,"index":11771},{"krate":0,"index":11770},{"krate":0,"index":11768},{"krate":0,"index":11765},{"krate":0,"index":11762},{"krate":0,"index":11763},{"krate":0,"index":11759},{"krate":0,"index":11760},{"krate":0,"index":10229},{"krate":0,"index":10233},{"krate":0,"index":10236},{"krate":0,"index":10238},{"krate":0,"index":11773},{"krate":0,"index":11787},{"krate":0,"index":11786},{"krate":0,"index":11784},{"krate":0,"index":11781},{"krate":0,"index":11778},{"krate":0,"index":11779},{"krate":0,"index":11775},{"krate":0,"index":11776},{"krate":0,"index":10239},{"krate":0,"index":10243},{"krate":0,"index":10246},{"krate":0,"index":10248},{"krate":0,"index":11789},{"krate":0,"index":11803},{"krate":0,"index":11802},{"krate":0,"index":11800},{"krate":0,"index":11797},{"krate":0,"index":11794},{"krate":0,"index":11795},{"krate":0,"index":11791},{"krate":0,"index":11792},{"krate":0,"index":10249},{"krate":0,"index":10253},{"krate":0,"index":10256},{"krate":0,"index":10258},{"krate":0,"index":11805},{"krate":0,"index":11819},{"krate":0,"index":11818},{"krate":0,"index":11816},{"krate":0,"index":11813},{"krate":0,"index":11810},{"krate":0,"index":11811},{"krate":0,"index":11807},{"krate":0,"index":11808},{"krate":0,"index":10259},{"krate":0,"index":10263},{"krate":0,"index":10266},{"krate":0,"index":10268},{"krate":0,"index":11821},{"krate":0,"index":11835},{"krate":0,"index":11834},{"krate":0,"index":11832},{"krate":0,"index":11829},{"krate":0,"index":11826},{"krate":0,"index":11827},{"krate":0,"index":11823},{"krate":0,"index":11824},{"krate":0,"index":10269},{"krate":0,"index":10273},{"krate":0,"index":10276},{"krate":0,"index":10278},{"krate":0,"index":11837},{"krate":0,"index":11851},{"krate":0,"index":11850},{"krate":0,"index":11848},{"krate":0,"index":11845},{"krate":0,"index":11842},{"krate":0,"index":11843},{"krate":0,"index":11839},{"krate":0,"index":11840},{"krate":0,"index":10279},{"krate":0,"index":10283},{"krate":0,"index":10286},{"krate":0,"index":10288},{"krate":0,"index":11853},{"krate":0,"index":11867},{"krate":0,"index":11866},{"krate":0,"index":11864},{"krate":0,"index":11861},{"krate":0,"index":11858},{"krate":0,"index":11859},{"krate":0,"index":11855},{"krate":0,"index":11856},{"krate":0,"index":10289},{"krate":0,"index":10293},{"krate":0,"index":10296},{"krate":0,"index":10298},{"krate":0,"index":11869},{"krate":0,"index":11883},{"krate":0,"index":11882},{"krate":0,"index":11880},{"krate":0,"index":11877},{"krate":0,"index":11874},{"krate":0,"index":11875},{"krate":0,"index":11871},{"krate":0,"index":11872},{"krate":0,"index":10299},{"krate":0,"index":10303},{"krate":0,"index":10306},{"krate":0,"index":10308},{"krate":0,"index":11885},{"krate":0,"index":11899},{"krate":0,"index":11898},{"krate":0,"index":11896},{"krate":0,"index":11893},{"krate":0,"index":11890},{"krate":0,"index":11891},{"krate":0,"index":11887},{"krate":0,"index":11888},{"krate":0,"index":10309},{"krate":0,"index":10313},{"krate":0,"index":10316},{"krate":0,"index":10318},{"krate":0,"index":11901},{"krate":0,"index":11915},{"krate":0,"index":11914},{"krate":0,"index":11912},{"krate":0,"index":11909},{"krate":0,"index":11906},{"krate":0,"index":11907},{"krate":0,"index":11903},{"krate":0,"index":11904},{"krate":0,"index":10319},{"krate":0,"index":10323},{"krate":0,"index":10326},{"krate":0,"index":10328},{"krate":0,"index":11917},{"krate":0,"index":11931},{"krate":0,"index":11930},{"krate":0,"index":11928},{"krate":0,"index":11925},{"krate":0,"index":11922},{"krate":0,"index":11923},{"krate":0,"index":11919},{"krate":0,"index":11920},{"krate":0,"index":10329},{"krate":0,"index":10333},{"krate":0,"index":10336},{"krate":0,"index":10338},{"krate":0,"index":11933},{"krate":0,"index":11947},{"krate":0,"index":11946},{"krate":0,"index":11944},{"krate":0,"index":11941},{"krate":0,"index":11938},{"krate":0,"index":11939},{"krate":0,"index":11935},{"krate":0,"index":11936},{"krate":0,"index":10339},{"krate":0,"index":10343},{"krate":0,"index":10346},{"krate":0,"index":10348},{"krate":0,"index":11949},{"krate":0,"index":11963},{"krate":0,"index":11962},{"krate":0,"index":11960},{"krate":0,"index":11957},{"krate":0,"index":11954},{"krate":0,"index":11955},{"krate":0,"index":11951},{"krate":0,"index":11952},{"krate":0,"index":10349},{"krate":0,"index":10353},{"krate":0,"index":10356},{"krate":0,"index":10358},{"krate":0,"index":11965},{"krate":0,"index":11979},{"krate":0,"index":11978},{"krate":0,"index":11976},{"krate":0,"index":11973},{"krate":0,"index":11970},{"krate":0,"index":11971},{"krate":0,"index":11967},{"krate":0,"index":11968},{"krate":0,"index":10359},{"krate":0,"index":10363},{"krate":0,"index":10366},{"krate":0,"index":10368},{"krate":0,"index":11981},{"krate":0,"index":11995},{"krate":0,"index":11994},{"krate":0,"index":11992},{"krate":0,"index":11989},{"krate":0,"index":11986},{"krate":0,"index":11987},{"krate":0,"index":11983},{"krate":0,"index":11984},{"krate":0,"index":10369},{"krate":0,"index":10373},{"krate":0,"index":10376},{"krate":0,"index":10378},{"krate":0,"index":11997},{"krate":0,"index":12011},{"krate":0,"index":12010},{"krate":0,"index":12008},{"krate":0,"index":12005},{"krate":0,"index":12002},{"krate":0,"index":12003},{"krate":0,"index":11999},{"krate":0,"index":12000},{"krate":0,"index":10379},{"krate":0,"index":10383},{"krate":0,"index":10386},{"krate":0,"index":10388},{"krate":0,"index":12013},{"krate":0,"index":12027},{"krate":0,"index":12026},{"krate":0,"index":12024},{"krate":0,"index":12021},{"krate":0,"index":12018},{"krate":0,"index":12019},{"krate":0,"index":12015},{"krate":0,"index":12016},{"krate":0,"index":10389},{"krate":0,"index":10393},{"krate":0,"index":10396},{"krate":0,"index":10398},{"krate":0,"index":12029},{"krate":0,"index":12043},{"krate":0,"index":12042},{"krate":0,"index":12040},{"krate":0,"index":12037},{"krate":0,"index":12034},{"krate":0,"index":12035},{"krate":0,"index":12031},{"krate":0,"index":12032},{"krate":0,"index":10399},{"krate":0,"index":10403},{"krate":0,"index":10406},{"krate":0,"index":10408},{"krate":0,"index":12045},{"krate":0,"index":12059},{"krate":0,"index":12058},{"krate":0,"index":12056},{"krate":0,"index":12053},{"krate":0,"index":12050},{"krate":0,"index":12051},{"krate":0,"index":12047},{"krate":0,"index":12048},{"krate":0,"index":10409},{"krate":0,"index":10413},{"krate":0,"index":10416},{"krate":0,"index":10418},{"krate":0,"index":12061},{"krate":0,"index":12075},{"krate":0,"index":12074},{"krate":0,"index":12072},{"krate":0,"index":12069},{"krate":0,"index":12066},{"krate":0,"index":12067},{"krate":0,"index":12063},{"krate":0,"index":12064},{"krate":0,"index":10419},{"krate":0,"index":10423},{"krate":0,"index":10426},{"krate":0,"index":10428},{"krate":0,"index":12077},{"krate":0,"index":12091},{"krate":0,"index":12090},{"krate":0,"index":12088},{"krate":0,"index":12085},{"krate":0,"index":12082},{"krate":0,"index":12083},{"krate":0,"index":12079},{"krate":0,"index":12080},{"krate":0,"index":10429},{"krate":0,"index":10433},{"krate":0,"index":10436},{"krate":0,"index":10438},{"krate":0,"index":12093},{"krate":0,"index":12107},{"krate":0,"index":12106},{"krate":0,"index":12104},{"krate":0,"index":12101},{"krate":0,"index":12098},{"krate":0,"index":12099},{"krate":0,"index":12095},{"krate":0,"index":12096},{"krate":0,"index":10439},{"krate":0,"index":10443},{"krate":0,"index":10446},{"krate":0,"index":10448},{"krate":0,"index":12109},{"krate":0,"index":12123},{"krate":0,"index":12122},{"krate":0,"index":12120},{"krate":0,"index":12117},{"krate":0,"index":12114},{"krate":0,"index":12115},{"krate":0,"index":12111},{"krate":0,"index":12112},{"krate":0,"index":10449},{"krate":0,"index":10453},{"krate":0,"index":10456},{"krate":0,"index":10458},{"krate":0,"index":12125},{"krate":0,"index":12139},{"krate":0,"index":12138},{"krate":0,"index":12136},{"krate":0,"index":12133},{"krate":0,"index":12130},{"krate":0,"index":12131},{"krate":0,"index":12127},{"krate":0,"index":12128},{"krate":0,"index":10459},{"krate":0,"index":10463},{"krate":0,"index":10466},{"krate":0,"index":10468},{"krate":0,"index":12141},{"krate":0,"index":12155},{"krate":0,"index":12154},{"krate":0,"index":12152},{"krate":0,"index":12149},{"krate":0,"index":12146},{"krate":0,"index":12147},{"krate":0,"index":12143},{"krate":0,"index":12144},{"krate":0,"index":10469},{"krate":0,"index":10473},{"krate":0,"index":10476},{"krate":0,"index":10478},{"krate":0,"index":12157},{"krate":0,"index":12171},{"krate":0,"index":12170},{"krate":0,"index":12168},{"krate":0,"index":12165},{"krate":0,"index":12162},{"krate":0,"index":12163},{"krate":0,"index":12159},{"krate":0,"index":12160},{"krate":0,"index":10479},{"krate":0,"index":10483},{"krate":0,"index":10486},{"krate":0,"index":10488},{"krate":0,"index":12173},{"krate":0,"index":12187},{"krate":0,"index":12186},{"krate":0,"index":12184},{"krate":0,"index":12181},{"krate":0,"index":12178},{"krate":0,"index":12179},{"krate":0,"index":12175},{"krate":0,"index":12176},{"krate":0,"index":10489},{"krate":0,"index":10493},{"krate":0,"index":10496},{"krate":0,"index":10498},{"krate":0,"index":12189},{"krate":0,"index":12203},{"krate":0,"index":12202},{"krate":0,"index":12200},{"krate":0,"index":12197},{"krate":0,"index":12194},{"krate":0,"index":12195},{"krate":0,"index":12191},{"krate":0,"index":12192},{"krate":0,"index":10499},{"krate":0,"index":10503},{"krate":0,"index":10506},{"krate":0,"index":10508},{"krate":0,"index":12205},{"krate":0,"index":12219},{"krate":0,"index":12218},{"krate":0,"index":12216},{"krate":0,"index":12213},{"krate":0,"index":12210},{"krate":0,"index":12211},{"krate":0,"index":12207},{"krate":0,"index":12208},{"krate":0,"index":10509},{"krate":0,"index":10513},{"krate":0,"index":10516},{"krate":0,"index":10518},{"krate":0,"index":12221},{"krate":0,"index":12235},{"krate":0,"index":12234},{"krate":0,"index":12232},{"krate":0,"index":12229},{"krate":0,"index":12226},{"krate":0,"index":12227},{"krate":0,"index":12223},{"krate":0,"index":12224},{"krate":0,"index":10519},{"krate":0,"index":10523},{"krate":0,"index":10526},{"krate":0,"index":10528},{"krate":0,"index":12237},{"krate":0,"index":12251},{"krate":0,"index":12250},{"krate":0,"index":12248},{"krate":0,"index":12245},{"krate":0,"index":12242},{"krate":0,"index":12243},{"krate":0,"index":12239},{"krate":0,"index":12240},{"krate":0,"index":10529},{"krate":0,"index":10533},{"krate":0,"index":10536},{"krate":0,"index":10538},{"krate":0,"index":12253},{"krate":0,"index":12267},{"krate":0,"index":12266},{"krate":0,"index":12264},{"krate":0,"index":12261},{"krate":0,"index":12258},{"krate":0,"index":12259},{"krate":0,"index":12255},{"krate":0,"index":12256},{"krate":0,"index":10539},{"krate":0,"index":10543},{"krate":0,"index":10546},{"krate":0,"index":10548},{"krate":0,"index":12269},{"krate":0,"index":12283},{"krate":0,"index":12282},{"krate":0,"index":12280},{"krate":0,"index":12277},{"krate":0,"index":12274},{"krate":0,"index":12275},{"krate":0,"index":12271},{"krate":0,"index":12272},{"krate":0,"index":10549},{"krate":0,"index":10553},{"krate":0,"index":10556},{"krate":0,"index":10558},{"krate":0,"index":12285},{"krate":0,"index":12299},{"krate":0,"index":12298},{"krate":0,"index":12296},{"krate":0,"index":12293},{"krate":0,"index":12290},{"krate":0,"index":12291},{"krate":0,"index":12287},{"krate":0,"index":12288},{"krate":0,"index":10559},{"krate":0,"index":10563},{"krate":0,"index":10566},{"krate":0,"index":10568},{"krate":0,"index":12301},{"krate":0,"index":12315},{"krate":0,"index":12314},{"krate":0,"index":12312},{"krate":0,"index":12309},{"krate":0,"index":12306},{"krate":0,"index":12307},{"krate":0,"index":12303},{"krate":0,"index":12304},{"krate":0,"index":10569},{"krate":0,"index":10573},{"krate":0,"index":10576},{"krate":0,"index":10578},{"krate":0,"index":12317},{"krate":0,"index":12331},{"krate":0,"index":12330},{"krate":0,"index":12328},{"krate":0,"index":12325},{"krate":0,"index":12322},{"krate":0,"index":12323},{"krate":0,"index":12319},{"krate":0,"index":12320},{"krate":0,"index":10579},{"krate":0,"index":10583},{"krate":0,"index":10586},{"krate":0,"index":10588},{"krate":0,"index":12333},{"krate":0,"index":12347},{"krate":0,"index":12346},{"krate":0,"index":12344},{"krate":0,"index":12341},{"krate":0,"index":12338},{"krate":0,"index":12339},{"krate":0,"index":12335},{"krate":0,"index":12336},{"krate":0,"index":10589},{"krate":0,"index":10593},{"krate":0,"index":10596},{"krate":0,"index":10598},{"krate":0,"index":12349},{"krate":0,"index":12363},{"krate":0,"index":12362},{"krate":0,"index":12360},{"krate":0,"index":12357},{"krate":0,"index":12354},{"krate":0,"index":12355},{"krate":0,"index":12351},{"krate":0,"index":12352},{"krate":0,"index":10599},{"krate":0,"index":10603},{"krate":0,"index":10606},{"krate":0,"index":10608},{"krate":0,"index":12365},{"krate":0,"index":12379},{"krate":0,"index":12378},{"krate":0,"index":12376},{"krate":0,"index":12373},{"krate":0,"index":12370},{"krate":0,"index":12371},{"krate":0,"index":12367},{"krate":0,"index":12368},{"krate":0,"index":10609},{"krate":0,"index":10613},{"krate":0,"index":10616},{"krate":0,"index":10618},{"krate":0,"index":12381},{"krate":0,"index":12395},{"krate":0,"index":12394},{"krate":0,"index":12392},{"krate":0,"index":12389},{"krate":0,"index":12386},{"krate":0,"index":12387},{"krate":0,"index":12383},{"krate":0,"index":12384},{"krate":0,"index":10619},{"krate":0,"index":10623},{"krate":0,"index":10626},{"krate":0,"index":10628},{"krate":0,"index":12397},{"krate":0,"index":12411},{"krate":0,"index":12410},{"krate":0,"index":12408},{"krate":0,"index":12405},{"krate":0,"index":12402},{"krate":0,"index":12403},{"krate":0,"index":12399},{"krate":0,"index":12400},{"krate":0,"index":10629},{"krate":0,"index":10633},{"krate":0,"index":10636},{"krate":0,"index":10638},{"krate":0,"index":12413},{"krate":0,"index":12427},{"krate":0,"index":12426},{"krate":0,"index":12424},{"krate":0,"index":12421},{"krate":0,"index":12418},{"krate":0,"index":12419},{"krate":0,"index":12415},{"krate":0,"index":12416},{"krate":0,"index":10639},{"krate":0,"index":10643},{"krate":0,"index":10646},{"krate":0,"index":10648},{"krate":0,"index":12429},{"krate":0,"index":12443},{"krate":0,"index":12442},{"krate":0,"index":12440},{"krate":0,"index":12437},{"krate":0,"index":12434},{"krate":0,"index":12435},{"krate":0,"index":12431},{"krate":0,"index":12432},{"krate":0,"index":10649},{"krate":0,"index":10653},{"krate":0,"index":10656},{"krate":0,"index":10658},{"krate":0,"index":12445},{"krate":0,"index":12459},{"krate":0,"index":12458},{"krate":0,"index":12456},{"krate":0,"index":12453},{"krate":0,"index":12450},{"krate":0,"index":12451},{"krate":0,"index":12447},{"krate":0,"index":12448},{"krate":0,"index":10659},{"krate":0,"index":10663},{"krate":0,"index":10666},{"krate":0,"index":10668},{"krate":0,"index":12461},{"krate":0,"index":12475},{"krate":0,"index":12474},{"krate":0,"index":12472},{"krate":0,"index":12469},{"krate":0,"index":12466},{"krate":0,"index":12467},{"krate":0,"index":12463},{"krate":0,"index":12464},{"krate":0,"index":10669},{"krate":0,"index":10673},{"krate":0,"index":10676},{"krate":0,"index":10678},{"krate":0,"index":12477},{"krate":0,"index":12491},{"krate":0,"index":12490},{"krate":0,"index":12488},{"krate":0,"index":12485},{"krate":0,"index":12482},{"krate":0,"index":12483},{"krate":0,"index":12479},{"krate":0,"index":12480},{"krate":0,"index":10679},{"krate":0,"index":10683},{"krate":0,"index":10686},{"krate":0,"index":10688},{"krate":0,"index":12493},{"krate":0,"index":12507},{"krate":0,"index":12506},{"krate":0,"index":12504},{"krate":0,"index":12501},{"krate":0,"index":12498},{"krate":0,"index":12499},{"krate":0,"index":12495},{"krate":0,"index":12496},{"krate":0,"index":10689},{"krate":0,"index":10693},{"krate":0,"index":10696},{"krate":0,"index":10698},{"krate":0,"index":12509},{"krate":0,"index":12523},{"krate":0,"index":12522},{"krate":0,"index":12520},{"krate":0,"index":12517},{"krate":0,"index":12514},{"krate":0,"index":12515},{"krate":0,"index":12511},{"krate":0,"index":12512},{"krate":0,"index":10699},{"krate":0,"index":10703},{"krate":0,"index":10706},{"krate":0,"index":10708},{"krate":0,"index":12525},{"krate":0,"index":12539},{"krate":0,"index":12538},{"krate":0,"index":12536},{"krate":0,"index":12533},{"krate":0,"index":12530},{"krate":0,"index":12531},{"krate":0,"index":12527},{"krate":0,"index":12528},{"krate":0,"index":10709},{"krate":0,"index":10713},{"krate":0,"index":10716},{"krate":0,"index":10718},{"krate":0,"index":12541},{"krate":0,"index":12555},{"krate":0,"index":12554},{"krate":0,"index":12552},{"krate":0,"index":12549},{"krate":0,"index":12546},{"krate":0,"index":12547},{"krate":0,"index":12543},{"krate":0,"index":12544},{"krate":0,"index":10719},{"krate":0,"index":10723},{"krate":0,"index":10726},{"krate":0,"index":10728},{"krate":0,"index":12557},{"krate":0,"index":12571},{"krate":0,"index":12570},{"krate":0,"index":12568},{"krate":0,"index":12565},{"krate":0,"index":12562},{"krate":0,"index":12563},{"krate":0,"index":12559},{"krate":0,"index":12560},{"krate":0,"index":10729},{"krate":0,"index":10733},{"krate":0,"index":10736},{"krate":0,"index":10738},{"krate":0,"index":12573},{"krate":0,"index":12587},{"krate":0,"index":12586},{"krate":0,"index":12584},{"krate":0,"index":12581},{"krate":0,"index":12578},{"krate":0,"index":12579},{"krate":0,"index":12575},{"krate":0,"index":12576},{"krate":0,"index":10739},{"krate":0,"index":10743},{"krate":0,"index":10746},{"krate":0,"index":10748},{"krate":0,"index":12589},{"krate":0,"index":12603},{"krate":0,"index":12602},{"krate":0,"index":12600},{"krate":0,"index":12597},{"krate":0,"index":12594},{"krate":0,"index":12595},{"krate":0,"index":12591},{"krate":0,"index":12592},{"krate":0,"index":10749},{"krate":0,"index":10753},{"krate":0,"index":10756},{"krate":0,"index":10758},{"krate":0,"index":12605},{"krate":0,"index":12619},{"krate":0,"index":12618},{"krate":0,"index":12616},{"krate":0,"index":12613},{"krate":0,"index":12610},{"krate":0,"index":12611},{"krate":0,"index":12607},{"krate":0,"index":12608},{"krate":0,"index":10759},{"krate":0,"index":10763},{"krate":0,"index":10766},{"krate":0,"index":10768},{"krate":0,"index":12621},{"krate":0,"index":12635},{"krate":0,"index":12634},{"krate":0,"index":12632},{"krate":0,"index":12629},{"krate":0,"index":12626},{"krate":0,"index":12627},{"krate":0,"index":12623},{"krate":0,"index":12624},{"krate":0,"index":10769},{"krate":0,"index":10773},{"krate":0,"index":10776},{"krate":0,"index":10778},{"krate":0,"index":12637},{"krate":0,"index":12651},{"krate":0,"index":12650},{"krate":0,"index":12648},{"krate":0,"index":12645},{"krate":0,"index":12642},{"krate":0,"index":12643},{"krate":0,"index":12639},{"krate":0,"index":12640},{"krate":0,"index":10779},{"krate":0,"index":10783},{"krate":0,"index":10786},{"krate":0,"index":10788},{"krate":0,"index":12653},{"krate":0,"index":12667},{"krate":0,"index":12666},{"krate":0,"index":12664},{"krate":0,"index":12661},{"krate":0,"index":12658},{"krate":0,"index":12659},{"krate":0,"index":12655},{"krate":0,"index":12656},{"krate":0,"index":10789},{"krate":0,"index":10793},{"krate":0,"index":10796},{"krate":0,"index":10798},{"krate":0,"index":12669},{"krate":0,"index":12683},{"krate":0,"index":12682},{"krate":0,"index":12680},{"krate":0,"index":12677},{"krate":0,"index":12674},{"krate":0,"index":12675},{"krate":0,"index":12671},{"krate":0,"index":12672},{"krate":0,"index":10799},{"krate":0,"index":10803},{"krate":0,"index":10806},{"krate":0,"index":10808},{"krate":0,"index":12685},{"krate":0,"index":12699},{"krate":0,"index":12698},{"krate":0,"index":12696},{"krate":0,"index":12693},{"krate":0,"index":12690},{"krate":0,"index":12691},{"krate":0,"index":12687},{"krate":0,"index":12688},{"krate":0,"index":10809},{"krate":0,"index":10813},{"krate":0,"index":10816},{"krate":0,"index":10818},{"krate":0,"index":12701},{"krate":0,"index":12715},{"krate":0,"index":12714},{"krate":0,"index":12712},{"krate":0,"index":12709},{"krate":0,"index":12706},{"krate":0,"index":12707},{"krate":0,"index":12703},{"krate":0,"index":12704},{"krate":0,"index":10819},{"krate":0,"index":10823},{"krate":0,"index":10826},{"krate":0,"index":10828},{"krate":0,"index":12717},{"krate":0,"index":12731},{"krate":0,"index":12730},{"krate":0,"index":12728},{"krate":0,"index":12725},{"krate":0,"index":12722},{"krate":0,"index":12723},{"krate":0,"index":12719},{"krate":0,"index":12720},{"krate":0,"index":10829},{"krate":0,"index":10833},{"krate":0,"index":10836},{"krate":0,"index":10838},{"krate":0,"index":12733},{"krate":0,"index":12747},{"krate":0,"index":12746},{"krate":0,"index":12744},{"krate":0,"index":12741},{"krate":0,"index":12738},{"krate":0,"index":12739},{"krate":0,"index":12735},{"krate":0,"index":12736},{"krate":0,"index":10839},{"krate":0,"index":10843},{"krate":0,"index":10846},{"krate":0,"index":10848},{"krate":0,"index":12749},{"krate":0,"index":12763},{"krate":0,"index":12762},{"krate":0,"index":12760},{"krate":0,"index":12757},{"krate":0,"index":12754},{"krate":0,"index":12755},{"krate":0,"index":12751},{"krate":0,"index":12752},{"krate":0,"index":10849},{"krate":0,"index":10853},{"krate":0,"index":10856},{"krate":0,"index":10858},{"krate":0,"index":12765},{"krate":0,"index":12779},{"krate":0,"index":12778},{"krate":0,"index":12776},{"krate":0,"index":12773},{"krate":0,"index":12770},{"krate":0,"index":12771},{"krate":0,"index":12767},{"krate":0,"index":12768},{"krate":0,"index":10859},{"krate":0,"index":10863},{"krate":0,"index":10866},{"krate":0,"index":10868},{"krate":0,"index":12781},{"krate":0,"index":12795},{"krate":0,"index":12794},{"krate":0,"index":12792},{"krate":0,"index":12789},{"krate":0,"index":12786},{"krate":0,"index":12787},{"krate":0,"index":12783},{"krate":0,"index":12784},{"krate":0,"index":10869},{"krate":0,"index":10873},{"krate":0,"index":10876},{"krate":0,"index":10878},{"krate":0,"index":12797},{"krate":0,"index":12811},{"krate":0,"index":12810},{"krate":0,"index":12808},{"krate":0,"index":12805},{"krate":0,"index":12802},{"krate":0,"index":12803},{"krate":0,"index":12799},{"krate":0,"index":12800},{"krate":0,"index":10879},{"krate":0,"index":10883},{"krate":0,"index":10886},{"krate":0,"index":10888},{"krate":0,"index":12813},{"krate":0,"index":12827},{"krate":0,"index":12826},{"krate":0,"index":12824},{"krate":0,"index":12821},{"krate":0,"index":12818},{"krate":0,"index":12819},{"krate":0,"index":12815},{"krate":0,"index":12816},{"krate":0,"index":10889},{"krate":0,"index":10893},{"krate":0,"index":10896},{"krate":0,"index":10898},{"krate":0,"index":12829},{"krate":0,"index":12843},{"krate":0,"index":12842},{"krate":0,"index":12840},{"krate":0,"index":12837},{"krate":0,"index":12834},{"krate":0,"index":12835},{"krate":0,"index":12831},{"krate":0,"index":12832},{"krate":0,"index":10899},{"krate":0,"index":10903},{"krate":0,"index":10906},{"krate":0,"index":10908},{"krate":0,"index":12845},{"krate":0,"index":12859},{"krate":0,"index":12858},{"krate":0,"index":12856},{"krate":0,"index":12853},{"krate":0,"index":12850},{"krate":0,"index":12851},{"krate":0,"index":12847},{"krate":0,"index":12848},{"krate":0,"index":10909},{"krate":0,"index":10913},{"krate":0,"index":10916},{"krate":0,"index":10918},{"krate":0,"index":12861},{"krate":0,"index":12875},{"krate":0,"index":12874},{"krate":0,"index":12872},{"krate":0,"index":12869},{"krate":0,"index":12866},{"krate":0,"index":12867},{"krate":0,"index":12863},{"krate":0,"index":12864},{"krate":0,"index":10919},{"krate":0,"index":10923},{"krate":0,"index":10926},{"krate":0,"index":10928},{"krate":0,"index":12877},{"krate":0,"index":12891},{"krate":0,"index":12890},{"krate":0,"index":12888},{"krate":0,"index":12885},{"krate":0,"index":12882},{"krate":0,"index":12883},{"krate":0,"index":12879},{"krate":0,"index":12880},{"krate":0,"index":10929},{"krate":0,"index":10933},{"krate":0,"index":10936},{"krate":0,"index":10938},{"krate":0,"index":12893},{"krate":0,"index":12907},{"krate":0,"index":12906},{"krate":0,"index":12904},{"krate":0,"index":12901},{"krate":0,"index":12898},{"krate":0,"index":12899},{"krate":0,"index":12895},{"krate":0,"index":12896},{"krate":0,"index":10939},{"krate":0,"index":10943},{"krate":0,"index":10946},{"krate":0,"index":10948},{"krate":0,"index":12909},{"krate":0,"index":12923},{"krate":0,"index":12922},{"krate":0,"index":12920},{"krate":0,"index":12917},{"krate":0,"index":12914},{"krate":0,"index":12915},{"krate":0,"index":12911},{"krate":0,"index":12912},{"krate":0,"index":10949},{"krate":0,"index":10953},{"krate":0,"index":10956},{"krate":0,"index":10958},{"krate":0,"index":12925},{"krate":0,"index":12939},{"krate":0,"index":12938},{"krate":0,"index":12936},{"krate":0,"index":12933},{"krate":0,"index":12930},{"krate":0,"index":12931},{"krate":0,"index":12927},{"krate":0,"index":12928},{"krate":0,"index":10959},{"krate":0,"index":10963},{"krate":0,"index":10966},{"krate":0,"index":10968},{"krate":0,"index":12941},{"krate":0,"index":12955},{"krate":0,"index":12954},{"krate":0,"index":12952},{"krate":0,"index":12949},{"krate":0,"index":12946},{"krate":0,"index":12947},{"krate":0,"index":12943},{"krate":0,"index":12944},{"krate":0,"index":10969},{"krate":0,"index":10973},{"krate":0,"index":10976},{"krate":0,"index":10978},{"krate":0,"index":12957},{"krate":0,"index":12971},{"krate":0,"index":12970},{"krate":0,"index":12968},{"krate":0,"index":12965},{"krate":0,"index":12962},{"krate":0,"index":12963},{"krate":0,"index":12959},{"krate":0,"index":12960},{"krate":0,"index":10979},{"krate":0,"index":10983},{"krate":0,"index":10986},{"krate":0,"index":10988},{"krate":0,"index":12973},{"krate":0,"index":12987},{"krate":0,"index":12986},{"krate":0,"index":12984},{"krate":0,"index":12981},{"krate":0,"index":12978},{"krate":0,"index":12979},{"krate":0,"index":12975},{"krate":0,"index":12976},{"krate":0,"index":10989},{"krate":0,"index":10993},{"krate":0,"index":10996},{"krate":0,"index":10998},{"krate":0,"index":12989},{"krate":0,"index":13003},{"krate":0,"index":13002},{"krate":0,"index":13000},{"krate":0,"index":12997},{"krate":0,"index":12994},{"krate":0,"index":12995},{"krate":0,"index":12991},{"krate":0,"index":12992},{"krate":0,"index":10999},{"krate":0,"index":11003},{"krate":0,"index":11006},{"krate":0,"index":11008},{"krate":0,"index":13005},{"krate":0,"index":13019},{"krate":0,"index":13018},{"krate":0,"index":13016},{"krate":0,"index":13013},{"krate":0,"index":13010},{"krate":0,"index":13011},{"krate":0,"index":13007},{"krate":0,"index":13008},{"krate":0,"index":11009},{"krate":0,"index":11013},{"krate":0,"index":11016},{"krate":0,"index":11018},{"krate":0,"index":13021},{"krate":0,"index":13035},{"krate":0,"index":13034},{"krate":0,"index":13032},{"krate":0,"index":13029},{"krate":0,"index":13026},{"krate":0,"index":13027},{"krate":0,"index":13023},{"krate":0,"index":13024},{"krate":0,"index":11019},{"krate":0,"index":11023},{"krate":0,"index":11026},{"krate":0,"index":11028},{"krate":0,"index":13037},{"krate":0,"index":13051},{"krate":0,"index":13050},{"krate":0,"index":13048},{"krate":0,"index":13045},{"krate":0,"index":13042},{"krate":0,"index":13043},{"krate":0,"index":13039},{"krate":0,"index":13040},{"krate":0,"index":11029},{"krate":0,"index":11033},{"krate":0,"index":11036},{"krate":0,"index":11038},{"krate":0,"index":13053},{"krate":0,"index":13067},{"krate":0,"index":13066},{"krate":0,"index":13064},{"krate":0,"index":13061},{"krate":0,"index":13058},{"krate":0,"index":13059},{"krate":0,"index":13055},{"krate":0,"index":13056},{"krate":0,"index":11039},{"krate":0,"index":11043},{"krate":0,"index":11046},{"krate":0,"index":11048},{"krate":0,"index":13069},{"krate":0,"index":13083},{"krate":0,"index":13082},{"krate":0,"index":13080},{"krate":0,"index":13077},{"krate":0,"index":13074},{"krate":0,"index":13075},{"krate":0,"index":13071},{"krate":0,"index":13072},{"krate":0,"index":11049},{"krate":0,"index":11053},{"krate":0,"index":11056},{"krate":0,"index":11058},{"krate":0,"index":13085},{"krate":0,"index":13099},{"krate":0,"index":13098},{"krate":0,"index":13096},{"krate":0,"index":13093},{"krate":0,"index":13090},{"krate":0,"index":13091},{"krate":0,"index":13087},{"krate":0,"index":13088},{"krate":0,"index":11059},{"krate":0,"index":11063},{"krate":0,"index":11066},{"krate":0,"index":11068},{"krate":0,"index":529},{"krate":0,"index":538},{"krate":0,"index":549},{"krate":0,"index":559},{"krate":0,"index":567},{"krate":0,"index":571},{"krate":0,"index":577},{"krate":0,"index":582}],"decl_id":null,"docs":" Traits and tags for identifying the dimension of all algebraic entities.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":96207,"byte_end":96230,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"! Traits and tags for identifying the dimension of all algebraic entities.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":96232,"byte_end":96308,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":9577},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":96727,"byte_end":96734,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Dynamic","qualname":"::base::dimension::Dynamic","value":"Dynamic {  }","parent":null,"children":[{"krate":0,"index":9578}],"decl_id":null,"docs":" Dim of dynamically-sized algebraic entities.\n","sig":null,"attributes":[{"value":"/ Dim of dynamically-sized algebraic entities.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":96622,"byte_end":96670,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":96839,"byte_end":96842,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Dynamic>::new","value":"fn (value: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A dynamic size equal to `value`.\n","sig":null,"attributes":[{"value":"/ A dynamic size equal to `value`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":96777,"byte_end":96813,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":96818,"byte_end":96827,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":492},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97417,"byte_end":97426,"line_start":47,"line_end":47,"column_start":11,"column_end":20},"name":"IsDynamic","qualname":"::base::dimension::IsDynamic","value":"IsDynamic","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97371,"byte_end":97406,"line_start":46,"line_end":46,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":493},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97520,"byte_end":97534,"line_start":49,"line_end":49,"column_start":11,"column_end":25},"name":"IsNotStaticOne","qualname":"::base::dimension::IsNotStaticOne","value":"IsNotStaticOne","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic` and type-level integers different from `U1`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic` and type-level integers different from `U1`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97430,"byte_end":97509,"line_start":48,"line_end":48,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":496},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97778,"byte_end":97781,"line_start":56,"line_end":56,"column_start":11,"column_end":14},"name":"Dim","qualname":"::base::dimension::Dim","value":"Dim: Any + Debug + Copy + PartialEq + Send + Sync","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501}],"decl_id":null,"docs":" Trait implemented by any type that can be used as a dimension. This includes type-level\n integers and `Dynamic` (for dimensions not known at compile-time).\n","sig":null,"attributes":[{"value":"/ Trait implemented by any type that can be used as a dimension. This includes type-level","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97605,"byte_end":97696,"line_start":54,"line_end":54,"column_start":1,"column_end":92}},{"value":"/ integers and `Dynamic` (for dimensions not known at compile-time).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97697,"byte_end":97767,"line_start":55,"line_end":55,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97859,"byte_end":97861,"line_start":58,"line_end":58,"column_start":8,"column_end":10},"name":"is","qualname":"::base::dimension::Dim::is","value":"fn <D> () -> bool","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97834,"byte_end":97851,"line_start":57,"line_end":57,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98063,"byte_end":98075,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"try_to_usize","qualname":"::base::dimension::Dim::try_to_usize","value":"fn () -> Option<usize>","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =\n Dynamic`.\n","sig":null,"attributes":[{"value":"/ Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97943,"byte_end":98037,"line_start":62,"line_end":62,"column_start":5,"column_end":99}},{"value":"/ Dynamic`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98042,"byte_end":98055,"line_start":63,"line_end":63,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98233,"byte_end":98238,"line_start":68,"line_end":68,"column_start":8,"column_end":13},"name":"value","qualname":"::base::dimension::Dim::value","value":"fn (&self) -> usize","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" Gets the run-time value of `self`. For type-level integers, this is the same as\n `Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Gets the run-time value of `self`. For type-level integers, this is the same as","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98101,"byte_end":98184,"line_start":66,"line_end":66,"column_start":5,"column_end":88}},{"value":"/ `Self::try_to_usize().unwrap()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98189,"byte_end":98225,"line_start":67,"line_end":67,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98417,"byte_end":98427,"line_start":72,"line_end":72,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::base::dimension::Dim::from_usize","value":"fn (dim: usize) -> Self","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level\n integer and `dim != Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98261,"byte_end":98349,"line_start":70,"line_end":70,"column_start":5,"column_end":93}},{"value":"/ integer and `dim != Self::try_to_usize().unwrap()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98354,"byte_end":98409,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":9591},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":100982,"byte_end":100988,"line_start":180,"line_end":180,"column_start":45,"column_end":51},"name":"DimSum","qualname":"::base::dimension::DimSum","value":"<D1 as DimAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9594},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":100942,"byte_end":100948,"line_start":180,"line_end":180,"column_start":5,"column_end":11},"name":"DimAdd","qualname":"::base::dimension::DimAdd","value":"DimAdd<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9596},{"krate":0,"index":9597}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9597},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":100967,"byte_end":100970,"line_start":180,"line_end":180,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimAdd::add","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9611},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":100994,"byte_end":101004,"line_start":180,"line_end":180,"column_start":57,"column_end":67},"name":"DimNameSum","qualname":"::base::dimension::DimNameSum","value":"<D1 as DimNameAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9614},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":100950,"byte_end":100960,"line_start":180,"line_end":180,"column_start":13,"column_end":23},"name":"DimNameAdd","qualname":"::base::dimension::DimNameAdd","value":"DimNameAdd<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9616},{"krate":0,"index":9617}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9617},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":100967,"byte_end":100970,"line_start":180,"line_end":180,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimNameAdd::add","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9623},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101059,"byte_end":101066,"line_start":181,"line_end":181,"column_start":45,"column_end":52},"name":"DimProd","qualname":"::base::dimension::DimProd","value":"<D1 as DimMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9626},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101019,"byte_end":101025,"line_start":181,"line_end":181,"column_start":5,"column_end":11},"name":"DimMul","qualname":"::base::dimension::DimMul","value":"DimMul<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9628},{"krate":0,"index":9629}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9629},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101044,"byte_end":101047,"line_start":181,"line_end":181,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimMul::mul","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9643},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101071,"byte_end":101082,"line_start":181,"line_end":181,"column_start":57,"column_end":68},"name":"DimNameProd","qualname":"::base::dimension::DimNameProd","value":"<D1 as DimNameMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9646},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101027,"byte_end":101037,"line_start":181,"line_end":181,"column_start":13,"column_end":23},"name":"DimNameMul","qualname":"::base::dimension::DimNameMul","value":"DimNameMul<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9648},{"krate":0,"index":9649}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9649},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101044,"byte_end":101047,"line_start":181,"line_end":181,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimNameMul::mul","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9655},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101137,"byte_end":101144,"line_start":182,"line_end":182,"column_start":45,"column_end":52},"name":"DimDiff","qualname":"::base::dimension::DimDiff","value":"<D1 as DimSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9658},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101097,"byte_end":101103,"line_start":182,"line_end":182,"column_start":5,"column_end":11},"name":"DimSub","qualname":"::base::dimension::DimSub","value":"DimSub<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9660},{"krate":0,"index":9661}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9661},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101122,"byte_end":101125,"line_start":182,"line_end":182,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimSub::sub","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9675},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101149,"byte_end":101160,"line_start":182,"line_end":182,"column_start":57,"column_end":68},"name":"DimNameDiff","qualname":"::base::dimension::DimNameDiff","value":"<D1 as DimNameSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9678},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101105,"byte_end":101115,"line_start":182,"line_end":182,"column_start":13,"column_end":23},"name":"DimNameSub","qualname":"::base::dimension::DimNameSub","value":"DimNameSub<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9680},{"krate":0,"index":9681}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9681},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101122,"byte_end":101125,"line_start":182,"line_end":182,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimNameSub::sub","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9687},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101215,"byte_end":101222,"line_start":183,"line_end":183,"column_start":45,"column_end":52},"name":"DimQuot","qualname":"::base::dimension::DimQuot","value":"<D1 as DimDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9690},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101175,"byte_end":101181,"line_start":183,"line_end":183,"column_start":5,"column_end":11},"name":"DimDiv","qualname":"::base::dimension::DimDiv","value":"DimDiv<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9692},{"krate":0,"index":9693}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9693},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101200,"byte_end":101203,"line_start":183,"line_end":183,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimDiv::div","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9707},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101227,"byte_end":101238,"line_start":183,"line_end":183,"column_start":57,"column_end":68},"name":"DimNameQuot","qualname":"::base::dimension::DimNameQuot","value":"<D1 as DimNameDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9710},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101183,"byte_end":101193,"line_start":183,"line_end":183,"column_start":13,"column_end":23},"name":"DimNameDiv","qualname":"::base::dimension::DimNameDiv","value":"DimNameDiv<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9712},{"krate":0,"index":9713}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9713},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101200,"byte_end":101203,"line_start":183,"line_end":183,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimNameDiv::div","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9719},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101293,"byte_end":101303,"line_start":184,"line_end":184,"column_start":45,"column_end":55},"name":"DimMinimum","qualname":"::base::dimension::DimMinimum","value":"<D1 as DimMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9722},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101253,"byte_end":101259,"line_start":184,"line_end":184,"column_start":5,"column_end":11},"name":"DimMin","qualname":"::base::dimension::DimMin","value":"DimMin<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9724},{"krate":0,"index":9725}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9725},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101278,"byte_end":101281,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimMin::min","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9722},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9739},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101305,"byte_end":101319,"line_start":184,"line_end":184,"column_start":57,"column_end":71},"name":"DimNameMinimum","qualname":"::base::dimension::DimNameMinimum","value":"<D1 as DimNameMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9742},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101261,"byte_end":101271,"line_start":184,"line_end":184,"column_start":13,"column_end":23},"name":"DimNameMin","qualname":"::base::dimension::DimNameMin","value":"DimNameMin<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9744},{"krate":0,"index":9745}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9745},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101278,"byte_end":101281,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimNameMin::min","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9751},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101374,"byte_end":101384,"line_start":185,"line_end":185,"column_start":45,"column_end":55},"name":"DimMaximum","qualname":"::base::dimension::DimMaximum","value":"<D1 as DimMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9754},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101334,"byte_end":101340,"line_start":185,"line_end":185,"column_start":5,"column_end":11},"name":"DimMax","qualname":"::base::dimension::DimMax","value":"DimMax<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9756},{"krate":0,"index":9757}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9757},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101359,"byte_end":101362,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimMax::max","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9771},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101386,"byte_end":101400,"line_start":185,"line_end":185,"column_start":57,"column_end":71},"name":"DimNameMaximum","qualname":"::base::dimension::DimNameMaximum","value":"<D1 as DimNameMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9774},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101342,"byte_end":101352,"line_start":185,"line_end":185,"column_start":13,"column_end":23},"name":"DimNameMax","qualname":"::base::dimension::DimNameMax","value":"DimNameMax<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9776},{"krate":0,"index":9777}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9777},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101359,"byte_end":101362,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimNameMax::max","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9774},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":513},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101483,"byte_end":101490,"line_start":189,"line_end":189,"column_start":11,"column_end":18},"name":"DimName","qualname":"::base::dimension::DimName","value":"DimName: Dim","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" Trait implemented exclusively by type-level integers.\n","sig":null,"attributes":[{"value":"/ Trait implemented exclusively by type-level integers.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101415,"byte_end":101472,"line_start":188,"line_end":188,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":514},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101507,"byte_end":101512,"line_start":190,"line_end":190,"column_start":10,"column_end":15},"name":"Value","qualname":"::base::dimension::DimName::Value","value":"type Value: NamedDim<Name = Self>;","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101623,"byte_end":101627,"line_start":194,"line_end":194,"column_start":8,"column_end":12},"name":"name","qualname":"::base::dimension::DimName::name","value":"fn () -> Self","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" The name of this dimension, i.e., the singleton `Self`.\n","sig":null,"attributes":[{"value":"/ The name of this dimension, i.e., the singleton `Self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101542,"byte_end":101601,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101606,"byte_end":101615,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101747,"byte_end":101750,"line_start":199,"line_end":199,"column_start":8,"column_end":11},"name":"dim","qualname":"::base::dimension::DimName::dim","value":"fn () -> usize","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" The value of this dimension.\n","sig":null,"attributes":[{"value":"/ The value of this dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101693,"byte_end":101725,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101730,"byte_end":101739,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":517},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101815,"byte_end":101823,"line_start":204,"line_end":204,"column_start":11,"column_end":19},"name":"NamedDim","qualname":"::base::dimension::NamedDim","value":"NamedDim: Sized + Any + Unsigned","parent":null,"children":[{"krate":0,"index":518}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":518},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101859,"byte_end":101863,"line_start":205,"line_end":205,"column_start":10,"column_end":14},"name":"Name","qualname":"::base::dimension::NamedDim::Name","value":"type Name: DimName<Value = Self>;","parent":{"krate":0,"index":517},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9783},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102074,"byte_end":102076,"line_start":211,"line_end":211,"column_start":12,"column_end":14},"name":"U1","qualname":"::base::dimension::U1","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension with a value of `1`.\n","sig":null,"attributes":[{"value":"/ A type level dimension with a value of `1`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101891,"byte_end":101938,"line_start":208,"line_end":208,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":11069},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103636,"byte_end":103638,"line_start":288,"line_end":288,"column_start":5,"column_end":7},"name":"U0","qualname":"::base::dimension::U0","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11085},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103648,"byte_end":103650,"line_start":288,"line_end":288,"column_start":17,"column_end":19},"name":"U2","qualname":"::base::dimension::U2","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11101},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103652,"byte_end":103654,"line_start":288,"line_end":288,"column_start":21,"column_end":23},"name":"U3","qualname":"::base::dimension::U3","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11117},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103656,"byte_end":103658,"line_start":288,"line_end":288,"column_start":25,"column_end":27},"name":"U4","qualname":"::base::dimension::U4","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11133},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103660,"byte_end":103662,"line_start":288,"line_end":288,"column_start":29,"column_end":31},"name":"U5","qualname":"::base::dimension::U5","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11149},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103664,"byte_end":103666,"line_start":288,"line_end":288,"column_start":33,"column_end":35},"name":"U6","qualname":"::base::dimension::U6","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11165},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103668,"byte_end":103670,"line_start":288,"line_end":288,"column_start":37,"column_end":39},"name":"U7","qualname":"::base::dimension::U7","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11181},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103672,"byte_end":103674,"line_start":288,"line_end":288,"column_start":41,"column_end":43},"name":"U8","qualname":"::base::dimension::U8","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11197},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103676,"byte_end":103678,"line_start":288,"line_end":288,"column_start":45,"column_end":47},"name":"U9","qualname":"::base::dimension::U9","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11213},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103680,"byte_end":103683,"line_start":288,"line_end":288,"column_start":49,"column_end":52},"name":"U10","qualname":"::base::dimension::U10","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11229},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103685,"byte_end":103688,"line_start":288,"line_end":288,"column_start":54,"column_end":57},"name":"U11","qualname":"::base::dimension::U11","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11245},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103690,"byte_end":103693,"line_start":288,"line_end":288,"column_start":59,"column_end":62},"name":"U12","qualname":"::base::dimension::U12","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11261},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103695,"byte_end":103698,"line_start":288,"line_end":288,"column_start":64,"column_end":67},"name":"U13","qualname":"::base::dimension::U13","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11277},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103700,"byte_end":103703,"line_start":288,"line_end":288,"column_start":69,"column_end":72},"name":"U14","qualname":"::base::dimension::U14","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11293},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103705,"byte_end":103708,"line_start":288,"line_end":288,"column_start":74,"column_end":77},"name":"U15","qualname":"::base::dimension::U15","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11309},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103710,"byte_end":103713,"line_start":288,"line_end":288,"column_start":79,"column_end":82},"name":"U16","qualname":"::base::dimension::U16","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11325},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103715,"byte_end":103718,"line_start":288,"line_end":288,"column_start":84,"column_end":87},"name":"U17","qualname":"::base::dimension::U17","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11341},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103720,"byte_end":103723,"line_start":288,"line_end":288,"column_start":89,"column_end":92},"name":"U18","qualname":"::base::dimension::U18","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11357},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103729,"byte_end":103732,"line_start":289,"line_end":289,"column_start":5,"column_end":8},"name":"U19","qualname":"::base::dimension::U19","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11373},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103734,"byte_end":103737,"line_start":289,"line_end":289,"column_start":10,"column_end":13},"name":"U20","qualname":"::base::dimension::U20","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11389},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103739,"byte_end":103742,"line_start":289,"line_end":289,"column_start":15,"column_end":18},"name":"U21","qualname":"::base::dimension::U21","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11405},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103744,"byte_end":103747,"line_start":289,"line_end":289,"column_start":20,"column_end":23},"name":"U22","qualname":"::base::dimension::U22","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11421},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103749,"byte_end":103752,"line_start":289,"line_end":289,"column_start":25,"column_end":28},"name":"U23","qualname":"::base::dimension::U23","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11437},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103754,"byte_end":103757,"line_start":289,"line_end":289,"column_start":30,"column_end":33},"name":"U24","qualname":"::base::dimension::U24","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11453},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103759,"byte_end":103762,"line_start":289,"line_end":289,"column_start":35,"column_end":38},"name":"U25","qualname":"::base::dimension::U25","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11469},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103764,"byte_end":103767,"line_start":289,"line_end":289,"column_start":40,"column_end":43},"name":"U26","qualname":"::base::dimension::U26","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11485},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103769,"byte_end":103772,"line_start":289,"line_end":289,"column_start":45,"column_end":48},"name":"U27","qualname":"::base::dimension::U27","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11501},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103774,"byte_end":103777,"line_start":289,"line_end":289,"column_start":50,"column_end":53},"name":"U28","qualname":"::base::dimension::U28","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11517},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103779,"byte_end":103782,"line_start":289,"line_end":289,"column_start":55,"column_end":58},"name":"U29","qualname":"::base::dimension::U29","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11533},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103784,"byte_end":103787,"line_start":289,"line_end":289,"column_start":60,"column_end":63},"name":"U30","qualname":"::base::dimension::U30","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11549},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103789,"byte_end":103792,"line_start":289,"line_end":289,"column_start":65,"column_end":68},"name":"U31","qualname":"::base::dimension::U31","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11565},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103794,"byte_end":103797,"line_start":289,"line_end":289,"column_start":70,"column_end":73},"name":"U32","qualname":"::base::dimension::U32","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11581},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103799,"byte_end":103802,"line_start":289,"line_end":289,"column_start":75,"column_end":78},"name":"U33","qualname":"::base::dimension::U33","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11597},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103804,"byte_end":103807,"line_start":289,"line_end":289,"column_start":80,"column_end":83},"name":"U34","qualname":"::base::dimension::U34","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11613},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103809,"byte_end":103812,"line_start":289,"line_end":289,"column_start":85,"column_end":88},"name":"U35","qualname":"::base::dimension::U35","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11629},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103814,"byte_end":103817,"line_start":289,"line_end":289,"column_start":90,"column_end":93},"name":"U36","qualname":"::base::dimension::U36","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11645},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103819,"byte_end":103822,"line_start":289,"line_end":289,"column_start":95,"column_end":98},"name":"U37","qualname":"::base::dimension::U37","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11661},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103828,"byte_end":103831,"line_start":290,"line_end":290,"column_start":5,"column_end":8},"name":"U38","qualname":"::base::dimension::U38","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11677},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103833,"byte_end":103836,"line_start":290,"line_end":290,"column_start":10,"column_end":13},"name":"U39","qualname":"::base::dimension::U39","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11693},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103838,"byte_end":103841,"line_start":290,"line_end":290,"column_start":15,"column_end":18},"name":"U40","qualname":"::base::dimension::U40","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11709},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103843,"byte_end":103846,"line_start":290,"line_end":290,"column_start":20,"column_end":23},"name":"U41","qualname":"::base::dimension::U41","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11725},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103848,"byte_end":103851,"line_start":290,"line_end":290,"column_start":25,"column_end":28},"name":"U42","qualname":"::base::dimension::U42","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11741},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103853,"byte_end":103856,"line_start":290,"line_end":290,"column_start":30,"column_end":33},"name":"U43","qualname":"::base::dimension::U43","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11757},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103858,"byte_end":103861,"line_start":290,"line_end":290,"column_start":35,"column_end":38},"name":"U44","qualname":"::base::dimension::U44","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11773},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103863,"byte_end":103866,"line_start":290,"line_end":290,"column_start":40,"column_end":43},"name":"U45","qualname":"::base::dimension::U45","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11789},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103868,"byte_end":103871,"line_start":290,"line_end":290,"column_start":45,"column_end":48},"name":"U46","qualname":"::base::dimension::U46","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11805},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103873,"byte_end":103876,"line_start":290,"line_end":290,"column_start":50,"column_end":53},"name":"U47","qualname":"::base::dimension::U47","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11821},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103878,"byte_end":103881,"line_start":290,"line_end":290,"column_start":55,"column_end":58},"name":"U48","qualname":"::base::dimension::U48","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11837},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103883,"byte_end":103886,"line_start":290,"line_end":290,"column_start":60,"column_end":63},"name":"U49","qualname":"::base::dimension::U49","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11853},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103888,"byte_end":103891,"line_start":290,"line_end":290,"column_start":65,"column_end":68},"name":"U50","qualname":"::base::dimension::U50","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11869},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103893,"byte_end":103896,"line_start":290,"line_end":290,"column_start":70,"column_end":73},"name":"U51","qualname":"::base::dimension::U51","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11885},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103898,"byte_end":103901,"line_start":290,"line_end":290,"column_start":75,"column_end":78},"name":"U52","qualname":"::base::dimension::U52","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11901},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103903,"byte_end":103906,"line_start":290,"line_end":290,"column_start":80,"column_end":83},"name":"U53","qualname":"::base::dimension::U53","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11917},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103908,"byte_end":103911,"line_start":290,"line_end":290,"column_start":85,"column_end":88},"name":"U54","qualname":"::base::dimension::U54","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11933},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103913,"byte_end":103916,"line_start":290,"line_end":290,"column_start":90,"column_end":93},"name":"U55","qualname":"::base::dimension::U55","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11949},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103918,"byte_end":103921,"line_start":290,"line_end":290,"column_start":95,"column_end":98},"name":"U56","qualname":"::base::dimension::U56","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11965},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103927,"byte_end":103930,"line_start":291,"line_end":291,"column_start":5,"column_end":8},"name":"U57","qualname":"::base::dimension::U57","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11981},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103932,"byte_end":103935,"line_start":291,"line_end":291,"column_start":10,"column_end":13},"name":"U58","qualname":"::base::dimension::U58","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11997},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103937,"byte_end":103940,"line_start":291,"line_end":291,"column_start":15,"column_end":18},"name":"U59","qualname":"::base::dimension::U59","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12013},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103942,"byte_end":103945,"line_start":291,"line_end":291,"column_start":20,"column_end":23},"name":"U60","qualname":"::base::dimension::U60","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12029},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103947,"byte_end":103950,"line_start":291,"line_end":291,"column_start":25,"column_end":28},"name":"U61","qualname":"::base::dimension::U61","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12045},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103952,"byte_end":103955,"line_start":291,"line_end":291,"column_start":30,"column_end":33},"name":"U62","qualname":"::base::dimension::U62","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12061},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103957,"byte_end":103960,"line_start":291,"line_end":291,"column_start":35,"column_end":38},"name":"U63","qualname":"::base::dimension::U63","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12077},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103962,"byte_end":103965,"line_start":291,"line_end":291,"column_start":40,"column_end":43},"name":"U64","qualname":"::base::dimension::U64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12093},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103967,"byte_end":103970,"line_start":291,"line_end":291,"column_start":45,"column_end":48},"name":"U65","qualname":"::base::dimension::U65","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12109},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103972,"byte_end":103975,"line_start":291,"line_end":291,"column_start":50,"column_end":53},"name":"U66","qualname":"::base::dimension::U66","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12125},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103977,"byte_end":103980,"line_start":291,"line_end":291,"column_start":55,"column_end":58},"name":"U67","qualname":"::base::dimension::U67","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12141},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103982,"byte_end":103985,"line_start":291,"line_end":291,"column_start":60,"column_end":63},"name":"U68","qualname":"::base::dimension::U68","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12157},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103987,"byte_end":103990,"line_start":291,"line_end":291,"column_start":65,"column_end":68},"name":"U69","qualname":"::base::dimension::U69","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12173},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103992,"byte_end":103995,"line_start":291,"line_end":291,"column_start":70,"column_end":73},"name":"U70","qualname":"::base::dimension::U70","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12189},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":103997,"byte_end":104000,"line_start":291,"line_end":291,"column_start":75,"column_end":78},"name":"U71","qualname":"::base::dimension::U71","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12205},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104002,"byte_end":104005,"line_start":291,"line_end":291,"column_start":80,"column_end":83},"name":"U72","qualname":"::base::dimension::U72","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12221},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104007,"byte_end":104010,"line_start":291,"line_end":291,"column_start":85,"column_end":88},"name":"U73","qualname":"::base::dimension::U73","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12237},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104012,"byte_end":104015,"line_start":291,"line_end":291,"column_start":90,"column_end":93},"name":"U74","qualname":"::base::dimension::U74","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12253},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104017,"byte_end":104020,"line_start":291,"line_end":291,"column_start":95,"column_end":98},"name":"U75","qualname":"::base::dimension::U75","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12269},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104026,"byte_end":104029,"line_start":292,"line_end":292,"column_start":5,"column_end":8},"name":"U76","qualname":"::base::dimension::U76","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12285},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104031,"byte_end":104034,"line_start":292,"line_end":292,"column_start":10,"column_end":13},"name":"U77","qualname":"::base::dimension::U77","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12301},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104036,"byte_end":104039,"line_start":292,"line_end":292,"column_start":15,"column_end":18},"name":"U78","qualname":"::base::dimension::U78","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12317},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104041,"byte_end":104044,"line_start":292,"line_end":292,"column_start":20,"column_end":23},"name":"U79","qualname":"::base::dimension::U79","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12333},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104046,"byte_end":104049,"line_start":292,"line_end":292,"column_start":25,"column_end":28},"name":"U80","qualname":"::base::dimension::U80","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12349},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104051,"byte_end":104054,"line_start":292,"line_end":292,"column_start":30,"column_end":33},"name":"U81","qualname":"::base::dimension::U81","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12365},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104056,"byte_end":104059,"line_start":292,"line_end":292,"column_start":35,"column_end":38},"name":"U82","qualname":"::base::dimension::U82","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12381},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104061,"byte_end":104064,"line_start":292,"line_end":292,"column_start":40,"column_end":43},"name":"U83","qualname":"::base::dimension::U83","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12397},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104066,"byte_end":104069,"line_start":292,"line_end":292,"column_start":45,"column_end":48},"name":"U84","qualname":"::base::dimension::U84","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12413},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104071,"byte_end":104074,"line_start":292,"line_end":292,"column_start":50,"column_end":53},"name":"U85","qualname":"::base::dimension::U85","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12429},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104076,"byte_end":104079,"line_start":292,"line_end":292,"column_start":55,"column_end":58},"name":"U86","qualname":"::base::dimension::U86","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12445},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104081,"byte_end":104084,"line_start":292,"line_end":292,"column_start":60,"column_end":63},"name":"U87","qualname":"::base::dimension::U87","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12461},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104086,"byte_end":104089,"line_start":292,"line_end":292,"column_start":65,"column_end":68},"name":"U88","qualname":"::base::dimension::U88","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12477},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104091,"byte_end":104094,"line_start":292,"line_end":292,"column_start":70,"column_end":73},"name":"U89","qualname":"::base::dimension::U89","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12493},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104096,"byte_end":104099,"line_start":292,"line_end":292,"column_start":75,"column_end":78},"name":"U90","qualname":"::base::dimension::U90","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12509},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104101,"byte_end":104104,"line_start":292,"line_end":292,"column_start":80,"column_end":83},"name":"U91","qualname":"::base::dimension::U91","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12525},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104106,"byte_end":104109,"line_start":292,"line_end":292,"column_start":85,"column_end":88},"name":"U92","qualname":"::base::dimension::U92","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12541},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104111,"byte_end":104114,"line_start":292,"line_end":292,"column_start":90,"column_end":93},"name":"U93","qualname":"::base::dimension::U93","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12557},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104116,"byte_end":104119,"line_start":292,"line_end":292,"column_start":95,"column_end":98},"name":"U94","qualname":"::base::dimension::U94","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12573},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104125,"byte_end":104128,"line_start":293,"line_end":293,"column_start":5,"column_end":8},"name":"U95","qualname":"::base::dimension::U95","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12589},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104130,"byte_end":104133,"line_start":293,"line_end":293,"column_start":10,"column_end":13},"name":"U96","qualname":"::base::dimension::U96","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12605},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104135,"byte_end":104138,"line_start":293,"line_end":293,"column_start":15,"column_end":18},"name":"U97","qualname":"::base::dimension::U97","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12621},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104140,"byte_end":104143,"line_start":293,"line_end":293,"column_start":20,"column_end":23},"name":"U98","qualname":"::base::dimension::U98","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12637},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104145,"byte_end":104148,"line_start":293,"line_end":293,"column_start":25,"column_end":28},"name":"U99","qualname":"::base::dimension::U99","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12653},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104150,"byte_end":104154,"line_start":293,"line_end":293,"column_start":30,"column_end":34},"name":"U100","qualname":"::base::dimension::U100","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12669},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104156,"byte_end":104160,"line_start":293,"line_end":293,"column_start":36,"column_end":40},"name":"U101","qualname":"::base::dimension::U101","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12685},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104162,"byte_end":104166,"line_start":293,"line_end":293,"column_start":42,"column_end":46},"name":"U102","qualname":"::base::dimension::U102","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12701},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104168,"byte_end":104172,"line_start":293,"line_end":293,"column_start":48,"column_end":52},"name":"U103","qualname":"::base::dimension::U103","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12717},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104174,"byte_end":104178,"line_start":293,"line_end":293,"column_start":54,"column_end":58},"name":"U104","qualname":"::base::dimension::U104","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12733},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104180,"byte_end":104184,"line_start":293,"line_end":293,"column_start":60,"column_end":64},"name":"U105","qualname":"::base::dimension::U105","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12749},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104186,"byte_end":104190,"line_start":293,"line_end":293,"column_start":66,"column_end":70},"name":"U106","qualname":"::base::dimension::U106","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12765},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104192,"byte_end":104196,"line_start":293,"line_end":293,"column_start":72,"column_end":76},"name":"U107","qualname":"::base::dimension::U107","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12781},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104198,"byte_end":104202,"line_start":293,"line_end":293,"column_start":78,"column_end":82},"name":"U108","qualname":"::base::dimension::U108","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12797},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104204,"byte_end":104208,"line_start":293,"line_end":293,"column_start":84,"column_end":88},"name":"U109","qualname":"::base::dimension::U109","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12813},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104210,"byte_end":104214,"line_start":293,"line_end":293,"column_start":90,"column_end":94},"name":"U110","qualname":"::base::dimension::U110","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12829},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104220,"byte_end":104224,"line_start":294,"line_end":294,"column_start":5,"column_end":9},"name":"U111","qualname":"::base::dimension::U111","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12845},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104226,"byte_end":104230,"line_start":294,"line_end":294,"column_start":11,"column_end":15},"name":"U112","qualname":"::base::dimension::U112","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12861},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104232,"byte_end":104236,"line_start":294,"line_end":294,"column_start":17,"column_end":21},"name":"U113","qualname":"::base::dimension::U113","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12877},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104238,"byte_end":104242,"line_start":294,"line_end":294,"column_start":23,"column_end":27},"name":"U114","qualname":"::base::dimension::U114","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12893},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104244,"byte_end":104248,"line_start":294,"line_end":294,"column_start":29,"column_end":33},"name":"U115","qualname":"::base::dimension::U115","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12909},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104250,"byte_end":104254,"line_start":294,"line_end":294,"column_start":35,"column_end":39},"name":"U116","qualname":"::base::dimension::U116","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12925},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104256,"byte_end":104260,"line_start":294,"line_end":294,"column_start":41,"column_end":45},"name":"U117","qualname":"::base::dimension::U117","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12941},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104262,"byte_end":104266,"line_start":294,"line_end":294,"column_start":47,"column_end":51},"name":"U118","qualname":"::base::dimension::U118","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12957},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104268,"byte_end":104272,"line_start":294,"line_end":294,"column_start":53,"column_end":57},"name":"U119","qualname":"::base::dimension::U119","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12973},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104274,"byte_end":104278,"line_start":294,"line_end":294,"column_start":59,"column_end":63},"name":"U120","qualname":"::base::dimension::U120","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12989},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104280,"byte_end":104284,"line_start":294,"line_end":294,"column_start":65,"column_end":69},"name":"U121","qualname":"::base::dimension::U121","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13005},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104286,"byte_end":104290,"line_start":294,"line_end":294,"column_start":71,"column_end":75},"name":"U122","qualname":"::base::dimension::U122","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13021},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104292,"byte_end":104296,"line_start":294,"line_end":294,"column_start":77,"column_end":81},"name":"U123","qualname":"::base::dimension::U123","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13037},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104298,"byte_end":104302,"line_start":294,"line_end":294,"column_start":83,"column_end":87},"name":"U124","qualname":"::base::dimension::U124","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13053},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104304,"byte_end":104308,"line_start":294,"line_end":294,"column_start":89,"column_end":93},"name":"U125","qualname":"::base::dimension::U125","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13069},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104310,"byte_end":104314,"line_start":294,"line_end":294,"column_start":95,"column_end":99},"name":"U126","qualname":"::base::dimension::U126","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13085},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104320,"byte_end":104324,"line_start":295,"line_end":295,"column_start":5,"column_end":9},"name":"U127","qualname":"::base::dimension::U127","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102601,"byte_end":102628,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":585},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::base::iter","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":599},{"krate":0,"index":13101},{"krate":0,"index":13113},{"krate":0,"index":13120},{"krate":0,"index":13130},{"krate":0,"index":13137},{"krate":0,"index":13149},{"krate":0,"index":13156},{"krate":0,"index":13166},{"krate":0,"index":13173},{"krate":0,"index":13181},{"krate":0,"index":600},{"krate":0,"index":607},{"krate":0,"index":617},{"krate":0,"index":624},{"krate":0,"index":633},{"krate":0,"index":641},{"krate":0,"index":651},{"krate":0,"index":13188},{"krate":0,"index":13196},{"krate":0,"index":658},{"krate":0,"index":665},{"krate":0,"index":675},{"krate":0,"index":682},{"krate":0,"index":691},{"krate":0,"index":699},{"krate":0,"index":709}],"decl_id":null,"docs":" Matrix iterators.\n","sig":null,"attributes":[{"value":"! Matrix iterators.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":107950,"byte_end":107971,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":13101},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":111386,"byte_end":111396,"line_start":97,"line_end":97,"column_start":18,"column_end":28},"name":"MatrixIter","qualname":"::base::iter::MatrixIter","value":"MatrixIter {  }","parent":null,"children":[{"krate":0,"index":13107},{"krate":0,"index":13108},{"krate":0,"index":13109},{"krate":0,"index":13110},{"krate":0,"index":13111},{"krate":0,"index":13112}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":108295,"byte_end":108364,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":13137},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":111458,"byte_end":111471,"line_start":98,"line_end":98,"column_start":18,"column_end":31},"name":"MatrixIterMut","qualname":"::base::iter::MatrixIterMut","value":"MatrixIterMut {  }","parent":null,"children":[{"krate":0,"index":13143},{"krate":0,"index":13144},{"krate":0,"index":13145},{"krate":0,"index":13146},{"krate":0,"index":13147},{"krate":0,"index":13148}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":108295,"byte_end":108364,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":13173},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":111636,"byte_end":111643,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"RowIter","qualname":"::base::iter::RowIter","value":"RowIter {  }","parent":null,"children":[{"krate":0,"index":13179},{"krate":0,"index":13180}],"decl_id":null,"docs":" An iterator through the rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the rows of a matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":111579,"byte_end":111624,"line_start":107,"line_end":107,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":624},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":112885,"byte_end":112895,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"RowIterMut","qualname":"::base::iter::RowIterMut","value":"RowIterMut {  }","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632}],"decl_id":null,"docs":" An iterator through the mutable rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable rows of a matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":112820,"byte_end":112873,"line_start":155,"line_end":155,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":13188},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":114410,"byte_end":114420,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"ColumnIter","qualname":"::base::iter::ColumnIter","value":"ColumnIter {  }","parent":null,"children":[{"krate":0,"index":13194},{"krate":0,"index":13195}],"decl_id":null,"docs":" An iterator through the columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the columns of a matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":114350,"byte_end":114398,"line_start":218,"line_end":218,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":682},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":115680,"byte_end":115693,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"ColumnIterMut","qualname":"::base::iter::ColumnIterMut","value":"ColumnIterMut {  }","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690}],"decl_id":null,"docs":" An iterator through the mutable columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable columns of a matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":115612,"byte_end":115668,"line_start":266,"line_end":266,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":120024,"byte_end":120031,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"neg_mut","qualname":"<Matrix<N, R, C, S>>::neg_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Negates `self` in-place.\n","sig":null,"attributes":[{"value":"/ Negates `self` in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":119970,"byte_end":119998,"line_start":118,"line_end":118,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":120003,"byte_end":120012,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":13223},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":131203,"byte_end":131209,"line_start":372,"line_end":372,"column_start":27,"column_end":33},"name":"add_to","qualname":"<Matrix<N, R1, C1, SA>>::add_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":125657,"byte_end":125742,"line_start":254,"line_end":254,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":125755,"byte_end":125764,"line_start":255,"line_end":255,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13313},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":131433,"byte_end":131439,"line_start":375,"line_end":375,"column_start":27,"column_end":33},"name":"sub_to","qualname":"<Matrix<N, R1, C1, SA>>::sub_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":125657,"byte_end":125742,"line_start":254,"line_end":254,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":125755,"byte_end":125764,"line_start":255,"line_end":255,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":141014,"byte_end":141020,"line_start":679,"line_end":679,"column_start":12,"column_end":18},"name":"tr_mul","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, C1, C2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":140945,"byte_end":140988,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":140993,"byte_end":141002,"line_start":678,"line_end":678,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":141500,"byte_end":141506,"line_start":694,"line_end":694,"column_start":12,"column_end":18},"name":"ad_mul","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, C1, C2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":141433,"byte_end":141474,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":141479,"byte_end":141488,"line_start":693,"line_end":693,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":143177,"byte_end":143186,"line_start":743,"line_end":743,"column_start":12,"column_end":21},"name":"tr_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":143046,"byte_end":143130,"line_start":740,"line_end":740,"column_start":5,"column_end":89}},{"value":"/ allocations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":143135,"byte_end":143151,"line_start":741,"line_end":741,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":143156,"byte_end":143165,"line_start":742,"line_end":742,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":143683,"byte_end":143692,"line_start":758,"line_end":758,"column_start":12,"column_end":21},"name":"ad_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":143554,"byte_end":143636,"line_start":755,"line_end":755,"column_start":5,"column_end":87}},{"value":"/ allocations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":143641,"byte_end":143657,"line_start":756,"line_end":756,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":143662,"byte_end":143671,"line_start":757,"line_end":757,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":144197,"byte_end":144203,"line_start":773,"line_end":773,"column_start":12,"column_end":18},"name":"mul_to","qualname":"<Matrix<N, R1, C1, SA>>::mul_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":144086,"byte_end":144171,"line_start":771,"line_end":771,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":144176,"byte_end":144185,"line_start":772,"line_end":772,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":144744,"byte_end":144753,"line_start":789,"line_end":789,"column_start":12,"column_end":21},"name":"kronecker","qualname":"<Matrix<N, R1, C1, SA>>::kronecker","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, DimProd<R1, R2>, DimProd<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The kronecker product of two matrices (aka. tensor product of the corresponding linear\n maps).\n","sig":null,"attributes":[{"value":"/ The kronecker product of two matrices (aka. tensor product of the corresponding linear","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":144627,"byte_end":144717,"line_start":787,"line_end":787,"column_start":5,"column_end":95}},{"value":"/ maps).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":144722,"byte_end":144732,"line_start":788,"line_end":788,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146091,"byte_end":146101,"line_start":832,"line_end":832,"column_start":12,"column_end":22},"name":"add_scalar","qualname":"<Matrix<N, R, C, S>>::add_scalar","value":"fn (&self, rhs: N) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self`.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146037,"byte_end":146065,"line_start":830,"line_end":830,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146070,"byte_end":146079,"line_start":831,"line_end":831,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146348,"byte_end":146362,"line_start":841,"line_end":841,"column_start":12,"column_end":26},"name":"add_scalar_mut","qualname":"<Matrix<N, R, C, S>>::add_scalar_mut","value":"fn (&mut self, rhs: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self` in-place.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self` in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146285,"byte_end":146322,"line_start":839,"line_end":839,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146327,"byte_end":146336,"line_start":840,"line_end":840,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":147921,"byte_end":147925,"line_start":895,"line_end":895,"column_start":12,"column_end":16},"name":"amax","qualname":"<Matrix<N, R, C, S>>::amax","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the largest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the largest absolute value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":147614,"byte_end":147694,"line_start":887,"line_end":887,"column_start":5,"column_end":85}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":147699,"byte_end":147712,"line_start":888,"line_end":888,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":147717,"byte_end":147724,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":147729,"byte_end":147757,"line_start":890,"line_end":890,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":147762,"byte_end":147819,"line_start":891,"line_end":891,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":147824,"byte_end":147883,"line_start":892,"line_end":892,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":147888,"byte_end":147895,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":147900,"byte_end":147909,"line_start":894,"line_end":894,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148384,"byte_end":148389,"line_start":910,"line_end":910,"column_start":12,"column_end":17},"name":"camax","qualname":"<Matrix<N, R, C, S>>::camax","value":"fn (&self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the largest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camax(), 5.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the largest 1-norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148038,"byte_end":148114,"line_start":900,"line_end":900,"column_start":5,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148119,"byte_end":148132,"line_start":901,"line_end":901,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148137,"byte_end":148144,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148149,"byte_end":148188,"line_start":903,"line_end":903,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148193,"byte_end":148221,"line_start":904,"line_end":904,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148226,"byte_end":148259,"line_start":905,"line_end":905,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148264,"byte_end":148295,"line_start":906,"line_end":906,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camax(), 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148300,"byte_end":148346,"line_start":907,"line_end":907,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148351,"byte_end":148358,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148363,"byte_end":148372,"line_start":909,"line_end":909,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148783,"byte_end":148786,"line_start":923,"line_end":923,"column_start":12,"column_end":15},"name":"max","qualname":"<Matrix<N, R, C, S>>::max","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the largest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the largest value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148508,"byte_end":148557,"line_start":915,"line_end":915,"column_start":5,"column_end":54}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148562,"byte_end":148575,"line_start":916,"line_end":916,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148580,"byte_end":148587,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148592,"byte_end":148620,"line_start":918,"line_end":918,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148625,"byte_end":148681,"line_start":919,"line_end":919,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148686,"byte_end":148745,"line_start":920,"line_end":920,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148750,"byte_end":148757,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148762,"byte_end":148771,"line_start":922,"line_end":922,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149201,"byte_end":149205,"line_start":936,"line_end":936,"column_start":12,"column_end":16},"name":"amin","qualname":"<Matrix<N, R, C, S>>::amin","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the smallest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);\n assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the smallest absolute value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148893,"byte_end":148974,"line_start":928,"line_end":928,"column_start":5,"column_end":86}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148979,"byte_end":148992,"line_start":929,"line_end":929,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":148997,"byte_end":149004,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149009,"byte_end":149037,"line_start":931,"line_end":931,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149042,"byte_end":149100,"line_start":932,"line_end":932,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149105,"byte_end":149163,"line_start":933,"line_end":933,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149168,"byte_end":149175,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149180,"byte_end":149189,"line_start":935,"line_end":935,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149662,"byte_end":149667,"line_start":951,"line_end":951,"column_start":12,"column_end":17},"name":"camin","qualname":"<Matrix<N, R, C, S>>::camin","value":"fn (&self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the smallest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camin(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the smallest 1-norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149315,"byte_end":149392,"line_start":941,"line_end":941,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149397,"byte_end":149410,"line_start":942,"line_end":942,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149415,"byte_end":149422,"line_start":943,"line_end":943,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149427,"byte_end":149466,"line_start":944,"line_end":944,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149471,"byte_end":149499,"line_start":945,"line_end":945,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149504,"byte_end":149537,"line_start":946,"line_end":946,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149542,"byte_end":149573,"line_start":947,"line_end":947,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camin(), 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149578,"byte_end":149624,"line_start":948,"line_end":948,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149629,"byte_end":149636,"line_start":949,"line_end":949,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149641,"byte_end":149650,"line_start":950,"line_end":950,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":150056,"byte_end":150059,"line_start":964,"line_end":964,"column_start":12,"column_end":15},"name":"min","qualname":"<Matrix<N, R, C, S>>::min","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the smallest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);\n assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the smallest value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149783,"byte_end":149833,"line_start":956,"line_end":956,"column_start":5,"column_end":55}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149838,"byte_end":149851,"line_start":957,"line_end":957,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149856,"byte_end":149863,"line_start":958,"line_end":958,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149868,"byte_end":149896,"line_start":959,"line_end":959,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149901,"byte_end":149958,"line_start":960,"line_end":960,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":149963,"byte_end":150018,"line_start":961,"line_end":961,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":150023,"byte_end":150030,"line_start":962,"line_end":962,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":150035,"byte_end":150044,"line_start":963,"line_end":963,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::base::storage","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1018},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1030},{"krate":0,"index":1048},{"krate":0,"index":1060},{"krate":0,"index":1064}],"decl_id":null,"docs":" Abstract definition of a matrix data storage.\n","sig":null,"attributes":[{"value":"! Abstract definition of a matrix data storage.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":150160,"byte_end":150209,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":150574,"byte_end":150590,"line_start":15,"line_end":15,"column_start":10,"column_end":26},"name":"SameShapeStorage","qualname":"::base::storage::SameShapeStorage","value":"<DefaultAllocator as\nAllocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.\n","sig":null,"attributes":[{"value":"/ The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":150473,"byte_end":150564,"line_start":14,"line_end":14,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":150804,"byte_end":150809,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Owned","qualname":"::base::storage::Owned","value":"<DefaultAllocator as Allocator<N, R, C>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The owned data storage that can be allocated from `S`.\n","sig":null,"attributes":[{"value":"/ The owned data storage that can be allocated from `S`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":150736,"byte_end":150794,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":150967,"byte_end":150974,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::RStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::RStride","parent":null,"children":[],"decl_id":null,"docs":" The row-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The row-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":150877,"byte_end":150957,"line_start":22,"line_end":22,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151170,"byte_end":151177,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::CStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::CStride","parent":null,"children":[],"decl_id":null,"docs":" The column-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The column-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151077,"byte_end":151160,"line_start":26,"line_end":26,"column_start":1,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151842,"byte_end":151849,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"name":"Storage","qualname":"::base::storage::Storage","value":"Storage<N: Scalar, R: Dim, C: Dim = U1>: Debug + Sized","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047}],"decl_id":null,"docs":" The trait shared by all matrix data storage.","sig":null,"attributes":[{"value":"/ The trait shared by all matrix data storage.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151280,"byte_end":151328,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151329,"byte_end":151332,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ FIXME: doc","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151333,"byte_end":151347,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151348,"byte_end":151351,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Note that `Self` must always have a number of elements compatible with the matrix length (given","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151352,"byte_end":151451,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"/ by `R` and `C` if they are known at compile-time). For example, implementors of this trait","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151452,"byte_end":151546,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ should **not** allow the user to modify the size of the underlying buffer with safe methods","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151547,"byte_end":151642,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ (for example the `VecStorage::data_mut` method is unsafe because the user could change the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151643,"byte_end":151737,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/ vector's size so that it no longer contains enough elements: this will lead to UB.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151738,"byte_end":151824,"line_start":38,"line_end":38,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151958,"byte_end":151965,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::Storage::RStride","value":"type RStride: Dim;","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" The static stride of this storage's rows.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151903,"byte_end":151948,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152035,"byte_end":152042,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::Storage::CStride","value":"type CStride: Dim;","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" The static stride of this storage's columns.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151977,"byte_end":152025,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152090,"byte_end":152093,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"ptr","qualname":"::base::storage::Storage::ptr","value":"fn (&self) -> *const N","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" The matrix data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix data pointer.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152054,"byte_end":152082,"line_start":46,"line_end":46,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152314,"byte_end":152319,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"shape","qualname":"::base::storage::Storage::shape","value":"fn (&self) -> (R, C)","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" The dimension of the matrix at run-time. Arr length of zero indicates the additive identity\n element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.\n","sig":null,"attributes":[{"value":"/ The dimension of the matrix at run-time. Arr length of zero indicates the additive identity","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152119,"byte_end":152214,"line_start":49,"line_end":49,"column_start":5,"column_end":100}},{"value":"/ element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152219,"byte_end":152306,"line_start":50,"line_end":50,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152521,"byte_end":152528,"line_start":56,"line_end":56,"column_start":8,"column_end":15},"name":"strides","qualname":"::base::storage::Storage::strides","value":"fn (&self) -> (Self::RStride, Self::CStride)","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" The spacing between consecutive row elements and consecutive column elements.","sig":null,"attributes":[{"value":"/ The spacing between consecutive row elements and consecutive column elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152343,"byte_end":152424,"line_start":53,"line_end":53,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152429,"byte_end":152432,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ For example this returns `(1, 5)` for a row-major matrix with 5 columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152437,"byte_end":152513,"line_start":55,"line_end":55,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152921,"byte_end":152933,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"linear_index","qualname":"::base::storage::Storage::linear_index","value":"fn (&self, irow: usize, icol: usize) -> usize","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Compute the index corresponding to the irow-th row and icol-th column of this matrix. The\n index must be such that the following holds:","sig":null,"attributes":[{"value":"/ Compute the index corresponding to the irow-th row and icol-th column of this matrix. The","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152576,"byte_end":152669,"line_start":58,"line_end":58,"column_start":5,"column_end":98}},{"value":"/ index must be such that the following holds:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152674,"byte_end":152722,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152727,"byte_end":152730,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```.ignore","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152735,"byte_end":152749,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/ let lindex = self.linear_index(irow, icol);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152754,"byte_end":152801,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ assert!(*self.get_unchecked(irow, icol) == *self.get_unchecked_linear(lindex)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152806,"byte_end":152887,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152892,"byte_end":152899,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":152904,"byte_end":152913,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153208,"byte_end":153236,"line_start":74,"line_end":74,"column_start":15,"column_end":43},"name":"get_address_unchecked_linear","qualname":"::base::storage::Storage::get_address_unchecked_linear","value":"fn (&self, i: usize) -> *const N","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153095,"byte_end":153179,"line_start":72,"line_end":72,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153184,"byte_end":153193,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153430,"byte_end":153451,"line_start":80,"line_end":80,"column_start":15,"column_end":36},"name":"get_address_unchecked","qualname":"::base::storage::Storage::get_address_unchecked","value":"fn (&self, irow: usize, icol: usize) -> *const N","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153317,"byte_end":153401,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153406,"byte_end":153415,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153681,"byte_end":153701,"line_start":86,"line_end":86,"column_start":15,"column_end":35},"name":"get_unchecked_linear","qualname":"::base::storage::Storage::get_unchecked_linear","value":"fn (&self, i: usize) -> &N","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153583,"byte_end":153652,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153657,"byte_end":153666,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153883,"byte_end":153896,"line_start":92,"line_end":92,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::storage::Storage::get_unchecked","value":"fn (&self, irow: usize, icol: usize) -> &N","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153785,"byte_end":153854,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":153859,"byte_end":153868,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154108,"byte_end":154121,"line_start":98,"line_end":98,"column_start":8,"column_end":21},"name":"is_contiguous","qualname":"::base::storage::Storage::is_contiguous","value":"fn (&self) -> bool","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Indicates whether this data buffer stores its elements contiguously.\n","sig":null,"attributes":[{"value":"/ Indicates whether this data buffer stores its elements contiguously.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154014,"byte_end":154086,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154091,"byte_end":154100,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154320,"byte_end":154328,"line_start":104,"line_end":104,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::base::storage::Storage::as_slice","value":"fn (&self) -> &[N]","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Retrieves the data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the data buffer as a contiguous slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154143,"byte_end":154195,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154200,"byte_end":154203,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The matrix components may not be stored in a contiguous way, depending on the strides.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154208,"byte_end":154298,"line_start":102,"line_end":102,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154303,"byte_end":154312,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154427,"byte_end":154437,"line_start":107,"line_end":107,"column_start":8,"column_end":18},"name":"into_owned","qualname":"::base::storage::Storage::into_owned","value":"fn (self) -> Owned<N, R, C>","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Builds a matrix data storage that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Builds a matrix data storage that does not contain any reference.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154350,"byte_end":154419,"line_start":106,"line_end":106,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154595,"byte_end":154606,"line_start":111,"line_end":111,"column_start":8,"column_end":19},"name":"clone_owned","qualname":"::base::storage::Storage::clone_owned","value":"fn (&self) -> Owned<N, R, C>","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Clones this data storage to one that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Clones this data storage to one that does not contain any reference.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154515,"byte_end":154587,"line_start":110,"line_end":110,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155046,"byte_end":155056,"line_start":120,"line_end":120,"column_start":18,"column_end":28},"name":"StorageMut","qualname":"::base::storage::StorageMut","value":"StorageMut<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059}],"decl_id":null,"docs":" Trait implemented by matrix data storage that can provide a mutable access to its elements.","sig":null,"attributes":[{"value":"/ Trait implemented by matrix data storage that can provide a mutable access to its elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154683,"byte_end":154778,"line_start":115,"line_end":115,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154779,"byte_end":154782,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Note that a mutable access does not mean that the matrix owns its data. For example, a mutable","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154783,"byte_end":154881,"line_start":117,"line_end":117,"column_start":1,"column_end":99}},{"value":"/ matrix slice can provide mutable access to its elements even if it does not own its data (it","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154882,"byte_end":154978,"line_start":118,"line_end":118,"column_start":1,"column_end":97}},{"value":"/ contains only an internal reference to them).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":154979,"byte_end":155028,"line_start":119,"line_end":119,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155157,"byte_end":155164,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"ptr_mut","qualname":"::base::storage::StorageMut::ptr_mut","value":"fn (&mut self) -> *mut N","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" The matrix mutable data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix mutable data pointer.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155113,"byte_end":155149,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155313,"byte_end":155345,"line_start":126,"line_end":126,"column_start":15,"column_end":47},"name":"get_address_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_linear_mut","value":"fn (&mut self, i: usize) -> *mut N","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155192,"byte_end":155284,"line_start":124,"line_end":124,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155289,"byte_end":155298,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155553,"byte_end":155578,"line_start":132,"line_end":132,"column_start":15,"column_end":40},"name":"get_address_unchecked_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_mut","value":"fn (&mut self, irow: usize, icol: usize) -> *mut N","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155432,"byte_end":155524,"line_start":130,"line_end":130,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155529,"byte_end":155538,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155831,"byte_end":155855,"line_start":138,"line_end":138,"column_start":15,"column_end":39},"name":"get_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_unchecked_linear_mut","value":"fn (&mut self, i: usize) -> &mut N","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the i-th element without bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155739,"byte_end":155816,"line_start":137,"line_end":137,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":156074,"byte_end":156091,"line_start":144,"line_end":144,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::storage::StorageMut::get_unchecked_mut","value":"fn (&mut self, irow: usize, icol: usize) -> &mut N","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155955,"byte_end":156045,"line_start":142,"line_end":142,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":156050,"byte_end":156059,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":156309,"byte_end":156330,"line_start":150,"line_end":150,"column_start":15,"column_end":36},"name":"swap_unchecked_linear","qualname":"::base::storage::StorageMut::swap_unchecked_linear","value":"fn (&mut self, i1: usize, i2: usize) -> ()","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Swaps two elements using their linear index without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements using their linear index without bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":156209,"byte_end":156280,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":156285,"byte_end":156294,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":156608,"byte_end":156622,"line_start":159,"line_end":159,"column_start":15,"column_end":29},"name":"swap_unchecked","qualname":"::base::storage::StorageMut::swap_unchecked","value":"fn (&mut self, row_col1: (usize, usize), row_col2: (usize, usize)) -> ()","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Swaps two elements without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements without bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":156533,"byte_end":156579,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":156584,"byte_end":156593,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157036,"byte_end":157048,"line_start":170,"line_end":170,"column_start":8,"column_end":20},"name":"as_mut_slice","qualname":"::base::storage::StorageMut::as_mut_slice","value":"fn (&mut self) -> &mut [N]","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":" Retrieves the mutable data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the mutable data buffer as a contiguous slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":156871,"byte_end":156931,"line_start":166,"line_end":166,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":156936,"byte_end":156939,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Matrix components may not be contiguous, depending on its strides.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":156944,"byte_end":157014,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157019,"byte_end":157028,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157407,"byte_end":157424,"line_start":178,"line_end":178,"column_start":18,"column_end":35},"name":"ContiguousStorage","qualname":"::base::storage::ContiguousStorage","value":"ContiguousStorage<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A matrix storage that is stored contiguously in memory.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157076,"byte_end":157135,"line_start":173,"line_end":173,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157136,"byte_end":157139,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols[`, the value","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157140,"byte_end":157234,"line_start":175,"line_end":175,"column_start":1,"column_end":95}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157235,"byte_end":157328,"line_start":176,"line_end":176,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157329,"byte_end":157389,"line_start":177,"line_end":177,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157823,"byte_end":157843,"line_start":188,"line_end":188,"column_start":18,"column_end":38},"name":"ContiguousStorageMut","qualname":"::base::storage::ContiguousStorageMut","value":"ContiguousStorageMut<N: Scalar, R: Dim, C: Dim = U1>: ContiguousStorage<N, R, C> + StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A mutable matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A mutable matrix storage that is stored contiguously in memory.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157484,"byte_end":157551,"line_start":183,"line_end":183,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157552,"byte_end":157555,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols[`, the value","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157556,"byte_end":157650,"line_start":185,"line_end":185,"column_start":1,"column_end":95}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157651,"byte_end":157744,"line_start":186,"line_end":186,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157745,"byte_end":157805,"line_start":187,"line_end":187,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158431,"byte_end":158439,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"MatrixNM","qualname":"::base::alias::MatrixNM","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158268,"byte_end":158341,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"deprecated(note =\n             \"This matrix name contains a typo. Use MatrixMN instead.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158342,"byte_end":158421,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158568,"byte_end":158576,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"MatrixMN","qualname":"::base::alias::MatrixMN","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158485,"byte_end":158558,"line_start":20,"line_end":20,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158708,"byte_end":158715,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"MatrixN","qualname":"::base::alias::MatrixN","value":"MatrixMN<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major square matrix with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major square matrix with `D` rows and columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158622,"byte_end":158698,"line_start":23,"line_end":23,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158846,"byte_end":158853,"line_start":28,"line_end":28,"column_start":10,"column_end":17},"name":"DMatrix","qualname":"::base::alias::DMatrix","value":"MatrixN<N, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column-major matrix.\n","sig":null,"attributes":[{"value":"/ A dynamically sized column-major matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158744,"byte_end":158788,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158789,"byte_end":158836,"line_start":27,"line_end":27,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158946,"byte_end":158953,"line_start":31,"line_end":31,"column_start":10,"column_end":17},"name":"Matrix1","qualname":"::base::alias::Matrix1","value":"MatrixN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x1 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x1 square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158881,"byte_end":158936,"line_start":30,"line_end":30,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159040,"byte_end":159047,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"name":"Matrix2","qualname":"::base::alias::Matrix2","value":"MatrixN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x2 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x2 square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":158975,"byte_end":159030,"line_start":32,"line_end":32,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159134,"byte_end":159141,"line_start":35,"line_end":35,"column_start":10,"column_end":17},"name":"Matrix3","qualname":"::base::alias::Matrix3","value":"MatrixN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x3 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x3 square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159069,"byte_end":159124,"line_start":34,"line_end":34,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159228,"byte_end":159235,"line_start":37,"line_end":37,"column_start":10,"column_end":17},"name":"Matrix4","qualname":"::base::alias::Matrix4","value":"MatrixN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x4 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x4 square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159163,"byte_end":159218,"line_start":36,"line_end":36,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159322,"byte_end":159329,"line_start":39,"line_end":39,"column_start":10,"column_end":17},"name":"Matrix5","qualname":"::base::alias::Matrix5","value":"MatrixN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x5 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x5 square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159257,"byte_end":159312,"line_start":38,"line_end":38,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159416,"byte_end":159423,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"Matrix6","qualname":"::base::alias::Matrix6","value":"MatrixN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x6 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x6 square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159351,"byte_end":159406,"line_start":40,"line_end":40,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159504,"byte_end":159513,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"Matrix1x2","qualname":"::base::alias::Matrix1x2","value":"MatrixMN<N, U1, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x2 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159446,"byte_end":159494,"line_start":43,"line_end":43,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159598,"byte_end":159607,"line_start":46,"line_end":46,"column_start":10,"column_end":19},"name":"Matrix1x3","qualname":"::base::alias::Matrix1x3","value":"MatrixMN<N, U1, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x3 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159540,"byte_end":159588,"line_start":45,"line_end":45,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159692,"byte_end":159701,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"Matrix1x4","qualname":"::base::alias::Matrix1x4","value":"MatrixMN<N, U1, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x4 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159634,"byte_end":159682,"line_start":47,"line_end":47,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159786,"byte_end":159795,"line_start":50,"line_end":50,"column_start":10,"column_end":19},"name":"Matrix1x5","qualname":"::base::alias::Matrix1x5","value":"MatrixMN<N, U1, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x5 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159728,"byte_end":159776,"line_start":49,"line_end":49,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159880,"byte_end":159889,"line_start":52,"line_end":52,"column_start":10,"column_end":19},"name":"Matrix1x6","qualname":"::base::alias::Matrix1x6","value":"MatrixMN<N, U1, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x6 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159822,"byte_end":159870,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159975,"byte_end":159984,"line_start":55,"line_end":55,"column_start":10,"column_end":19},"name":"Matrix2x3","qualname":"::base::alias::Matrix2x3","value":"MatrixMN<N, U2, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x3 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":159917,"byte_end":159965,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160069,"byte_end":160078,"line_start":57,"line_end":57,"column_start":10,"column_end":19},"name":"Matrix2x4","qualname":"::base::alias::Matrix2x4","value":"MatrixMN<N, U2, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x4 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160011,"byte_end":160059,"line_start":56,"line_end":56,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160163,"byte_end":160172,"line_start":59,"line_end":59,"column_start":10,"column_end":19},"name":"Matrix2x5","qualname":"::base::alias::Matrix2x5","value":"MatrixMN<N, U2, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x5 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160105,"byte_end":160153,"line_start":58,"line_end":58,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1121},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160257,"byte_end":160266,"line_start":61,"line_end":61,"column_start":10,"column_end":19},"name":"Matrix2x6","qualname":"::base::alias::Matrix2x6","value":"MatrixMN<N, U2, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x6 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160199,"byte_end":160247,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160352,"byte_end":160361,"line_start":64,"line_end":64,"column_start":10,"column_end":19},"name":"Matrix3x4","qualname":"::base::alias::Matrix3x4","value":"MatrixMN<N, U3, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x4 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160294,"byte_end":160342,"line_start":63,"line_end":63,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160446,"byte_end":160455,"line_start":66,"line_end":66,"column_start":10,"column_end":19},"name":"Matrix3x5","qualname":"::base::alias::Matrix3x5","value":"MatrixMN<N, U3, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x5 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160388,"byte_end":160436,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160540,"byte_end":160549,"line_start":68,"line_end":68,"column_start":10,"column_end":19},"name":"Matrix3x6","qualname":"::base::alias::Matrix3x6","value":"MatrixMN<N, U3, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x6 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160482,"byte_end":160530,"line_start":67,"line_end":67,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160635,"byte_end":160644,"line_start":71,"line_end":71,"column_start":10,"column_end":19},"name":"Matrix4x5","qualname":"::base::alias::Matrix4x5","value":"MatrixMN<N, U4, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x5 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160577,"byte_end":160625,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160729,"byte_end":160738,"line_start":73,"line_end":73,"column_start":10,"column_end":19},"name":"Matrix4x6","qualname":"::base::alias::Matrix4x6","value":"MatrixMN<N, U4, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x6 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160671,"byte_end":160719,"line_start":72,"line_end":72,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160824,"byte_end":160833,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"name":"Matrix5x6","qualname":"::base::alias::Matrix5x6","value":"MatrixMN<N, U5, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x6 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160766,"byte_end":160814,"line_start":75,"line_end":75,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160919,"byte_end":160928,"line_start":79,"line_end":79,"column_start":10,"column_end":19},"name":"Matrix2x1","qualname":"::base::alias::Matrix2x1","value":"MatrixMN<N, U2, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x1 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160861,"byte_end":160909,"line_start":78,"line_end":78,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161013,"byte_end":161022,"line_start":81,"line_end":81,"column_start":10,"column_end":19},"name":"Matrix3x1","qualname":"::base::alias::Matrix3x1","value":"MatrixMN<N, U3, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x1 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":160955,"byte_end":161003,"line_start":80,"line_end":80,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161107,"byte_end":161116,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"name":"Matrix4x1","qualname":"::base::alias::Matrix4x1","value":"MatrixMN<N, U4, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x1 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161049,"byte_end":161097,"line_start":82,"line_end":82,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161201,"byte_end":161210,"line_start":85,"line_end":85,"column_start":10,"column_end":19},"name":"Matrix5x1","qualname":"::base::alias::Matrix5x1","value":"MatrixMN<N, U5, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x1 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161143,"byte_end":161191,"line_start":84,"line_end":84,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161295,"byte_end":161304,"line_start":87,"line_end":87,"column_start":10,"column_end":19},"name":"Matrix6x1","qualname":"::base::alias::Matrix6x1","value":"MatrixMN<N, U6, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x1 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161237,"byte_end":161285,"line_start":86,"line_end":86,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161390,"byte_end":161399,"line_start":90,"line_end":90,"column_start":10,"column_end":19},"name":"Matrix3x2","qualname":"::base::alias::Matrix3x2","value":"MatrixMN<N, U3, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x2 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161332,"byte_end":161380,"line_start":89,"line_end":89,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161484,"byte_end":161493,"line_start":92,"line_end":92,"column_start":10,"column_end":19},"name":"Matrix4x2","qualname":"::base::alias::Matrix4x2","value":"MatrixMN<N, U4, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x2 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161426,"byte_end":161474,"line_start":91,"line_end":91,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161578,"byte_end":161587,"line_start":94,"line_end":94,"column_start":10,"column_end":19},"name":"Matrix5x2","qualname":"::base::alias::Matrix5x2","value":"MatrixMN<N, U5, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x2 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161520,"byte_end":161568,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161672,"byte_end":161681,"line_start":96,"line_end":96,"column_start":10,"column_end":19},"name":"Matrix6x2","qualname":"::base::alias::Matrix6x2","value":"MatrixMN<N, U6, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x2 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161614,"byte_end":161662,"line_start":95,"line_end":95,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161767,"byte_end":161776,"line_start":99,"line_end":99,"column_start":10,"column_end":19},"name":"Matrix4x3","qualname":"::base::alias::Matrix4x3","value":"MatrixMN<N, U4, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x3 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161709,"byte_end":161757,"line_start":98,"line_end":98,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161861,"byte_end":161870,"line_start":101,"line_end":101,"column_start":10,"column_end":19},"name":"Matrix5x3","qualname":"::base::alias::Matrix5x3","value":"MatrixMN<N, U5, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x3 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161803,"byte_end":161851,"line_start":100,"line_end":100,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161955,"byte_end":161964,"line_start":103,"line_end":103,"column_start":10,"column_end":19},"name":"Matrix6x3","qualname":"::base::alias::Matrix6x3","value":"MatrixMN<N, U6, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x3 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161897,"byte_end":161945,"line_start":102,"line_end":102,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162050,"byte_end":162059,"line_start":106,"line_end":106,"column_start":10,"column_end":19},"name":"Matrix5x4","qualname":"::base::alias::Matrix5x4","value":"MatrixMN<N, U5, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x4 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":161992,"byte_end":162040,"line_start":105,"line_end":105,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162144,"byte_end":162153,"line_start":108,"line_end":108,"column_start":10,"column_end":19},"name":"Matrix6x4","qualname":"::base::alias::Matrix6x4","value":"MatrixMN<N, U6, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x4 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162086,"byte_end":162134,"line_start":107,"line_end":107,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162239,"byte_end":162248,"line_start":111,"line_end":111,"column_start":10,"column_end":19},"name":"Matrix6x5","qualname":"::base::alias::Matrix6x5","value":"MatrixMN<N, U6, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x5 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162181,"byte_end":162229,"line_start":110,"line_end":110,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162410,"byte_end":162417,"line_start":122,"line_end":122,"column_start":10,"column_end":17},"name":"DVector","qualname":"::base::alias::DVector","value":"Matrix<N, Dynamic, U1, VecStorage<N, Dynamic, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized column vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162314,"byte_end":162352,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162353,"byte_end":162400,"line_start":121,"line_end":121,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162537,"byte_end":162544,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"VectorN","qualname":"::base::alias::VectorN","value":"MatrixMN<N, D, U1>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional column vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162476,"byte_end":162527,"line_start":124,"line_end":124,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162635,"byte_end":162642,"line_start":128,"line_end":128,"column_start":10,"column_end":17},"name":"Vector1","qualname":"::base::alias::Vector1","value":"VectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional column vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162574,"byte_end":162625,"line_start":127,"line_end":127,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162725,"byte_end":162732,"line_start":130,"line_end":130,"column_start":10,"column_end":17},"name":"Vector2","qualname":"::base::alias::Vector2","value":"VectorN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional column vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162664,"byte_end":162715,"line_start":129,"line_end":129,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162815,"byte_end":162822,"line_start":132,"line_end":132,"column_start":10,"column_end":17},"name":"Vector3","qualname":"::base::alias::Vector3","value":"VectorN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional column vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162754,"byte_end":162805,"line_start":131,"line_end":131,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162905,"byte_end":162912,"line_start":134,"line_end":134,"column_start":10,"column_end":17},"name":"Vector4","qualname":"::base::alias::Vector4","value":"VectorN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional column vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162844,"byte_end":162895,"line_start":133,"line_end":133,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162995,"byte_end":163002,"line_start":136,"line_end":136,"column_start":10,"column_end":17},"name":"Vector5","qualname":"::base::alias::Vector5","value":"VectorN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional column vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":162934,"byte_end":162985,"line_start":135,"line_end":135,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163085,"byte_end":163092,"line_start":138,"line_end":138,"column_start":10,"column_end":17},"name":"Vector6","qualname":"::base::alias::Vector6","value":"VectorN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional column vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163024,"byte_end":163075,"line_start":137,"line_end":137,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163243,"byte_end":163253,"line_start":149,"line_end":149,"column_start":10,"column_end":20},"name":"RowDVector","qualname":"::base::alias::RowDVector","value":"Matrix<N, U1, Dynamic, VecStorage<N, U1, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized row vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized row vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163150,"byte_end":163185,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163186,"byte_end":163233,"line_start":148,"line_end":148,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163370,"byte_end":163380,"line_start":152,"line_end":152,"column_start":10,"column_end":20},"name":"RowVectorN","qualname":"::base::alias::RowVectorN","value":"MatrixMN<N, U1, D>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional row vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163312,"byte_end":163360,"line_start":151,"line_end":151,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163468,"byte_end":163478,"line_start":155,"line_end":155,"column_start":10,"column_end":20},"name":"RowVector1","qualname":"::base::alias::RowVector1","value":"RowVectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional row vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163410,"byte_end":163458,"line_start":154,"line_end":154,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163561,"byte_end":163571,"line_start":157,"line_end":157,"column_start":10,"column_end":20},"name":"RowVector2","qualname":"::base::alias::RowVector2","value":"RowVectorN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional row vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163503,"byte_end":163551,"line_start":156,"line_end":156,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163654,"byte_end":163664,"line_start":159,"line_end":159,"column_start":10,"column_end":20},"name":"RowVector3","qualname":"::base::alias::RowVector3","value":"RowVectorN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional row vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163596,"byte_end":163644,"line_start":158,"line_end":158,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163747,"byte_end":163757,"line_start":161,"line_end":161,"column_start":10,"column_end":20},"name":"RowVector4","qualname":"::base::alias::RowVector4","value":"RowVectorN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional row vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163689,"byte_end":163737,"line_start":160,"line_end":160,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163840,"byte_end":163850,"line_start":163,"line_end":163,"column_start":10,"column_end":20},"name":"RowVector5","qualname":"::base::alias::RowVector5","value":"RowVectorN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional row vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163782,"byte_end":163830,"line_start":162,"line_end":162,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163933,"byte_end":163943,"line_start":165,"line_end":165,"column_start":10,"column_end":20},"name":"RowVector6","qualname":"::base::alias::RowVector6","value":"RowVectorN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional row vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias.rs","byte_start":163875,"byte_end":163923,"line_start":164,"line_end":164,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":164238,"byte_end":164251,"line_start":13,"line_end":13,"column_start":10,"column_end":23},"name":"MatrixSliceMN","qualname":"::base::alias_slice::MatrixSliceMN","value":"Matrix<N, R, C, SliceStorage<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `R` rows and `C` columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":164166,"byte_end":164228,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1219},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":164429,"byte_end":164441,"line_start":17,"line_end":17,"column_start":10,"column_end":22},"name":"MatrixSliceN","qualname":"::base::alias_slice::MatrixSliceN","value":"MatrixSliceMN<'a, N, D, D, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `D` rows and columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":164361,"byte_end":164419,"line_start":16,"line_end":16,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":164610,"byte_end":164622,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"DMatrixSlice","qualname":"::base::alias_slice::DMatrixSlice","value":"MatrixSliceN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":164532,"byte_end":164600,"line_start":20,"line_end":20,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":164764,"byte_end":164776,"line_start":25,"line_end":25,"column_start":10,"column_end":22},"name":"MatrixSlice1","qualname":"::base::alias_slice::MatrixSlice1","value":"MatrixSliceN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x1 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":164718,"byte_end":164754,"line_start":24,"line_end":24,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":164907,"byte_end":164919,"line_start":28,"line_end":28,"column_start":10,"column_end":22},"name":"MatrixSlice2","qualname":"::base::alias_slice::MatrixSlice2","value":"MatrixSliceN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x2 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":164861,"byte_end":164897,"line_start":27,"line_end":27,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165050,"byte_end":165062,"line_start":31,"line_end":31,"column_start":10,"column_end":22},"name":"MatrixSlice3","qualname":"::base::alias_slice::MatrixSlice3","value":"MatrixSliceN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x3 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165004,"byte_end":165040,"line_start":30,"line_end":30,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165193,"byte_end":165205,"line_start":34,"line_end":34,"column_start":10,"column_end":22},"name":"MatrixSlice4","qualname":"::base::alias_slice::MatrixSlice4","value":"MatrixSliceN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x4 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165147,"byte_end":165183,"line_start":33,"line_end":33,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165336,"byte_end":165348,"line_start":37,"line_end":37,"column_start":10,"column_end":22},"name":"MatrixSlice5","qualname":"::base::alias_slice::MatrixSlice5","value":"MatrixSliceN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x5 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165290,"byte_end":165326,"line_start":36,"line_end":36,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165479,"byte_end":165491,"line_start":40,"line_end":40,"column_start":10,"column_end":22},"name":"MatrixSlice6","qualname":"::base::alias_slice::MatrixSlice6","value":"MatrixSliceN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x6 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165433,"byte_end":165469,"line_start":39,"line_end":39,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165623,"byte_end":165637,"line_start":44,"line_end":44,"column_start":10,"column_end":24},"name":"MatrixSlice1x2","qualname":"::base::alias_slice::MatrixSlice1x2","value":"MatrixSliceMN<'a, N, U1, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x2 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165577,"byte_end":165613,"line_start":43,"line_end":43,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165773,"byte_end":165787,"line_start":47,"line_end":47,"column_start":10,"column_end":24},"name":"MatrixSlice1x3","qualname":"::base::alias_slice::MatrixSlice1x3","value":"MatrixSliceMN<'a, N, U1, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x3 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165727,"byte_end":165763,"line_start":46,"line_end":46,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165923,"byte_end":165937,"line_start":50,"line_end":50,"column_start":10,"column_end":24},"name":"MatrixSlice1x4","qualname":"::base::alias_slice::MatrixSlice1x4","value":"MatrixSliceMN<'a, N, U1, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x4 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":165877,"byte_end":165913,"line_start":49,"line_end":49,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166073,"byte_end":166087,"line_start":53,"line_end":53,"column_start":10,"column_end":24},"name":"MatrixSlice1x5","qualname":"::base::alias_slice::MatrixSlice1x5","value":"MatrixSliceMN<'a, N, U1, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x5 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166027,"byte_end":166063,"line_start":52,"line_end":52,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166223,"byte_end":166237,"line_start":56,"line_end":56,"column_start":10,"column_end":24},"name":"MatrixSlice1x6","qualname":"::base::alias_slice::MatrixSlice1x6","value":"MatrixSliceMN<'a, N, U1, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x6 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166177,"byte_end":166213,"line_start":55,"line_end":55,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166374,"byte_end":166388,"line_start":60,"line_end":60,"column_start":10,"column_end":24},"name":"MatrixSlice2x1","qualname":"::base::alias_slice::MatrixSlice2x1","value":"MatrixSliceMN<'a, N, U2, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x1 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166328,"byte_end":166364,"line_start":59,"line_end":59,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166524,"byte_end":166538,"line_start":63,"line_end":63,"column_start":10,"column_end":24},"name":"MatrixSlice2x3","qualname":"::base::alias_slice::MatrixSlice2x3","value":"MatrixSliceMN<'a, N, U2, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x3 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166478,"byte_end":166514,"line_start":62,"line_end":62,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166674,"byte_end":166688,"line_start":66,"line_end":66,"column_start":10,"column_end":24},"name":"MatrixSlice2x4","qualname":"::base::alias_slice::MatrixSlice2x4","value":"MatrixSliceMN<'a, N, U2, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x4 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166628,"byte_end":166664,"line_start":65,"line_end":65,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166824,"byte_end":166838,"line_start":69,"line_end":69,"column_start":10,"column_end":24},"name":"MatrixSlice2x5","qualname":"::base::alias_slice::MatrixSlice2x5","value":"MatrixSliceMN<'a, N, U2, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x5 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166778,"byte_end":166814,"line_start":68,"line_end":68,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166974,"byte_end":166988,"line_start":72,"line_end":72,"column_start":10,"column_end":24},"name":"MatrixSlice2x6","qualname":"::base::alias_slice::MatrixSlice2x6","value":"MatrixSliceMN<'a, N, U2, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x6 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":166928,"byte_end":166964,"line_start":71,"line_end":71,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167125,"byte_end":167139,"line_start":76,"line_end":76,"column_start":10,"column_end":24},"name":"MatrixSlice3x1","qualname":"::base::alias_slice::MatrixSlice3x1","value":"MatrixSliceMN<'a, N, U3, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x1 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167079,"byte_end":167115,"line_start":75,"line_end":75,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167275,"byte_end":167289,"line_start":79,"line_end":79,"column_start":10,"column_end":24},"name":"MatrixSlice3x2","qualname":"::base::alias_slice::MatrixSlice3x2","value":"MatrixSliceMN<'a, N, U3, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x2 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167229,"byte_end":167265,"line_start":78,"line_end":78,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167425,"byte_end":167439,"line_start":82,"line_end":82,"column_start":10,"column_end":24},"name":"MatrixSlice3x4","qualname":"::base::alias_slice::MatrixSlice3x4","value":"MatrixSliceMN<'a, N, U3, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x4 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167379,"byte_end":167415,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167575,"byte_end":167589,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"MatrixSlice3x5","qualname":"::base::alias_slice::MatrixSlice3x5","value":"MatrixSliceMN<'a, N, U3, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x5 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167529,"byte_end":167565,"line_start":84,"line_end":84,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167725,"byte_end":167739,"line_start":88,"line_end":88,"column_start":10,"column_end":24},"name":"MatrixSlice3x6","qualname":"::base::alias_slice::MatrixSlice3x6","value":"MatrixSliceMN<'a, N, U3, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x6 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167679,"byte_end":167715,"line_start":87,"line_end":87,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167876,"byte_end":167890,"line_start":92,"line_end":92,"column_start":10,"column_end":24},"name":"MatrixSlice4x1","qualname":"::base::alias_slice::MatrixSlice4x1","value":"MatrixSliceMN<'a, N, U4, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x1 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167830,"byte_end":167866,"line_start":91,"line_end":91,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168026,"byte_end":168040,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"MatrixSlice4x2","qualname":"::base::alias_slice::MatrixSlice4x2","value":"MatrixSliceMN<'a, N, U4, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x2 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":167980,"byte_end":168016,"line_start":94,"line_end":94,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168176,"byte_end":168190,"line_start":98,"line_end":98,"column_start":10,"column_end":24},"name":"MatrixSlice4x3","qualname":"::base::alias_slice::MatrixSlice4x3","value":"MatrixSliceMN<'a, N, U4, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x3 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168130,"byte_end":168166,"line_start":97,"line_end":97,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168326,"byte_end":168340,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"name":"MatrixSlice4x5","qualname":"::base::alias_slice::MatrixSlice4x5","value":"MatrixSliceMN<'a, N, U4, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x5 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168280,"byte_end":168316,"line_start":100,"line_end":100,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168476,"byte_end":168490,"line_start":104,"line_end":104,"column_start":10,"column_end":24},"name":"MatrixSlice4x6","qualname":"::base::alias_slice::MatrixSlice4x6","value":"MatrixSliceMN<'a, N, U4, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x6 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168430,"byte_end":168466,"line_start":103,"line_end":103,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168627,"byte_end":168641,"line_start":108,"line_end":108,"column_start":10,"column_end":24},"name":"MatrixSlice5x1","qualname":"::base::alias_slice::MatrixSlice5x1","value":"MatrixSliceMN<'a, N, U5, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x1 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168581,"byte_end":168617,"line_start":107,"line_end":107,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168777,"byte_end":168791,"line_start":111,"line_end":111,"column_start":10,"column_end":24},"name":"MatrixSlice5x2","qualname":"::base::alias_slice::MatrixSlice5x2","value":"MatrixSliceMN<'a, N, U5, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x2 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168731,"byte_end":168767,"line_start":110,"line_end":110,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168927,"byte_end":168941,"line_start":114,"line_end":114,"column_start":10,"column_end":24},"name":"MatrixSlice5x3","qualname":"::base::alias_slice::MatrixSlice5x3","value":"MatrixSliceMN<'a, N, U5, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x3 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":168881,"byte_end":168917,"line_start":113,"line_end":113,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169077,"byte_end":169091,"line_start":117,"line_end":117,"column_start":10,"column_end":24},"name":"MatrixSlice5x4","qualname":"::base::alias_slice::MatrixSlice5x4","value":"MatrixSliceMN<'a, N, U5, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x4 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169031,"byte_end":169067,"line_start":116,"line_end":116,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169227,"byte_end":169241,"line_start":120,"line_end":120,"column_start":10,"column_end":24},"name":"MatrixSlice5x6","qualname":"::base::alias_slice::MatrixSlice5x6","value":"MatrixSliceMN<'a, N, U5, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x6 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169181,"byte_end":169217,"line_start":119,"line_end":119,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169378,"byte_end":169392,"line_start":124,"line_end":124,"column_start":10,"column_end":24},"name":"MatrixSlice6x1","qualname":"::base::alias_slice::MatrixSlice6x1","value":"MatrixSliceMN<'a, N, U6, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x1 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169332,"byte_end":169368,"line_start":123,"line_end":123,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169528,"byte_end":169542,"line_start":127,"line_end":127,"column_start":10,"column_end":24},"name":"MatrixSlice6x2","qualname":"::base::alias_slice::MatrixSlice6x2","value":"MatrixSliceMN<'a, N, U6, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x2 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169482,"byte_end":169518,"line_start":126,"line_end":126,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169678,"byte_end":169692,"line_start":130,"line_end":130,"column_start":10,"column_end":24},"name":"MatrixSlice6x3","qualname":"::base::alias_slice::MatrixSlice6x3","value":"MatrixSliceMN<'a, N, U6, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x3 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169632,"byte_end":169668,"line_start":129,"line_end":129,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169828,"byte_end":169842,"line_start":133,"line_end":133,"column_start":10,"column_end":24},"name":"MatrixSlice6x4","qualname":"::base::alias_slice::MatrixSlice6x4","value":"MatrixSliceMN<'a, N, U6, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x4 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169782,"byte_end":169818,"line_start":132,"line_end":132,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169978,"byte_end":169992,"line_start":136,"line_end":136,"column_start":10,"column_end":24},"name":"MatrixSlice6x5","qualname":"::base::alias_slice::MatrixSlice6x5","value":"MatrixSliceMN<'a, N, U6, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x5 matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":169932,"byte_end":169968,"line_start":135,"line_end":135,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":170178,"byte_end":170192,"line_start":140,"line_end":140,"column_start":10,"column_end":24},"name":"MatrixSlice1xX","qualname":"::base::alias_slice::MatrixSlice1xX","value":"MatrixSliceMN<'a, N, U1, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":170083,"byte_end":170168,"line_start":139,"line_end":139,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":170383,"byte_end":170397,"line_start":143,"line_end":143,"column_start":10,"column_end":24},"name":"MatrixSlice2xX","qualname":"::base::alias_slice::MatrixSlice2xX","value":"MatrixSliceMN<'a, N, U2, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":170287,"byte_end":170373,"line_start":142,"line_end":142,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":170588,"byte_end":170602,"line_start":146,"line_end":146,"column_start":10,"column_end":24},"name":"MatrixSlice3xX","qualname":"::base::alias_slice::MatrixSlice3xX","value":"MatrixSliceMN<'a, N, U3, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":170492,"byte_end":170578,"line_start":145,"line_end":145,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":170793,"byte_end":170807,"line_start":149,"line_end":149,"column_start":10,"column_end":24},"name":"MatrixSlice4xX","qualname":"::base::alias_slice::MatrixSlice4xX","value":"MatrixSliceMN<'a, N, U4, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":170697,"byte_end":170783,"line_start":148,"line_end":148,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":170998,"byte_end":171012,"line_start":152,"line_end":152,"column_start":10,"column_end":24},"name":"MatrixSlice5xX","qualname":"::base::alias_slice::MatrixSlice5xX","value":"MatrixSliceMN<'a, N, U5, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":170902,"byte_end":170988,"line_start":151,"line_end":151,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":171203,"byte_end":171217,"line_start":155,"line_end":155,"column_start":10,"column_end":24},"name":"MatrixSlice6xX","qualname":"::base::alias_slice::MatrixSlice6xX","value":"MatrixSliceMN<'a, N, U6, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":171107,"byte_end":171193,"line_start":154,"line_end":154,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":171408,"byte_end":171422,"line_start":159,"line_end":159,"column_start":10,"column_end":24},"name":"MatrixSliceXx1","qualname":"::base::alias_slice::MatrixSliceXx1","value":"MatrixSliceMN<'a, N, Dynamic, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":171313,"byte_end":171398,"line_start":158,"line_end":158,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":171618,"byte_end":171632,"line_start":162,"line_end":162,"column_start":10,"column_end":24},"name":"MatrixSliceXx2","qualname":"::base::alias_slice::MatrixSliceXx2","value":"MatrixSliceMN<'a, N, Dynamic, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":171522,"byte_end":171608,"line_start":161,"line_end":161,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":171828,"byte_end":171842,"line_start":165,"line_end":165,"column_start":10,"column_end":24},"name":"MatrixSliceXx3","qualname":"::base::alias_slice::MatrixSliceXx3","value":"MatrixSliceMN<'a, N, Dynamic, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":171732,"byte_end":171818,"line_start":164,"line_end":164,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":172038,"byte_end":172052,"line_start":168,"line_end":168,"column_start":10,"column_end":24},"name":"MatrixSliceXx4","qualname":"::base::alias_slice::MatrixSliceXx4","value":"MatrixSliceMN<'a, N, Dynamic, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":171942,"byte_end":172028,"line_start":167,"line_end":167,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":172248,"byte_end":172262,"line_start":171,"line_end":171,"column_start":10,"column_end":24},"name":"MatrixSliceXx5","qualname":"::base::alias_slice::MatrixSliceXx5","value":"MatrixSliceMN<'a, N, Dynamic, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":172152,"byte_end":172238,"line_start":170,"line_end":170,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":172458,"byte_end":172472,"line_start":174,"line_end":174,"column_start":10,"column_end":24},"name":"MatrixSliceXx6","qualname":"::base::alias_slice::MatrixSliceXx6","value":"MatrixSliceMN<'a, N, Dynamic, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":172362,"byte_end":172448,"line_start":173,"line_end":173,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":172623,"byte_end":172635,"line_start":178,"line_end":178,"column_start":10,"column_end":22},"name":"VectorSliceN","qualname":"::base::alias_slice::VectorSliceN","value":"Matrix<N, D, U1, SliceStorage<'a, N, D, U1, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A column vector slice with `D` rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":172573,"byte_end":172613,"line_start":177,"line_end":177,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":172816,"byte_end":172828,"line_start":182,"line_end":182,"column_start":10,"column_end":22},"name":"DVectorSlice","qualname":"::base::alias_slice::DVectorSlice","value":"VectorSliceN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":172744,"byte_end":172806,"line_start":181,"line_end":181,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":172959,"byte_end":172971,"line_start":185,"line_end":185,"column_start":10,"column_end":22},"name":"VectorSlice1","qualname":"::base::alias_slice::VectorSlice1","value":"VectorSliceN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 1D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 1D column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":172920,"byte_end":172949,"line_start":184,"line_end":184,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173091,"byte_end":173103,"line_start":187,"line_end":187,"column_start":10,"column_end":22},"name":"VectorSlice2","qualname":"::base::alias_slice::VectorSlice2","value":"VectorSliceN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 2D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 2D column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173052,"byte_end":173081,"line_start":186,"line_end":186,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173223,"byte_end":173235,"line_start":189,"line_end":189,"column_start":10,"column_end":22},"name":"VectorSlice3","qualname":"::base::alias_slice::VectorSlice3","value":"VectorSliceN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 3D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 3D column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173184,"byte_end":173213,"line_start":188,"line_end":188,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173355,"byte_end":173367,"line_start":191,"line_end":191,"column_start":10,"column_end":22},"name":"VectorSlice4","qualname":"::base::alias_slice::VectorSlice4","value":"VectorSliceN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 4D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 4D column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173316,"byte_end":173345,"line_start":190,"line_end":190,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173487,"byte_end":173499,"line_start":193,"line_end":193,"column_start":10,"column_end":22},"name":"VectorSlice5","qualname":"::base::alias_slice::VectorSlice5","value":"VectorSliceN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 5D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 5D column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173448,"byte_end":173477,"line_start":192,"line_end":192,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173619,"byte_end":173631,"line_start":195,"line_end":195,"column_start":10,"column_end":22},"name":"VectorSlice6","qualname":"::base::alias_slice::VectorSlice6","value":"VectorSliceN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 6D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 6D column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173580,"byte_end":173609,"line_start":194,"line_end":194,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173851,"byte_end":173867,"line_start":205,"line_end":205,"column_start":10,"column_end":26},"name":"MatrixSliceMutMN","qualname":"::base::alias_slice::MatrixSliceMutMN","value":"Matrix<N, R, C, SliceStorageMut<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with `R` rows and `C` columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173771,"byte_end":173841,"line_start":204,"line_end":204,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174056,"byte_end":174071,"line_start":209,"line_end":209,"column_start":10,"column_end":25},"name":"MatrixSliceMutN","qualname":"::base::alias_slice::MatrixSliceMutN","value":"MatrixSliceMutMN<'a, N, D, D, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with `D` rows and columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":173980,"byte_end":174046,"line_start":208,"line_end":208,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174251,"byte_end":174266,"line_start":213,"line_end":213,"column_start":10,"column_end":25},"name":"DMatrixSliceMut","qualname":"::base::alias_slice::DMatrixSliceMut","value":"MatrixSliceMutN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174165,"byte_end":174241,"line_start":212,"line_end":212,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174419,"byte_end":174434,"line_start":217,"line_end":217,"column_start":10,"column_end":25},"name":"MatrixSliceMut1","qualname":"::base::alias_slice::MatrixSliceMut1","value":"MatrixSliceMutN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x1 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174365,"byte_end":174409,"line_start":216,"line_end":216,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174576,"byte_end":174591,"line_start":220,"line_end":220,"column_start":10,"column_end":25},"name":"MatrixSliceMut2","qualname":"::base::alias_slice::MatrixSliceMut2","value":"MatrixSliceMutN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x2 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174522,"byte_end":174566,"line_start":219,"line_end":219,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174733,"byte_end":174748,"line_start":223,"line_end":223,"column_start":10,"column_end":25},"name":"MatrixSliceMut3","qualname":"::base::alias_slice::MatrixSliceMut3","value":"MatrixSliceMutN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x3 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174679,"byte_end":174723,"line_start":222,"line_end":222,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174890,"byte_end":174905,"line_start":226,"line_end":226,"column_start":10,"column_end":25},"name":"MatrixSliceMut4","qualname":"::base::alias_slice::MatrixSliceMut4","value":"MatrixSliceMutN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x4 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174836,"byte_end":174880,"line_start":225,"line_end":225,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175047,"byte_end":175062,"line_start":229,"line_end":229,"column_start":10,"column_end":25},"name":"MatrixSliceMut5","qualname":"::base::alias_slice::MatrixSliceMut5","value":"MatrixSliceMutN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x5 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":174993,"byte_end":175037,"line_start":228,"line_end":228,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1554},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175204,"byte_end":175219,"line_start":232,"line_end":232,"column_start":10,"column_end":25},"name":"MatrixSliceMut6","qualname":"::base::alias_slice::MatrixSliceMut6","value":"MatrixSliceMutN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x6 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175150,"byte_end":175194,"line_start":231,"line_end":231,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175362,"byte_end":175379,"line_start":236,"line_end":236,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x2","qualname":"::base::alias_slice::MatrixSliceMut1x2","value":"MatrixSliceMutMN<'a, N, U1, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x2 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175308,"byte_end":175352,"line_start":235,"line_end":235,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175526,"byte_end":175543,"line_start":239,"line_end":239,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x3","qualname":"::base::alias_slice::MatrixSliceMut1x3","value":"MatrixSliceMutMN<'a, N, U1, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x3 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175472,"byte_end":175516,"line_start":238,"line_end":238,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175690,"byte_end":175707,"line_start":242,"line_end":242,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x4","qualname":"::base::alias_slice::MatrixSliceMut1x4","value":"MatrixSliceMutMN<'a, N, U1, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x4 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175636,"byte_end":175680,"line_start":241,"line_end":241,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175854,"byte_end":175871,"line_start":245,"line_end":245,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x5","qualname":"::base::alias_slice::MatrixSliceMut1x5","value":"MatrixSliceMutMN<'a, N, U1, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x5 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175800,"byte_end":175844,"line_start":244,"line_end":244,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176018,"byte_end":176035,"line_start":248,"line_end":248,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x6","qualname":"::base::alias_slice::MatrixSliceMut1x6","value":"MatrixSliceMutMN<'a, N, U1, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x6 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":175964,"byte_end":176008,"line_start":247,"line_end":247,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176183,"byte_end":176200,"line_start":252,"line_end":252,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x1","qualname":"::base::alias_slice::MatrixSliceMut2x1","value":"MatrixSliceMutMN<'a, N, U2, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x1 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176129,"byte_end":176173,"line_start":251,"line_end":251,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176347,"byte_end":176364,"line_start":255,"line_end":255,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x3","qualname":"::base::alias_slice::MatrixSliceMut2x3","value":"MatrixSliceMutMN<'a, N, U2, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x3 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176293,"byte_end":176337,"line_start":254,"line_end":254,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176511,"byte_end":176528,"line_start":258,"line_end":258,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x4","qualname":"::base::alias_slice::MatrixSliceMut2x4","value":"MatrixSliceMutMN<'a, N, U2, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x4 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176457,"byte_end":176501,"line_start":257,"line_end":257,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176675,"byte_end":176692,"line_start":261,"line_end":261,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x5","qualname":"::base::alias_slice::MatrixSliceMut2x5","value":"MatrixSliceMutMN<'a, N, U2, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x5 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176621,"byte_end":176665,"line_start":260,"line_end":260,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176839,"byte_end":176856,"line_start":264,"line_end":264,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x6","qualname":"::base::alias_slice::MatrixSliceMut2x6","value":"MatrixSliceMutMN<'a, N, U2, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x6 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176785,"byte_end":176829,"line_start":263,"line_end":263,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177004,"byte_end":177021,"line_start":268,"line_end":268,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x1","qualname":"::base::alias_slice::MatrixSliceMut3x1","value":"MatrixSliceMutMN<'a, N, U3, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x1 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":176950,"byte_end":176994,"line_start":267,"line_end":267,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177168,"byte_end":177185,"line_start":271,"line_end":271,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x2","qualname":"::base::alias_slice::MatrixSliceMut3x2","value":"MatrixSliceMutMN<'a, N, U3, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x2 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177114,"byte_end":177158,"line_start":270,"line_end":270,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1619},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177332,"byte_end":177349,"line_start":274,"line_end":274,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x4","qualname":"::base::alias_slice::MatrixSliceMut3x4","value":"MatrixSliceMutMN<'a, N, U3, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x4 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177278,"byte_end":177322,"line_start":273,"line_end":273,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177496,"byte_end":177513,"line_start":277,"line_end":277,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x5","qualname":"::base::alias_slice::MatrixSliceMut3x5","value":"MatrixSliceMutMN<'a, N, U3, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x5 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177442,"byte_end":177486,"line_start":276,"line_end":276,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177660,"byte_end":177677,"line_start":280,"line_end":280,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x6","qualname":"::base::alias_slice::MatrixSliceMut3x6","value":"MatrixSliceMutMN<'a, N, U3, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x6 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177606,"byte_end":177650,"line_start":279,"line_end":279,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177825,"byte_end":177842,"line_start":284,"line_end":284,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x1","qualname":"::base::alias_slice::MatrixSliceMut4x1","value":"MatrixSliceMutMN<'a, N, U4, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x1 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177771,"byte_end":177815,"line_start":283,"line_end":283,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177989,"byte_end":178006,"line_start":287,"line_end":287,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x2","qualname":"::base::alias_slice::MatrixSliceMut4x2","value":"MatrixSliceMutMN<'a, N, U4, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x2 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":177935,"byte_end":177979,"line_start":286,"line_end":286,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178153,"byte_end":178170,"line_start":290,"line_end":290,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x3","qualname":"::base::alias_slice::MatrixSliceMut4x3","value":"MatrixSliceMutMN<'a, N, U4, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x3 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178099,"byte_end":178143,"line_start":289,"line_end":289,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1649},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178317,"byte_end":178334,"line_start":293,"line_end":293,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x5","qualname":"::base::alias_slice::MatrixSliceMut4x5","value":"MatrixSliceMutMN<'a, N, U4, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x5 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178263,"byte_end":178307,"line_start":292,"line_end":292,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178481,"byte_end":178498,"line_start":296,"line_end":296,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x6","qualname":"::base::alias_slice::MatrixSliceMut4x6","value":"MatrixSliceMutMN<'a, N, U4, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x6 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178427,"byte_end":178471,"line_start":295,"line_end":295,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178646,"byte_end":178663,"line_start":300,"line_end":300,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x1","qualname":"::base::alias_slice::MatrixSliceMut5x1","value":"MatrixSliceMutMN<'a, N, U5, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x1 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178592,"byte_end":178636,"line_start":299,"line_end":299,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178810,"byte_end":178827,"line_start":303,"line_end":303,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x2","qualname":"::base::alias_slice::MatrixSliceMut5x2","value":"MatrixSliceMutMN<'a, N, U5, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x2 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178756,"byte_end":178800,"line_start":302,"line_end":302,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178974,"byte_end":178991,"line_start":306,"line_end":306,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x3","qualname":"::base::alias_slice::MatrixSliceMut5x3","value":"MatrixSliceMutMN<'a, N, U5, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x3 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":178920,"byte_end":178964,"line_start":305,"line_end":305,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1674},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179138,"byte_end":179155,"line_start":309,"line_end":309,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x4","qualname":"::base::alias_slice::MatrixSliceMut5x4","value":"MatrixSliceMutMN<'a, N, U5, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x4 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179084,"byte_end":179128,"line_start":308,"line_end":308,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179302,"byte_end":179319,"line_start":312,"line_end":312,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x6","qualname":"::base::alias_slice::MatrixSliceMut5x6","value":"MatrixSliceMutMN<'a, N, U5, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x6 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179248,"byte_end":179292,"line_start":311,"line_end":311,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179467,"byte_end":179484,"line_start":316,"line_end":316,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x1","qualname":"::base::alias_slice::MatrixSliceMut6x1","value":"MatrixSliceMutMN<'a, N, U6, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x1 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179413,"byte_end":179457,"line_start":315,"line_end":315,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179631,"byte_end":179648,"line_start":319,"line_end":319,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x2","qualname":"::base::alias_slice::MatrixSliceMut6x2","value":"MatrixSliceMutMN<'a, N, U6, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x2 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179577,"byte_end":179621,"line_start":318,"line_end":318,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179795,"byte_end":179812,"line_start":322,"line_end":322,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x3","qualname":"::base::alias_slice::MatrixSliceMut6x3","value":"MatrixSliceMutMN<'a, N, U6, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x3 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179741,"byte_end":179785,"line_start":321,"line_end":321,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179959,"byte_end":179976,"line_start":325,"line_end":325,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x4","qualname":"::base::alias_slice::MatrixSliceMut6x4","value":"MatrixSliceMutMN<'a, N, U6, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x4 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":179905,"byte_end":179949,"line_start":324,"line_end":324,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":180123,"byte_end":180140,"line_start":328,"line_end":328,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x5","qualname":"::base::alias_slice::MatrixSliceMut6x5","value":"MatrixSliceMutMN<'a, N, U6, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x5 mutable matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":180069,"byte_end":180113,"line_start":327,"line_end":327,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":180337,"byte_end":180354,"line_start":332,"line_end":332,"column_start":10,"column_end":27},"name":"MatrixSliceMut1xX","qualname":"::base::alias_slice::MatrixSliceMut1xX","value":"MatrixSliceMutMN<'a, N, U1, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":180234,"byte_end":180327,"line_start":331,"line_end":331,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":180556,"byte_end":180573,"line_start":335,"line_end":335,"column_start":10,"column_end":27},"name":"MatrixSliceMut2xX","qualname":"::base::alias_slice::MatrixSliceMut2xX","value":"MatrixSliceMutMN<'a, N, U2, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":180452,"byte_end":180546,"line_start":334,"line_end":334,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1719},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":180775,"byte_end":180792,"line_start":338,"line_end":338,"column_start":10,"column_end":27},"name":"MatrixSliceMut3xX","qualname":"::base::alias_slice::MatrixSliceMut3xX","value":"MatrixSliceMutMN<'a, N, U3, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":180671,"byte_end":180765,"line_start":337,"line_end":337,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":180994,"byte_end":181011,"line_start":341,"line_end":341,"column_start":10,"column_end":27},"name":"MatrixSliceMut4xX","qualname":"::base::alias_slice::MatrixSliceMut4xX","value":"MatrixSliceMutMN<'a, N, U4, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":180890,"byte_end":180984,"line_start":340,"line_end":340,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":181213,"byte_end":181230,"line_start":344,"line_end":344,"column_start":10,"column_end":27},"name":"MatrixSliceMut5xX","qualname":"::base::alias_slice::MatrixSliceMut5xX","value":"MatrixSliceMutMN<'a, N, U5, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":181109,"byte_end":181203,"line_start":343,"line_end":343,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":181432,"byte_end":181449,"line_start":347,"line_end":347,"column_start":10,"column_end":27},"name":"MatrixSliceMut6xX","qualname":"::base::alias_slice::MatrixSliceMut6xX","value":"MatrixSliceMutMN<'a, N, U6, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":181328,"byte_end":181422,"line_start":346,"line_end":346,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":181651,"byte_end":181668,"line_start":351,"line_end":351,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx1","qualname":"::base::alias_slice::MatrixSliceMutXx1","value":"MatrixSliceMutMN<'a, N, Dynamic, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":181548,"byte_end":181641,"line_start":350,"line_end":350,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":181875,"byte_end":181892,"line_start":354,"line_end":354,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx2","qualname":"::base::alias_slice::MatrixSliceMutXx2","value":"MatrixSliceMutMN<'a, N, Dynamic, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":181771,"byte_end":181865,"line_start":353,"line_end":353,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":182099,"byte_end":182116,"line_start":357,"line_end":357,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx3","qualname":"::base::alias_slice::MatrixSliceMutXx3","value":"MatrixSliceMutMN<'a, N, Dynamic, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":181995,"byte_end":182089,"line_start":356,"line_end":356,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1754},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":182323,"byte_end":182340,"line_start":360,"line_end":360,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx4","qualname":"::base::alias_slice::MatrixSliceMutXx4","value":"MatrixSliceMutMN<'a, N, Dynamic, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":182219,"byte_end":182313,"line_start":359,"line_end":359,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1759},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":182547,"byte_end":182564,"line_start":363,"line_end":363,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx5","qualname":"::base::alias_slice::MatrixSliceMutXx5","value":"MatrixSliceMutMN<'a, N, Dynamic, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":182443,"byte_end":182537,"line_start":362,"line_end":362,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1764},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":182771,"byte_end":182788,"line_start":366,"line_end":366,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx6","qualname":"::base::alias_slice::MatrixSliceMutXx6","value":"MatrixSliceMutMN<'a, N, Dynamic, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":182667,"byte_end":182761,"line_start":365,"line_end":365,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1769},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":182950,"byte_end":182965,"line_start":370,"line_end":370,"column_start":10,"column_end":25},"name":"VectorSliceMutN","qualname":"::base::alias_slice::VectorSliceMutN","value":"Matrix<N, D, U1, SliceStorageMut<'a, N, D, U1, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A mutable column vector slice with `D` rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":182892,"byte_end":182940,"line_start":369,"line_end":369,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1775},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183157,"byte_end":183172,"line_start":374,"line_end":374,"column_start":10,"column_end":25},"name":"DVectorSliceMut","qualname":"::base::alias_slice::DVectorSliceMut","value":"VectorSliceMutN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A mutable column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A mutable column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183077,"byte_end":183147,"line_start":373,"line_end":373,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1780},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183314,"byte_end":183329,"line_start":377,"line_end":377,"column_start":10,"column_end":25},"name":"VectorSliceMut1","qualname":"::base::alias_slice::VectorSliceMut1","value":"VectorSliceMutN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 1D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 1D mutable column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183267,"byte_end":183304,"line_start":376,"line_end":376,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1785},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183460,"byte_end":183475,"line_start":379,"line_end":379,"column_start":10,"column_end":25},"name":"VectorSliceMut2","qualname":"::base::alias_slice::VectorSliceMut2","value":"VectorSliceMutN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 2D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 2D mutable column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183413,"byte_end":183450,"line_start":378,"line_end":378,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1790},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183606,"byte_end":183621,"line_start":381,"line_end":381,"column_start":10,"column_end":25},"name":"VectorSliceMut3","qualname":"::base::alias_slice::VectorSliceMut3","value":"VectorSliceMutN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 3D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 3D mutable column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183559,"byte_end":183596,"line_start":380,"line_end":380,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183752,"byte_end":183767,"line_start":383,"line_end":383,"column_start":10,"column_end":25},"name":"VectorSliceMut4","qualname":"::base::alias_slice::VectorSliceMut4","value":"VectorSliceMutN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 4D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 4D mutable column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183705,"byte_end":183742,"line_start":382,"line_end":382,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183898,"byte_end":183913,"line_start":385,"line_end":385,"column_start":10,"column_end":25},"name":"VectorSliceMut5","qualname":"::base::alias_slice::VectorSliceMut5","value":"VectorSliceMutN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 5D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 5D mutable column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183851,"byte_end":183888,"line_start":384,"line_end":384,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1805},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":184044,"byte_end":184059,"line_start":387,"line_end":387,"column_start":10,"column_end":25},"name":"VectorSliceMut6","qualname":"::base::alias_slice::VectorSliceMut6","value":"VectorSliceMutN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 6D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 6D mutable column vector slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/alias_slice.rs","byte_start":183997,"byte_end":184034,"line_start":386,"line_end":386,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":185013,"byte_end":185024,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"new_scaling","qualname":"<MatrixN<N, D>>::new_scaling","value":"fn (scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies the same scaling factor on each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies the same scaling factor on each dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":184895,"byte_end":184987,"line_start":29,"line_end":29,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":184992,"byte_end":185001,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":185306,"byte_end":185328,"line_start":40,"line_end":40,"column_start":12,"column_end":34},"name":"new_nonuniform_scaling","qualname":"<MatrixN<N, D>>::new_nonuniform_scaling","value":"fn <SB> (scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":185185,"byte_end":185280,"line_start":38,"line_end":38,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":185285,"byte_end":185294,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":185711,"byte_end":185726,"line_start":55,"line_end":55,"column_start":12,"column_end":27},"name":"new_translation","qualname":"<MatrixN<N, D>>::new_translation","value":"fn <SB> (translation: &Vector<N, DimNameDiff<D, U1>, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a pure translation.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a pure translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":185616,"byte_end":185685,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":185690,"byte_end":185699,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186181,"byte_end":186193,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix3<N>>::new_rotation","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.\n","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186076,"byte_end":186155,"line_start":69,"line_end":69,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186160,"byte_end":186169,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186499,"byte_end":186511,"line_start":81,"line_end":81,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix4<N>>::new_rotation","value":"fn (axisangle: Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186306,"byte_end":186398,"line_start":77,"line_end":77,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186403,"byte_end":186406,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186411,"byte_end":186473,"line_start":79,"line_end":79,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186478,"byte_end":186487,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186800,"byte_end":186822,"line_start":89,"line_end":89,"column_start":12,"column_end":34},"name":"new_rotation_wrt_point","qualname":"<Matrix4<N>>::new_rotation_wrt_point","value":"fn (axisangle: Vector3<N>, pt: Point3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186607,"byte_end":186699,"line_start":85,"line_end":85,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186704,"byte_end":186707,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186712,"byte_end":186774,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186779,"byte_end":186788,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187247,"byte_end":187263,"line_start":99,"line_end":99,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Matrix4<N>>::from_scaled_axis","value":"fn (axisangle: Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187003,"byte_end":187095,"line_start":94,"line_end":94,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187100,"byte_end":187103,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187108,"byte_end":187170,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/ This is identical to `Self::new_rotation`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187175,"byte_end":187221,"line_start":97,"line_end":97,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187226,"byte_end":187235,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187521,"byte_end":187538,"line_start":106,"line_end":106,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Matrix4<N>>::from_euler_angles","value":"fn (roll: N, pitch: N, yaw: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187372,"byte_end":187417,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187422,"byte_end":187425,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187430,"byte_end":187509,"line_start":105,"line_end":105,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187749,"byte_end":187764,"line_start":111,"line_end":111,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Matrix4<N>>::from_axis_angle","value":"fn (axis: &Unit<Vector3<N>>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.\n","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187659,"byte_end":187737,"line_start":110,"line_end":110,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187980,"byte_end":187996,"line_start":117,"line_end":117,"column_start":12,"column_end":28},"name":"new_orthographic","qualname":"<Matrix4<N>>::new_orthographic","value":"fn (left: N, right: N, bottom: N, top: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for an orthographic projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for an orthographic projection.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187886,"byte_end":187954,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":187959,"byte_end":187968,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188246,"byte_end":188261,"line_start":123,"line_end":123,"column_start":12,"column_end":27},"name":"new_perspective","qualname":"<Matrix4<N>>::new_perspective","value":"fn (aspect: N, fovy: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for a perspective projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for a perspective projection.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188154,"byte_end":188220,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188225,"byte_end":188234,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188673,"byte_end":188685,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Matrix4<N>>::face_towards","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an isometry that corresponds to the local frame of an observer standing at the\n point `eye` and looking toward `target`.","sig":null,"attributes":[{"value":"/ Creates an isometry that corresponds to the local frame of an observer standing at the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188388,"byte_end":188478,"line_start":127,"line_end":127,"column_start":5,"column_end":95}},{"value":"/ point `eye` and looking toward `target`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188483,"byte_end":188527,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188532,"byte_end":188535,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `target - eye` to the positive `z` axis and the origin to the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188540,"byte_end":188632,"line_start":130,"line_end":130,"column_start":5,"column_end":97}},{"value":"/ `eye`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188637,"byte_end":188647,"line_start":131,"line_end":131,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188652,"byte_end":188661,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188949,"byte_end":188967,"line_start":139,"line_end":139,"column_start":12,"column_end":30},"name":"new_observer_frame","qualname":"<Matrix4<N>>::new_observer_frame","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Matrix4::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Matrix4::face_towards] instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188833,"byte_end":188885,"line_start":137,"line_end":137,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":188890,"byte_end":188937,"line_start":138,"line_end":138,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189162,"byte_end":189172,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Matrix4<N>>::look_at_rh","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189090,"byte_end":189136,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189141,"byte_end":189150,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189389,"byte_end":189399,"line_start":151,"line_end":151,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Matrix4<N>>::look_at_lh","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189318,"byte_end":189363,"line_start":149,"line_end":149,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189368,"byte_end":189377,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189739,"byte_end":189753,"line_start":159,"line_end":159,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<SquareMatrix<N, D, S>>::append_scaling","value":"fn (&self, scaling: N) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189627,"byte_end":189713,"line_start":157,"line_end":157,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189718,"byte_end":189727,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":190097,"byte_end":190112,"line_start":171,"line_end":171,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling","value":"fn (&self, scaling: N) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189985,"byte_end":190071,"line_start":169,"line_end":169,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":190076,"byte_end":190085,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":190460,"byte_end":190485,"line_start":183,"line_end":183,"column_start":12,"column_end":37},"name":"append_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling","value":"fn <SB> (&self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":190345,"byte_end":190434,"line_start":181,"line_end":181,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":190439,"byte_end":190448,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":190947,"byte_end":190973,"line_start":199,"line_end":199,"column_start":12,"column_end":38},"name":"prepend_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling","value":"fn <SB> (&self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":190832,"byte_end":190921,"line_start":197,"line_end":197,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":190926,"byte_end":190935,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":191421,"byte_end":191439,"line_start":215,"line_end":215,"column_start":12,"column_end":30},"name":"append_translation","qualname":"<SquareMatrix<N, D, S>>::append_translation","value":"fn <SB> (&self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":191321,"byte_end":191395,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":191400,"byte_end":191409,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":191852,"byte_end":191871,"line_start":228,"line_end":228,"column_start":12,"column_end":31},"name":"prepend_translation","qualname":"<SquareMatrix<N, D, S>>::prepend_translation","value":"fn <SB> (&self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":191752,"byte_end":191826,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":191831,"byte_end":191840,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":192449,"byte_end":192467,"line_start":246,"line_end":246,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":192328,"byte_end":192423,"line_start":244,"line_end":244,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":192428,"byte_end":192437,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":192755,"byte_end":192774,"line_start":254,"line_end":254,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":192634,"byte_end":192729,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":192734,"byte_end":192743,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":193068,"byte_end":193097,"line_start":262,"line_end":262,"column_start":12,"column_end":41},"name":"append_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling_mut","value":"fn <SB> (&mut self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":192944,"byte_end":193042,"line_start":260,"line_end":260,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":193047,"byte_end":193056,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":193523,"byte_end":193553,"line_start":275,"line_end":275,"column_start":12,"column_end":42},"name":"prepend_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling_mut","value":"fn <SB> (&mut self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":193399,"byte_end":193497,"line_start":273,"line_end":273,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":193502,"byte_end":193511,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":193977,"byte_end":193999,"line_start":290,"line_end":290,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<SquareMatrix<N, D, S>>::append_translation_mut","value":"fn <SB> (&mut self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":193877,"byte_end":193951,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":193956,"byte_end":193965,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":194449,"byte_end":194472,"line_start":305,"line_end":305,"column_start":12,"column_end":35},"name":"prepend_translation_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_translation_mut","value":"fn <SB> (&mut self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":194349,"byte_end":194423,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":194428,"byte_end":194437,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":195468,"byte_end":195484,"line_start":331,"line_end":331,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<SquareMatrix<N, D, S>>::transform_vector","value":"fn (&self, v: &VectorN<N, DimNameDiff<D, U1>>) -> VectorN<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":195353,"byte_end":195442,"line_start":329,"line_end":329,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":195447,"byte_end":195456,"line_start":330,"line_end":330,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":196031,"byte_end":196046,"line_start":349,"line_end":349,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<SquareMatrix<N, D, S>>::transform_point","value":"fn (&self, pt: &Point<N, DimNameDiff<D, U1>>) -> Point<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":195917,"byte_end":196005,"line_start":347,"line_end":347,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":196010,"byte_end":196019,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198254,"byte_end":198257,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"abs","qualname":"<Matrix<N, R, C, S>>::abs","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the component-wise absolute value.","sig":null,"attributes":[{"value":"/ Computes the component-wise absolute value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":197947,"byte_end":197994,"line_start":18,"line_end":18,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":197999,"byte_end":198002,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198007,"byte_end":198020,"line_start":20,"line_end":20,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198025,"byte_end":198028,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198033,"byte_end":198040,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198045,"byte_end":198073,"line_start":23,"line_end":23,"column_start":5,"column_end":33}},{"value":"/ let a = Matrix2::new(0.0, 1.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198078,"byte_end":198112,"line_start":24,"line_end":24,"column_start":5,"column_end":39}},{"value":"/                      -2.0, -3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198117,"byte_end":198154,"line_start":25,"line_end":25,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a.abs(), Matrix2::new(0.0, 1.0, 2.0, 3.0))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198159,"byte_end":198216,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198221,"byte_end":198228,"line_start":27,"line_end":27,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198233,"byte_end":198242,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":13586},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":203149,"byte_end":203162,"line_start":146,"line_end":146,"column_start":5,"column_end":18},"name":"component_mul","qualname":"<Matrix<N, R1, C1, SA>>::component_mul","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixComponentOp<N, R1, C1, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":"\n    Componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198928,"byte_end":198937,"line_start":50,"line_end":50,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13595},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":203205,"byte_end":203209,"line_start":146,"line_end":146,"column_start":61,"column_end":65},"name":"cmpy","qualname":"<Matrix<N, R1, C1, SA>>::cmpy","value":"fn <R2, C2, SB, R3, C3, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Computes componentwise `self[i] = alpha * a[i] * b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":200029,"byte_end":200038,"line_start":76,"line_end":76,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13602},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":203183,"byte_end":203203,"line_start":146,"line_end":146,"column_start":39,"column_end":59},"name":"component_mul_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_assign","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":201813,"byte_end":201822,"line_start":111,"line_end":111,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13606},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":203164,"byte_end":203181,"line_start":146,"line_end":146,"column_start":20,"column_end":37},"name":"component_mul_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_mut","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":202608,"byte_end":202617,"line_start":131,"line_end":131,"column_start":13,"column_end":22}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":202630,"byte_end":202726,"line_start":132,"line_end":132,"column_start":13,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":13615},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":204322,"byte_end":204335,"line_start":191,"line_end":191,"column_start":5,"column_end":18},"name":"component_div","qualname":"<Matrix<N, R1, C1, SA>>::component_div","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixComponentOp<N, R1, C1, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":"\n    Componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":198928,"byte_end":198937,"line_start":50,"line_end":50,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13624},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":204378,"byte_end":204382,"line_start":191,"line_end":191,"column_start":61,"column_end":65},"name":"cdpy","qualname":"<Matrix<N, R1, C1, SA>>::cdpy","value":"fn <R2, C2, SB, R3, C3, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Computes componentwise `self[i] = alpha * a[i] / b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":200029,"byte_end":200038,"line_start":76,"line_end":76,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13631},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":204356,"byte_end":204376,"line_start":191,"line_end":191,"column_start":39,"column_end":59},"name":"component_div_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_div_assign","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":201813,"byte_end":201822,"line_start":111,"line_end":111,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13635},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":204337,"byte_end":204354,"line_start":191,"line_end":191,"column_start":20,"column_end":37},"name":"component_div_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_div_mut","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":202608,"byte_end":202617,"line_start":131,"line_end":131,"column_start":13,"column_end":22}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":202630,"byte_end":202726,"line_start":132,"line_end":132,"column_start":13,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":206595,"byte_end":206620,"line_start":34,"line_end":34,"column_start":19,"column_end":44},"name":"new_uninitialized_generic","qualname":"<MatrixMN<N, R, C>>::new_uninitialized_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics\n if `nrows != R::to_usize()` or `ncols != C::to_usize()`.\n","sig":null,"attributes":[{"value":"/ Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":206402,"byte_end":206497,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ if `nrows != R::to_usize()` or `ncols != C::to_usize()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":206502,"byte_end":206562,"line_start":32,"line_end":32,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":206567,"byte_end":206576,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":206825,"byte_end":206845,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"from_element_generic","qualname":"<MatrixMN<N, R, C>>::from_element_generic","value":"fn (nrows: R, ncols: C, elem: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":206742,"byte_end":206799,"line_start":38,"line_end":38,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":206804,"byte_end":206813,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207156,"byte_end":207170,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"repeat_generic","qualname":"<MatrixMN<N, R, C>>::repeat_generic","value":"fn (nrows: R, ncols: C, elem: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207025,"byte_end":207082,"line_start":45,"line_end":45,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207087,"byte_end":207090,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Same as `from_element_generic`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207095,"byte_end":207130,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207135,"byte_end":207144,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207428,"byte_end":207441,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"zeros_generic","qualname":"<MatrixMN<N, R, C>>::zeros_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to 0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207350,"byte_end":207402,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207407,"byte_end":207416,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207652,"byte_end":207673,"line_start":63,"line_end":63,"column_start":12,"column_end":33},"name":"from_iterator_generic","qualname":"<MatrixMN<N, R, C>>::from_iterator_generic","value":"fn <I> (nrows: R, ncols: C, iter: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements filled by an iterator.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements filled by an iterator.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207561,"byte_end":207626,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207631,"byte_end":207640,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":208107,"byte_end":208129,"line_start":74,"line_end":74,"column_start":12,"column_end":34},"name":"from_row_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_row_slice_generic","value":"fn (nrows: R, ncols: C, slice: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice in\n row-major order.","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice in","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207849,"byte_end":207937,"line_start":68,"line_end":68,"column_start":5,"column_end":93}},{"value":"/ row-major order.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207942,"byte_end":207962,"line_start":69,"line_end":69,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207967,"byte_end":207970,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The order of elements in the slice must follow the usual mathematic writing, i.e.,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":207975,"byte_end":208061,"line_start":71,"line_end":71,"column_start":5,"column_end":91}},{"value":"/ row-by-row.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":208066,"byte_end":208081,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":208086,"byte_end":208095,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":208883,"byte_end":208908,"line_start":95,"line_end":95,"column_start":12,"column_end":37},"name":"from_column_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_column_slice_generic","value":"fn (nrows: R, ncols: C, slice: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice. The\n components must have the same layout as the matrix data storage (i.e. column-major).\n","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice. The","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":208674,"byte_end":208764,"line_start":92,"line_end":92,"column_start":5,"column_end":95}},{"value":"/ components must have the same layout as the matrix data storage (i.e. column-major).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":208769,"byte_end":208857,"line_start":93,"line_end":93,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":208862,"byte_end":208871,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":209174,"byte_end":209189,"line_start":102,"line_end":102,"column_start":12,"column_end":27},"name":"from_fn_generic","qualname":"<MatrixMN<N, R, C>>::from_fn_generic","value":"fn <F> (nrows: R, ncols: C, mut f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with the results of a function applied to each of its component\n coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with the results of a function applied to each of its component","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":209036,"byte_end":209127,"line_start":99,"line_end":99,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":209132,"byte_end":209148,"line_start":100,"line_end":100,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":209153,"byte_end":209162,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":209779,"byte_end":209795,"line_start":120,"line_end":120,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<MatrixMN<N, R, C>>::identity_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity matrix.","sig":null,"attributes":[{"value":"/ Creates a new identity matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":209544,"byte_end":209578,"line_start":115,"line_end":115,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":209583,"byte_end":209586,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":209591,"byte_end":209686,"line_start":117,"line_end":117,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":209691,"byte_end":209753,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":209758,"byte_end":209767,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":210201,"byte_end":210230,"line_start":130,"line_end":130,"column_start":12,"column_end":41},"name":"from_diagonal_element_generic","qualname":"<MatrixMN<N, R, C>>::from_diagonal_element_generic","value":"fn (nrows: R, ncols: C, elt: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with its diagonal filled with copies of `elt`.","sig":null,"attributes":[{"value":"/ Creates a new matrix with its diagonal filled with copies of `elt`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":209929,"byte_end":210000,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":210005,"byte_end":210008,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":210013,"byte_end":210108,"line_start":127,"line_end":127,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":210113,"byte_end":210175,"line_start":128,"line_end":128,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":210180,"byte_end":210189,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":210785,"byte_end":210814,"line_start":146,"line_end":146,"column_start":12,"column_end":41},"name":"from_partial_diagonal_generic","qualname":"<MatrixMN<N, R, C>>::from_partial_diagonal_generic","value":"fn (nrows: R, ncols: C, elts: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are\n filled with the content of `elts`. Others are set to 0.","sig":null,"attributes":[{"value":"/ Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":210508,"byte_end":210602,"line_start":141,"line_end":141,"column_start":5,"column_end":99}},{"value":"/ filled with the content of `elts`. Others are set to 0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":210607,"byte_end":210666,"line_start":142,"line_end":142,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":210671,"byte_end":210674,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Panics if `elts.len()` is larger than the minimum among `nrows` and `ncols`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":210679,"byte_end":210759,"line_start":144,"line_end":144,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":210764,"byte_end":210773,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211901,"byte_end":211910,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"from_rows","qualname":"<MatrixMN<N, R, C>>::from_rows","value":"fn <SB> (rows: &[Matrix<N, U1, C, SB>]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its rows.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211225,"byte_end":211263,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211268,"byte_end":211271,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough rows are provided (for statically-sized matrices), or if all rows do","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211276,"byte_end":211369,"line_start":163,"line_end":163,"column_start":5,"column_end":98}},{"value":"/ not have the same dimensions.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211374,"byte_end":211407,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211412,"byte_end":211415,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211420,"byte_end":211433,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211438,"byte_end":211445,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{RowVector3, Matrix3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211450,"byte_end":211492,"line_start":168,"line_end":168,"column_start":5,"column_end":47}},{"value":"/ # use std::iter;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211497,"byte_end":211517,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211522,"byte_end":211525,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_rows(&[ RowVector3::new(1.0, 2.0, 3.0),  RowVector3::new(4.0, 5.0, 6.0),  RowVector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211530,"byte_end":211664,"line_start":171,"line_end":171,"column_start":5,"column_end":139}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211669,"byte_end":211672,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 2.0 && m.m13 == 3.0 &&","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211677,"byte_end":211736,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 4.0 && m.m22 == 5.0 && m.m23 == 6.0 &&","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211741,"byte_end":211800,"line_start":174,"line_end":174,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 7.0 && m.m32 == 8.0 && m.m33 == 9.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211805,"byte_end":211863,"line_start":175,"line_end":175,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211868,"byte_end":211875,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":211880,"byte_end":211889,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":213337,"byte_end":213349,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"from_columns","qualname":"<MatrixMN<N, R, C>>::from_columns","value":"fn <SB> (columns: &[Vector<N, R, SB>]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its columns.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":212661,"byte_end":212702,"line_start":201,"line_end":201,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":212707,"byte_end":212710,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough columns are provided (for statically-sized matrices), or if all","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":212715,"byte_end":212803,"line_start":203,"line_end":203,"column_start":5,"column_end":93}},{"value":"/ columns do not have the same dimensions.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":212808,"byte_end":212852,"line_start":204,"line_end":204,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":212857,"byte_end":212860,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":212865,"byte_end":212878,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":212883,"byte_end":212890,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":212895,"byte_end":212934,"line_start":208,"line_end":208,"column_start":5,"column_end":44}},{"value":"/ # use std::iter;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":212939,"byte_end":212959,"line_start":209,"line_end":209,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":212964,"byte_end":212967,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_columns(&[ Vector3::new(1.0, 2.0, 3.0),  Vector3::new(4.0, 5.0, 6.0),  Vector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":212972,"byte_end":213100,"line_start":211,"line_end":211,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":213105,"byte_end":213108,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 4.0 && m.m13 == 7.0 &&","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":213113,"byte_end":213172,"line_start":213,"line_end":213,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 2.0 && m.m22 == 5.0 && m.m23 == 8.0 &&","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":213177,"byte_end":213236,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 3.0 && m.m32 == 6.0 && m.m33 == 9.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":213241,"byte_end":213299,"line_start":215,"line_end":215,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":213304,"byte_end":213311,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":213316,"byte_end":213325,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214218,"byte_end":214236,"line_start":244,"line_end":244,"column_start":12,"column_end":30},"name":"new_random_generic","qualname":"<MatrixMN<N, R, C>>::new_random_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214117,"byte_end":214164,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214169,"byte_end":214178,"line_start":242,"line_end":242,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214183,"byte_end":214206,"line_start":243,"line_end":243,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214482,"byte_end":214507,"line_start":251,"line_end":251,"column_start":12,"column_end":37},"name":"from_distribution_generic","qualname":"<MatrixMN<N, R, C>>::from_distribution_generic","value":"fn <Distr, G> (nrows: R, ncols: C, distribution: &Distr, rng: &mut G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values from the given distribution.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values from the given distribution.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214381,"byte_end":214456,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214461,"byte_end":214470,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215401,"byte_end":215417,"line_start":280,"line_end":280,"column_start":12,"column_end":28},"name":"from_vec_generic","qualname":"<MatrixMN<N, R, C>>::from_vec_generic","value":"fn (nrows: R, ncols: C, data: Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix backed by a given `Vec`.","sig":null,"attributes":[{"value":"/ Creates a matrix backed by a given `Vec`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214754,"byte_end":214799,"line_start":261,"line_end":261,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214804,"byte_end":214807,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The output matrix is filled column-by-column.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214812,"byte_end":214861,"line_start":263,"line_end":263,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214866,"byte_end":214869,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214874,"byte_end":214887,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214892,"byte_end":214899,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Dynamic, DMatrix, Matrix, U1};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214904,"byte_end":214955,"line_start":267,"line_end":267,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214960,"byte_end":214963,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let vec = vec![0, 1, 2, 3, 4, 5];","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":214968,"byte_end":215005,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/ let vec_ptr = vec.as_ptr();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215010,"byte_end":215041,"line_start":270,"line_end":270,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215046,"byte_end":215049,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let matrix = Matrix::from_vec_generic(Dynamic::new(vec.len()), U1, vec);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215054,"byte_end":215130,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ let matrix_storage_ptr = matrix.data.as_vec().as_ptr();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215135,"byte_end":215194,"line_start":273,"line_end":273,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215199,"byte_end":215202,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ // `matrix` is backed by exactly the same `Vec` as it was constructed from.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215207,"byte_end":215286,"line_start":275,"line_end":275,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(matrix_storage_ptr, vec_ptr);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215291,"byte_end":215335,"line_start":276,"line_end":276,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215340,"byte_end":215347,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215352,"byte_end":215361,"line_start":278,"line_end":278,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215366,"byte_end":215389,"line_start":279,"line_end":279,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2023},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":216551,"byte_end":216564,"line_start":309,"line_end":309,"column_start":12,"column_end":25},"name":"from_diagonal","qualname":"<MatrixN<N, D>>::from_diagonal","value":"fn <SB> (diag: &Vector<N, D, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","sig":null,"attributes":[{"value":"/ Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215626,"byte_end":215717,"line_start":290,"line_end":290,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215722,"byte_end":215725,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215730,"byte_end":215743,"line_start":292,"line_end":292,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215748,"byte_end":215755,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, DVector, Matrix3, DMatrix};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215760,"byte_end":215817,"line_start":294,"line_end":294,"column_start":5,"column_end":62}},{"value":"/ # use std::iter;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215822,"byte_end":215842,"line_start":295,"line_end":295,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215847,"byte_end":215850,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_diagonal(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215855,"byte_end":215920,"line_start":297,"line_end":297,"column_start":5,"column_end":70}},{"value":"/ // The two additional arguments represent the matrix dimensions.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215925,"byte_end":215993,"line_start":298,"line_end":298,"column_start":5,"column_end":73}},{"value":"/ let dm = DMatrix::from_diagonal(&DVector::from_row_slice(&[1.0, 2.0, 3.0]));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215998,"byte_end":216078,"line_start":299,"line_end":299,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":216083,"byte_end":216086,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 0.0 && m.m13 == 0.0 &&","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":216091,"byte_end":216150,"line_start":301,"line_end":301,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 0.0 && m.m22 == 2.0 && m.m23 == 0.0 &&","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":216155,"byte_end":216214,"line_start":302,"line_end":302,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 0.0 && m.m32 == 0.0 && m.m33 == 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":216219,"byte_end":216277,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/ assert!(dm[(0, 0)] == 1.0 && dm[(0, 1)] == 0.0 && dm[(0, 2)] == 0.0 &&","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":216282,"byte_end":216356,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/         dm[(1, 0)] == 0.0 && dm[(1, 1)] == 2.0 && dm[(1, 2)] == 0.0 &&","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":216361,"byte_end":216435,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/         dm[(2, 0)] == 0.0 && dm[(2, 1)] == 0.0 && dm[(2, 2)] == 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":216440,"byte_end":216513,"line_start":306,"line_end":306,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":216518,"byte_end":216525,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":216530,"byte_end":216539,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":244911,"byte_end":244912,"line_start":996,"line_end":996,"column_start":12,"column_end":13},"name":"x","qualname":"<VectorN<N, R>>::x","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":244811,"byte_end":244885,"line_start":994,"line_end":994,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":244890,"byte_end":244899,"line_start":995,"line_end":995,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":245220,"byte_end":245221,"line_start":1008,"line_end":1008,"column_start":12,"column_end":13},"name":"y","qualname":"<VectorN<N, R>>::y","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":245119,"byte_end":245194,"line_start":1006,"line_end":1006,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":245199,"byte_end":245208,"line_start":1007,"line_end":1007,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":245528,"byte_end":245529,"line_start":1020,"line_end":1020,"column_start":12,"column_end":13},"name":"z","qualname":"<VectorN<N, R>>::z","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":245428,"byte_end":245502,"line_start":1018,"line_end":1018,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":245507,"byte_end":245516,"line_start":1019,"line_end":1019,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":245837,"byte_end":245838,"line_start":1032,"line_end":1032,"column_start":12,"column_end":13},"name":"w","qualname":"<VectorN<N, R>>::w","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":245736,"byte_end":245811,"line_start":1030,"line_end":1030,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":245816,"byte_end":245825,"line_start":1031,"line_end":1031,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":246145,"byte_end":246146,"line_start":1044,"line_end":1044,"column_start":12,"column_end":13},"name":"a","qualname":"<VectorN<N, R>>::a","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":246045,"byte_end":246119,"line_start":1042,"line_end":1042,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":246124,"byte_end":246133,"line_start":1043,"line_end":1043,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":246453,"byte_end":246454,"line_start":1056,"line_end":1056,"column_start":12,"column_end":13},"name":"b","qualname":"<VectorN<N, R>>::b","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":246353,"byte_end":246427,"line_start":1054,"line_end":1054,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":246432,"byte_end":246441,"line_start":1055,"line_end":1055,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":246766,"byte_end":246772,"line_start":1068,"line_end":1068,"column_start":12,"column_end":18},"name":"x_axis","qualname":"<VectorN<N, R>>::x_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":246661,"byte_end":246740,"line_start":1066,"line_end":1066,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":246745,"byte_end":246754,"line_start":1067,"line_end":1067,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247002,"byte_end":247008,"line_start":1075,"line_end":1075,"column_start":12,"column_end":18},"name":"y_axis","qualname":"<VectorN<N, R>>::y_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":246896,"byte_end":246976,"line_start":1073,"line_end":1073,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":246981,"byte_end":246990,"line_start":1074,"line_end":1074,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247237,"byte_end":247243,"line_start":1082,"line_end":1082,"column_start":12,"column_end":18},"name":"z_axis","qualname":"<VectorN<N, R>>::z_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247132,"byte_end":247211,"line_start":1080,"line_end":1080,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247216,"byte_end":247225,"line_start":1081,"line_end":1081,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247473,"byte_end":247479,"line_start":1089,"line_end":1089,"column_start":12,"column_end":18},"name":"w_axis","qualname":"<VectorN<N, R>>::w_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247367,"byte_end":247447,"line_start":1087,"line_end":1087,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247452,"byte_end":247461,"line_start":1088,"line_end":1088,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247708,"byte_end":247714,"line_start":1096,"line_end":1096,"column_start":12,"column_end":18},"name":"a_axis","qualname":"<VectorN<N, R>>::a_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247603,"byte_end":247682,"line_start":1094,"line_end":1094,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247687,"byte_end":247696,"line_start":1095,"line_end":1095,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247943,"byte_end":247949,"line_start":1103,"line_end":1103,"column_start":12,"column_end":18},"name":"b_axis","qualname":"<VectorN<N, R>>::b_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247838,"byte_end":247917,"line_start":1101,"line_end":1101,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":247922,"byte_end":247931,"line_start":1102,"line_end":1102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":248845,"byte_end":248886,"line_start":19,"line_end":19,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic_unchecked","value":"fn (data: &'a [N], start: usize, nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":248433,"byte_end":248568,"line_start":14,"line_end":14,"column_start":5,"column_end":140}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":248573,"byte_end":248576,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":248581,"byte_end":248678,"line_start":16,"line_end":16,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":248683,"byte_end":248812,"line_start":17,"line_end":17,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":248817,"byte_end":248826,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":249603,"byte_end":249634,"line_start":41,"line_end":41,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic","value":"fn (data: &'a [N], nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":249252,"byte_end":249362,"line_start":36,"line_end":36,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":249367,"byte_end":249370,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":249375,"byte_end":249443,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":249448,"byte_end":249577,"line_start":39,"line_end":39,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":249582,"byte_end":249591,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":250881,"byte_end":250922,"line_start":72,"line_end":72,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic_unchecked","value":"fn (data: &'a mut [N], start: usize, nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":250461,"byte_end":250604,"line_start":67,"line_end":67,"column_start":5,"column_end":148}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":250609,"byte_end":250612,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":250617,"byte_end":250714,"line_start":69,"line_end":69,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":250719,"byte_end":250848,"line_start":70,"line_end":70,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":250853,"byte_end":250862,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":251658,"byte_end":251689,"line_start":94,"line_end":94,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic","value":"fn (data: &'a mut [N], nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":251299,"byte_end":251417,"line_start":89,"line_end":89,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":251422,"byte_end":251425,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":251430,"byte_end":251498,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":251503,"byte_end":251632,"line_start":92,"line_end":92,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":251637,"byte_end":251646,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":253780,"byte_end":253808,"line_start":142,"line_end":142,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_generic_unchecked","value":"fn (data: &'a [N], start: usize, nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":253399,"byte_end":253522,"line_start":137,"line_end":137,"column_start":5,"column_end":128}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":253527,"byte_end":253530,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":253535,"byte_end":253632,"line_start":139,"line_end":139,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":253637,"byte_end":253747,"line_start":140,"line_end":140,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":253752,"byte_end":253761,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254348,"byte_end":254366,"line_start":157,"line_end":157,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMN>::from_slice_generic","value":"fn (data: &'a [N], nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254016,"byte_end":254126,"line_start":152,"line_end":152,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254131,"byte_end":254134,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254139,"byte_end":254207,"line_start":154,"line_end":154,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254212,"byte_end":254322,"line_start":155,"line_end":155,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254327,"byte_end":254336,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254959,"byte_end":254987,"line_start":168,"line_end":168,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_generic_unchecked","value":"fn (data: &'a mut [N], start: usize, nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254570,"byte_end":254701,"line_start":163,"line_end":163,"column_start":5,"column_end":136}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254706,"byte_end":254709,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254714,"byte_end":254811,"line_start":165,"line_end":165,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254816,"byte_end":254926,"line_start":166,"line_end":166,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254931,"byte_end":254940,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":255539,"byte_end":255557,"line_start":183,"line_end":183,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMutMN>::from_slice_generic","value":"fn (data: &'a mut [N], nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":255199,"byte_end":255317,"line_start":178,"line_end":178,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":255322,"byte_end":255325,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":255330,"byte_end":255398,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":255403,"byte_end":255513,"line_start":181,"line_end":181,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":255518,"byte_end":255527,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":276223,"byte_end":276237,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"upper_triangle","qualname":"<Matrix<N, R, C, S>>::upper_triangle","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the upper triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the upper triangular part of this matrix (including the diagonal).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":276118,"byte_end":276197,"line_start":22,"line_end":22,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":276202,"byte_end":276211,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":276533,"byte_end":276547,"line_start":34,"line_end":34,"column_start":12,"column_end":26},"name":"lower_triangle","qualname":"<Matrix<N, R, C, S>>::lower_triangle","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the lower triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the lower triangular part of this matrix (including the diagonal).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":276428,"byte_end":276507,"line_start":32,"line_end":32,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":276512,"byte_end":276521,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":276875,"byte_end":276886,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"select_rows","qualname":"<Matrix<N, R, C, S>>::select_rows","value":"fn <'a, I> (&self, irows: I) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of rows from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of rows from `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":276738,"byte_end":276811,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":276816,"byte_end":276863,"line_start":43,"line_end":43,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":278069,"byte_end":278083,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"select_columns","qualname":"<Matrix<N, R, C, S>>::select_columns","value":"fn <'a, I> (&self, icols: I) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of columns from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of columns from `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":277929,"byte_end":278005,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":278010,"byte_end":278057,"line_start":75,"line_end":75,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":278802,"byte_end":278806,"line_start":98,"line_end":98,"column_start":12,"column_end":16},"name":"fill","qualname":"<Matrix<N, R, C, S>>::fill","value":"fn (&mut self, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of this matrix to `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":278726,"byte_end":278776,"line_start":96,"line_end":96,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":278781,"byte_end":278790,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":278973,"byte_end":278991,"line_start":106,"line_end":106,"column_start":12,"column_end":30},"name":"fill_with_identity","qualname":"<Matrix<N, R, C, S>>::fill_with_identity","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills `self` with the identity matrix.\n","sig":null,"attributes":[{"value":"/ Fills `self` with the identity matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":278905,"byte_end":278947,"line_start":104,"line_end":104,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":278952,"byte_end":278961,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":279193,"byte_end":279206,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"fill_diagonal","qualname":"<Matrix<N, R, C, S>>::fill_diagonal","value":"fn (&mut self, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the diagonal elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the diagonal elements of this matrix to `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":279108,"byte_end":279167,"line_start":112,"line_end":112,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":279172,"byte_end":279181,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":279499,"byte_end":279507,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"fill_row","qualname":"<Matrix<N, R, C, S>>::fill_row","value":"fn (&mut self, i: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected row to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected row to `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":279418,"byte_end":279473,"line_start":123,"line_end":123,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":279478,"byte_end":279487,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":279803,"byte_end":279814,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"fill_column","qualname":"<Matrix<N, R, C, S>>::fill_column","value":"fn (&mut self, j: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected column to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected column to `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":279719,"byte_end":279777,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":279782,"byte_end":279791,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":280127,"byte_end":280139,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_diagonal","qualname":"<Matrix<N, R, C, S>>::set_diagonal","value":"fn <R2, S2> (&mut self, diag: &Vector<N, R2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":280026,"byte_end":280101,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":280106,"byte_end":280115,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":280942,"byte_end":280962,"line_start":164,"line_end":164,"column_start":12,"column_end":32},"name":"set_partial_diagonal","qualname":"<Matrix<N, R, C, S>>::set_partial_diagonal","value":"fn (&mut self, diag: impl Iterator<Item = N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given iterator.","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given iterator.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":280623,"byte_end":280700,"line_start":158,"line_end":158,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":280705,"byte_end":280708,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This will fill as many diagonal elements as the iterator yields, up to the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":280713,"byte_end":280791,"line_start":160,"line_end":160,"column_start":5,"column_end":83}},{"value":"/ minimum of the number of rows and columns of `self`, and starting with the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":280796,"byte_end":280874,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/ diagonal element at index (0, 0).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":280879,"byte_end":280916,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":280921,"byte_end":280930,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":281357,"byte_end":281364,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"set_row","qualname":"<Matrix<N, R, C, S>>::set_row","value":"fn <C2, S2> (&mut self, i: usize, row: &RowVector<N, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected row of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected row of this matrix with the content of the given vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":281252,"byte_end":281331,"line_start":173,"line_end":173,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":281336,"byte_end":281345,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":281687,"byte_end":281697,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"set_column","qualname":"<Matrix<N, R, C, S>>::set_column","value":"fn <R2, S2> (&mut self, i: usize, column: &Vector<N, R2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected column of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected column of this matrix with the content of the given vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":281579,"byte_end":281661,"line_start":183,"line_end":183,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":281666,"byte_end":281675,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282345,"byte_end":282364,"line_start":201,"line_end":201,"column_start":12,"column_end":31},"name":"fill_lower_triangle","qualname":"<Matrix<N, R, C, S>>::fill_lower_triangle","value":"fn (&mut self, val: N, shift: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":281915,"byte_end":281994,"line_start":193,"line_end":193,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":281999,"byte_end":282002,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some subdiagonals to be left untouched:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282007,"byte_end":282079,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282084,"byte_end":282146,"line_start":196,"line_end":196,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282151,"byte_end":282208,"line_start":197,"line_end":197,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` subdiagonals are left","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282213,"byte_end":282300,"line_start":198,"line_end":198,"column_start":5,"column_end":92}},{"value":"/ untouched.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282305,"byte_end":282319,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282324,"byte_end":282333,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":283018,"byte_end":283037,"line_start":217,"line_end":217,"column_start":12,"column_end":31},"name":"fill_upper_triangle","qualname":"<Matrix<N, R, C, S>>::fill_upper_triangle","value":"fn (&mut self, val: N, shift: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282584,"byte_end":282663,"line_start":209,"line_end":209,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282668,"byte_end":282671,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some superdiagonals to be left untouched:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282676,"byte_end":282750,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282755,"byte_end":282817,"line_start":212,"line_end":212,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282822,"byte_end":282879,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` superdiagonals are left","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282884,"byte_end":282973,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ untouched.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282978,"byte_end":282992,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":282997,"byte_end":283006,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":283453,"byte_end":283462,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"swap_rows","qualname":"<Matrix<N, R, C, S>>::swap_rows","value":"fn (&mut self, irow1: usize, irow2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two rows in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two rows in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":283399,"byte_end":283427,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":283432,"byte_end":283441,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":283868,"byte_end":283880,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"swap_columns","qualname":"<Matrix<N, R, C, S>>::swap_columns","value":"fn (&mut self, icol1: usize, icol2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two columns in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two columns in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":283811,"byte_end":283842,"line_start":241,"line_end":241,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":283847,"byte_end":283856,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":284471,"byte_end":284510,"line_start":260,"line_end":260,"column_start":12,"column_end":51},"name":"fill_lower_triangle_with_upper_triangle","qualname":"<Matrix<N, D, D, S>>::fill_lower_triangle_with_upper_triangle","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its lower-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its lower-triangular part.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":284300,"byte_end":284374,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":284379,"byte_end":284382,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":284387,"byte_end":284459,"line_start":259,"line_end":259,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":285022,"byte_end":285061,"line_start":276,"line_end":276,"column_start":12,"column_end":51},"name":"fill_upper_triangle_with_lower_triangle","qualname":"<Matrix<N, D, D, S>>::fill_upper_triangle_with_lower_triangle","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its upper-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its upper-triangular part.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":284851,"byte_end":284925,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":284930,"byte_end":284933,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":284938,"byte_end":285010,"line_start":275,"line_end":275,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2342},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":285638,"byte_end":285651,"line_start":302,"line_end":302,"column_start":12,"column_end":25},"name":"remove_column","qualname":"<Matrix<N, R, C, S>>::remove_column","value":"fn (self, i: usize) -> MatrixMN<N, R, DimDiff<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th column from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th column from this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":285565,"byte_end":285612,"line_start":300,"line_end":300,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":285617,"byte_end":285626,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":285965,"byte_end":285982,"line_start":312,"line_end":312,"column_start":12,"column_end":29},"name":"remove_columns_at","qualname":"<Matrix<N, R, C, S>>::remove_columns_at","value":"fn (self, indices: &[usize]) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes all columns in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all columns in `indices`   ","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":285862,"byte_end":285901,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":285906,"byte_end":285953,"line_start":311,"line_end":311,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":287232,"byte_end":287246,"line_start":349,"line_end":349,"column_start":12,"column_end":26},"name":"remove_rows_at","qualname":"<Matrix<N, R, C, S>>::remove_rows_at","value":"fn (self, indices: &[usize]) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes all rows in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all rows in `indices`   ","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":287132,"byte_end":287168,"line_start":347,"line_end":347,"column_start":5,"column_end":41}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":287173,"byte_end":287220,"line_start":348,"line_end":348,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":288463,"byte_end":288483,"line_start":384,"line_end":384,"column_start":12,"column_end":32},"name":"remove_fixed_columns","qualname":"<Matrix<N, R, C, S>>::remove_fixed_columns","value":"fn <D> (self, i: usize) -> MatrixMN<N, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th\n (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":288332,"byte_end":288417,"line_start":381,"line_end":381,"column_start":5,"column_end":90}},{"value":"/ (included).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":288422,"byte_end":288437,"line_start":382,"line_end":382,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":288442,"byte_end":288451,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":288889,"byte_end":288903,"line_start":396,"line_end":396,"column_start":12,"column_end":26},"name":"remove_columns","qualname":"<Matrix<N, R, C, S>>::remove_columns","value":"fn (self, i: usize, n: usize) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":288721,"byte_end":288811,"line_start":393,"line_end":393,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":288816,"byte_end":288825,"line_start":394,"line_end":394,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":288830,"byte_end":288877,"line_start":395,"line_end":395,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":289415,"byte_end":289437,"line_start":409,"line_end":409,"column_start":12,"column_end":34},"name":"remove_columns_generic","qualname":"<Matrix<N, R, C, S>>::remove_columns_generic","value":"fn <D> (self, i: usize, nremove: D) -> MatrixMN<N, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":289146,"byte_end":289238,"line_start":404,"line_end":404,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":289243,"byte_end":289246,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_columns(...)` and","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":289251,"byte_end":289319,"line_start":406,"line_end":406,"column_start":5,"column_end":73}},{"value":"/ `.remove_fixed_columns(...)` which have nicer API interfaces.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":289324,"byte_end":289389,"line_start":407,"line_end":407,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":289394,"byte_end":289403,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":290812,"byte_end":290822,"line_start":457,"line_end":457,"column_start":12,"column_end":22},"name":"remove_row","qualname":"<Matrix<N, R, C, S>>::remove_row","value":"fn (self, i: usize) -> MatrixMN<N, DimDiff<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th row from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th row from this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":290742,"byte_end":290786,"line_start":455,"line_end":455,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":290791,"byte_end":290800,"line_start":456,"line_end":456,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":291150,"byte_end":291167,"line_start":467,"line_end":467,"column_start":12,"column_end":29},"name":"remove_fixed_rows","qualname":"<Matrix<N, R, C, S>>::remove_fixed_rows","value":"fn <D> (self, i: usize) -> MatrixMN<N, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":291030,"byte_end":291124,"line_start":465,"line_end":465,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":291129,"byte_end":291138,"line_start":466,"line_end":466,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":291567,"byte_end":291578,"line_start":479,"line_end":479,"column_start":12,"column_end":23},"name":"remove_rows","qualname":"<Matrix<N, R, C, S>>::remove_rows","value":"fn (self, i: usize, n: usize) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":291402,"byte_end":291489,"line_start":476,"line_end":476,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":291494,"byte_end":291503,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":291508,"byte_end":291555,"line_start":478,"line_end":478,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":292078,"byte_end":292097,"line_start":492,"line_end":492,"column_start":12,"column_end":31},"name":"remove_rows_generic","qualname":"<Matrix<N, R, C, S>>::remove_rows_generic","value":"fn <D> (self, i: usize, nremove: D) -> MatrixMN<N, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":291818,"byte_end":291907,"line_start":487,"line_end":487,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":291912,"byte_end":291915,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_rows(...)` and `.remove_fixed_rows(...)`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":291920,"byte_end":292011,"line_start":489,"line_end":489,"column_start":5,"column_end":96}},{"value":"/ which have nicer API interfaces.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":292016,"byte_end":292052,"line_start":490,"line_end":490,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":292057,"byte_end":292066,"line_start":491,"line_end":491,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":293135,"byte_end":293148,"line_start":533,"line_end":533,"column_start":12,"column_end":25},"name":"insert_column","qualname":"<Matrix<N, R, C, S>>::insert_column","value":"fn (self, i: usize, val: N) -> MatrixMN<N, R, DimSum<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a column filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a column filled with `val` at the `i-th` position.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":293047,"byte_end":293109,"line_start":531,"line_end":531,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":293114,"byte_end":293123,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":293477,"byte_end":293497,"line_start":543,"line_end":543,"column_start":12,"column_end":32},"name":"insert_fixed_columns","qualname":"<Matrix<N, R, C, S>>::insert_fixed_columns","value":"fn <D> (self, i: usize, val: N) -> MatrixMN<N, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":293370,"byte_end":293451,"line_start":541,"line_end":541,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":293456,"byte_end":293465,"line_start":542,"line_end":542,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":293994,"byte_end":294008,"line_start":557,"line_end":557,"column_start":12,"column_end":26},"name":"insert_columns","qualname":"<Matrix<N, R, C, S>>::insert_columns","value":"fn (self, i: usize, n: usize, val: N) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":293842,"byte_end":293916,"line_start":554,"line_end":554,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":293921,"byte_end":293930,"line_start":555,"line_end":555,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":293935,"byte_end":293982,"line_start":556,"line_end":556,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":294528,"byte_end":294564,"line_start":571,"line_end":571,"column_start":19,"column_end":55},"name":"insert_columns_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_columns_generic_uninitialized","value":"fn <D> (self, i: usize, ninsert: D) -> MatrixMN<N, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":294352,"byte_end":294434,"line_start":567,"line_end":567,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":294439,"byte_end":294442,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The added column values are not initialized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":294447,"byte_end":294495,"line_start":569,"line_end":569,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":294500,"byte_end":294509,"line_start":570,"line_end":570,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":295631,"byte_end":295641,"line_start":611,"line_end":611,"column_start":12,"column_end":22},"name":"insert_row","qualname":"<Matrix<N, R, C, S>>::insert_row","value":"fn (self, i: usize, val: N) -> MatrixMN<N, DimSum<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a row filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a row filled with `val` at the `i-th` position.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":295546,"byte_end":295605,"line_start":609,"line_end":609,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":295610,"byte_end":295619,"line_start":610,"line_end":610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":295964,"byte_end":295981,"line_start":621,"line_end":621,"column_start":12,"column_end":29},"name":"insert_fixed_rows","qualname":"<Matrix<N, R, C, S>>::insert_fixed_rows","value":"fn <D> (self, i: usize, val: N) -> MatrixMN<N, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":295860,"byte_end":295938,"line_start":619,"line_end":619,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":295943,"byte_end":295952,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":296469,"byte_end":296480,"line_start":635,"line_end":635,"column_start":12,"column_end":23},"name":"insert_rows","qualname":"<Matrix<N, R, C, S>>::insert_rows","value":"fn (self, i: usize, n: usize, val: N) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":296320,"byte_end":296391,"line_start":632,"line_end":632,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":296396,"byte_end":296405,"line_start":633,"line_end":633,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":296410,"byte_end":296457,"line_start":634,"line_end":634,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":297117,"byte_end":297150,"line_start":651,"line_end":651,"column_start":19,"column_end":52},"name":"insert_rows_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_rows_generic_uninitialized","value":"fn <D> (self, i: usize, ninsert: D) -> MatrixMN<N, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":296818,"byte_end":296888,"line_start":645,"line_end":645,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":296893,"byte_end":296896,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The added rows values are not initialized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":296901,"byte_end":296947,"line_start":647,"line_end":647,"column_start":5,"column_end":51}},{"value":"/ This is the generic implementation of `.insert_rows(...)` and","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":296952,"byte_end":297017,"line_start":648,"line_end":648,"column_start":5,"column_end":70}},{"value":"/ `.insert_fixed_rows(...)` which have nicer API interfaces.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":297022,"byte_end":297084,"line_start":649,"line_end":649,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":297089,"byte_end":297098,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":298342,"byte_end":298348,"line_start":695,"line_end":695,"column_start":12,"column_end":18},"name":"resize","qualname":"<Matrix<N, R, C, S>>::resize","value":"fn (self, new_nrows: usize, new_ncols: usize, val: N) -> DMatrix<N>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":297993,"byte_end":298078,"line_start":690,"line_end":690,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":298083,"byte_end":298086,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":298091,"byte_end":298183,"line_start":692,"line_end":692,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":298188,"byte_end":298278,"line_start":693,"line_end":693,"column_start":5,"column_end":95}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":298283,"byte_end":298330,"line_start":694,"line_end":694,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":298934,"byte_end":298951,"line_start":705,"line_end":705,"column_start":12,"column_end":29},"name":"resize_vertically","qualname":"<Matrix<N, R, C, S>>::resize_vertically","value":"fn (self, new_nrows: usize, val: N) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":298576,"byte_end":298696,"line_start":700,"line_end":700,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":298701,"byte_end":298704,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":298709,"byte_end":298801,"line_start":702,"line_end":702,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":298806,"byte_end":298870,"line_start":703,"line_end":703,"column_start":5,"column_end":69}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":298875,"byte_end":298922,"line_start":704,"line_end":704,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":299563,"byte_end":299582,"line_start":716,"line_end":716,"column_start":12,"column_end":31},"name":"resize_horizontally","qualname":"<Matrix<N, R, C, S>>::resize_horizontally","value":"fn (self, new_ncols: usize, val: N) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":299191,"byte_end":299319,"line_start":711,"line_end":711,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":299324,"byte_end":299327,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":299332,"byte_end":299424,"line_start":713,"line_end":713,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":299429,"byte_end":299499,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":299504,"byte_end":299551,"line_start":715,"line_end":715,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":300123,"byte_end":300135,"line_start":726,"line_end":726,"column_start":12,"column_end":24},"name":"fixed_resize","qualname":"<Matrix<N, R, C, S>>::fixed_resize","value":"fn <R2, C2> (self, val: N) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":299822,"byte_end":299911,"line_start":722,"line_end":722,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":299916,"byte_end":299919,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":299924,"byte_end":300016,"line_start":724,"line_end":724,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":300021,"byte_end":300111,"line_start":725,"line_end":725,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":300624,"byte_end":300638,"line_start":736,"line_end":736,"column_start":12,"column_end":26},"name":"resize_generic","qualname":"<Matrix<N, R, C, S>>::resize_generic","value":"fn <R2, C2> (self, new_nrows: R2, new_ncols: C2, val: N) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes `self` such that it has dimensions `new_nrows × now_ncols`.","sig":null,"attributes":[{"value":"/ Resizes `self` such that it has dimensions `new_nrows × now_ncols`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":300326,"byte_end":300398,"line_start":731,"line_end":731,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":300403,"byte_end":300406,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":300411,"byte_end":300503,"line_start":733,"line_end":733,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":300508,"byte_end":300598,"line_start":734,"line_end":734,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":300603,"byte_end":300612,"line_start":735,"line_end":735,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":302983,"byte_end":302993,"line_start":807,"line_end":807,"column_start":12,"column_end":22},"name":"resize_mut","qualname":"<DMatrix<N>>::resize_mut","value":"fn (&mut self, new_nrows: usize, new_ncols: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix in-place.","sig":null,"attributes":[{"value":"/ Resizes this matrix in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":302658,"byte_end":302691,"line_start":801,"line_end":801,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":302696,"byte_end":302699,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":302704,"byte_end":302796,"line_start":803,"line_end":803,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":302801,"byte_end":302891,"line_start":804,"line_end":804,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":302896,"byte_end":302899,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned fully-dynamic matrices, i.e., `DMatrix`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":302904,"byte_end":302971,"line_start":806,"line_end":806,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":303904,"byte_end":303925,"line_start":827,"line_end":827,"column_start":12,"column_end":33},"name":"resize_vertically_mut","qualname":"<MatrixMN<N, Dynamic, C>>::resize_vertically_mut","value":"fn (&mut self, new_nrows: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of rows of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of rows of this matrix in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":303507,"byte_end":303562,"line_start":820,"line_end":820,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":303567,"byte_end":303570,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":303575,"byte_end":303667,"line_start":822,"line_end":822,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":303672,"byte_end":303736,"line_start":823,"line_end":823,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":303741,"byte_end":303744,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of rows (for example, `DVector`).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":303749,"byte_end":303840,"line_start":825,"line_end":825,"column_start":5,"column_end":96}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":303845,"byte_end":303892,"line_start":826,"line_end":826,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":304869,"byte_end":304892,"line_start":848,"line_end":848,"column_start":12,"column_end":35},"name":"resize_horizontally_mut","qualname":"<MatrixMN<N, R, Dynamic>>::resize_horizontally_mut","value":"fn (&mut self, new_ncols: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of column of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of column of this matrix in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":304461,"byte_end":304518,"line_start":841,"line_end":841,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":304523,"byte_end":304526,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":304531,"byte_end":304623,"line_start":843,"line_end":843,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":304628,"byte_end":304698,"line_start":844,"line_end":844,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":304703,"byte_end":304706,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of columns (for example, `DVector`).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":304711,"byte_end":304805,"line_start":846,"line_end":846,"column_start":5,"column_end":99}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":304810,"byte_end":304857,"line_start":847,"line_end":847,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"indexing","qualname":"::base::indexing","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2433},{"krate":0,"index":2439},{"krate":0,"index":2445},{"krate":0,"index":2451},{"krate":0,"index":2458},{"krate":0,"index":2464},{"krate":0,"index":2470},{"krate":0,"index":2476},{"krate":0,"index":2482},{"krate":0,"index":2493},{"krate":0,"index":2503},{"krate":0,"index":2526},{"krate":0,"index":2535},{"krate":0,"index":2543},{"krate":0,"index":2552},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":15522},{"krate":0,"index":15532},{"krate":0,"index":15541},{"krate":0,"index":15551},{"krate":0,"index":15560},{"krate":0,"index":15570},{"krate":0,"index":15579},{"krate":0,"index":15589},{"krate":0,"index":15598},{"krate":0,"index":15608},{"krate":0,"index":15617},{"krate":0,"index":15627},{"krate":0,"index":15636},{"krate":0,"index":15647},{"krate":0,"index":15657},{"krate":0,"index":15667},{"krate":0,"index":15676},{"krate":0,"index":15686},{"krate":0,"index":15695},{"krate":0,"index":15705},{"krate":0,"index":15714},{"krate":0,"index":15724},{"krate":0,"index":15733},{"krate":0,"index":15743},{"krate":0,"index":15752},{"krate":0,"index":15762},{"krate":0,"index":15771},{"krate":0,"index":15781},{"krate":0,"index":15790},{"krate":0,"index":15801},{"krate":0,"index":15811},{"krate":0,"index":15821},{"krate":0,"index":15830},{"krate":0,"index":15840},{"krate":0,"index":15849},{"krate":0,"index":15859},{"krate":0,"index":15868},{"krate":0,"index":15878},{"krate":0,"index":15887},{"krate":0,"index":15897},{"krate":0,"index":15906},{"krate":0,"index":15916},{"krate":0,"index":15925},{"krate":0,"index":15935},{"krate":0,"index":15944},{"krate":0,"index":15955},{"krate":0,"index":15965},{"krate":0,"index":15975},{"krate":0,"index":15984},{"krate":0,"index":15994},{"krate":0,"index":16003},{"krate":0,"index":16013},{"krate":0,"index":16022},{"krate":0,"index":16032},{"krate":0,"index":16041},{"krate":0,"index":16051},{"krate":0,"index":16060},{"krate":0,"index":16070},{"krate":0,"index":16079},{"krate":0,"index":16089},{"krate":0,"index":16098},{"krate":0,"index":16109},{"krate":0,"index":16119},{"krate":0,"index":16129},{"krate":0,"index":16138},{"krate":0,"index":16148},{"krate":0,"index":16157},{"krate":0,"index":16167},{"krate":0,"index":16176},{"krate":0,"index":16186},{"krate":0,"index":16195},{"krate":0,"index":16205},{"krate":0,"index":16214},{"krate":0,"index":16224},{"krate":0,"index":16233},{"krate":0,"index":16243},{"krate":0,"index":16252},{"krate":0,"index":16263},{"krate":0,"index":16273},{"krate":0,"index":16283},{"krate":0,"index":16292},{"krate":0,"index":16302},{"krate":0,"index":16311},{"krate":0,"index":16321},{"krate":0,"index":16330},{"krate":0,"index":16340},{"krate":0,"index":16349},{"krate":0,"index":16359},{"krate":0,"index":16368},{"krate":0,"index":16378},{"krate":0,"index":16387},{"krate":0,"index":16397},{"krate":0,"index":16406},{"krate":0,"index":16417},{"krate":0,"index":16427},{"krate":0,"index":16437},{"krate":0,"index":16446},{"krate":0,"index":16456},{"krate":0,"index":16465},{"krate":0,"index":16475},{"krate":0,"index":16484},{"krate":0,"index":16494},{"krate":0,"index":16503},{"krate":0,"index":16513},{"krate":0,"index":16522},{"krate":0,"index":16532},{"krate":0,"index":16541},{"krate":0,"index":16551},{"krate":0,"index":16560},{"krate":0,"index":16571},{"krate":0,"index":16581},{"krate":0,"index":16592},{"krate":0,"index":16602},{"krate":0,"index":16613},{"krate":0,"index":16623},{"krate":0,"index":16634},{"krate":0,"index":16644},{"krate":0,"index":16655},{"krate":0,"index":16665},{"krate":0,"index":16676},{"krate":0,"index":16686},{"krate":0,"index":16697},{"krate":0,"index":16707},{"krate":0,"index":16718},{"krate":0,"index":16728},{"krate":0,"index":16740}],"decl_id":null,"docs":" Indexing\n","sig":null,"attributes":[{"value":"! Indexing","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":311653,"byte_end":311665,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":311957,"byte_end":311963,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Length","qualname":"::base::indexing::DimRange::Length","value":"type Length: Dim;","parent":{"krate":0,"index":2427},"children":[],"decl_id":null,"docs":" The number of elements indexed by this range.\n","sig":null,"attributes":[{"value":"/ The number of elements indexed by this range.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":311898,"byte_end":311947,"line_start":11,"line_end":11,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":2482},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319206,"byte_end":319217,"line_start":270,"line_end":270,"column_start":11,"column_end":22},"name":"MatrixIndex","qualname":"::base::indexing::MatrixIndex","value":"MatrixIndex<'a, N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>>: Sized","parent":null,"children":[{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319147,"byte_end":319195,"line_start":269,"line_end":269,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319334,"byte_end":319340,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"name":"Output","qualname":"::base::indexing::MatrixIndex::Output","value":"type Output : 'a;","parent":{"krate":0,"index":2482},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319284,"byte_end":319324,"line_start":272,"line_end":272,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319444,"byte_end":319456,"line_start":277,"line_end":277,"column_start":8,"column_end":20},"name":"contained_by","qualname":"::base::indexing::MatrixIndex::contained_by","value":"fn (&self, matrix: &Matrix<N, R, C, S>) -> bool","parent":{"krate":0,"index":2482},"children":[],"decl_id":null,"docs":" Produces true if the given matrix is contained by this index.\n","sig":null,"attributes":[{"value":"/ Produces true if the given matrix is contained by this index.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319352,"byte_end":319417,"line_start":275,"line_end":275,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319655,"byte_end":319658,"line_start":283,"line_end":283,"column_start":8,"column_end":11},"name":"get","qualname":"::base::indexing::MatrixIndex::get","value":"fn (self, matrix: &'a Matrix<N, R, C, S>) -> Option<Self::Output>","parent":{"krate":0,"index":2482},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds,\n or `None`, otherwise.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319507,"byte_end":319576,"line_start":279,"line_end":279,"column_start":5,"column_end":74}},{"value":"/ or `None`, otherwise.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319581,"byte_end":319606,"line_start":280,"line_end":280,"column_start":5,"column_end":30}},{"value":"inline(always)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319630,"byte_end":319647,"line_start":282,"line_end":282,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320009,"byte_end":320022,"line_start":294,"line_end":294,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::indexing::MatrixIndex::get_unchecked","value":"fn (self, matrix: &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":2482},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds\n without any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319870,"byte_end":319938,"line_start":291,"line_end":291,"column_start":5,"column_end":73}},{"value":"/ without any bounds checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319943,"byte_end":319975,"line_start":292,"line_end":292,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320224,"byte_end":320229,"line_start":300,"line_end":300,"column_start":8,"column_end":13},"name":"index","qualname":"::base::indexing::MatrixIndex::index","value":"fn (self, matrix: &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":2482},"children":[],"decl_id":null,"docs":" Produces a shared view to the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a shared view to the data at this location, or panics","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320083,"byte_end":320149,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/ if out of bounds.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320154,"byte_end":320175,"line_start":297,"line_end":297,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320199,"byte_end":320216,"line_start":299,"line_end":299,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320410,"byte_end":320424,"line_start":306,"line_end":306,"column_start":11,"column_end":25},"name":"MatrixIndexMut","qualname":"::base::indexing::MatrixIndexMut","value":"MatrixIndexMut<'a, N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>>: MatrixIndex<'a, N, R, C, S>","parent":null,"children":[{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320351,"byte_end":320399,"line_start":305,"line_end":305,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320565,"byte_end":320574,"line_start":308,"line_end":308,"column_start":10,"column_end":19},"name":"OutputMut","qualname":"::base::indexing::MatrixIndexMut::OutputMut","value":"type OutputMut : 'a;","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320515,"byte_end":320555,"line_start":307,"line_end":307,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320725,"byte_end":320742,"line_start":313,"line_end":313,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::indexing::MatrixIndexMut::get_unchecked_mut","value":"fn (self, matrix: &'a mut Matrix<N, R, C, S>) -> Self::OutputMut","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, without\n performing any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, without","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320586,"byte_end":320651,"line_start":310,"line_end":310,"column_start":5,"column_end":70}},{"value":"/ performing any bounds checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320656,"byte_end":320691,"line_start":311,"line_end":311,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320938,"byte_end":320945,"line_start":319,"line_end":319,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::base::indexing::MatrixIndexMut::get_mut","value":"fn (self, matrix: &'a mut Matrix<N, R, C, S>) -> Option<Self::OutputMut>","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, if in\n bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, if in","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320810,"byte_end":320873,"line_start":315,"line_end":315,"column_start":5,"column_end":68}},{"value":"/ bounds.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320878,"byte_end":320889,"line_start":316,"line_end":316,"column_start":5,"column_end":16}},{"value":"inline(always)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320913,"byte_end":320930,"line_start":318,"line_end":318,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":321310,"byte_end":321319,"line_start":331,"line_end":331,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::base::indexing::MatrixIndexMut::index_mut","value":"fn (self, matrix: &'a mut Matrix<N, R, C, S>) -> Self::OutputMut","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, or panics","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":321168,"byte_end":321235,"line_start":327,"line_end":327,"column_start":5,"column_end":72}},{"value":"/ if out of bounds.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":321240,"byte_end":321261,"line_start":328,"line_end":328,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":321285,"byte_end":321302,"line_start":330,"line_end":330,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324276,"byte_end":324279,"line_start":440,"line_end":440,"column_start":12,"column_end":15},"name":"get","qualname":"<Matrix<N, R, C, S>>::get","value":"fn <'a, I> (&'a self, index: I) -> Option<I::Output>","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324150,"byte_end":324204,"line_start":437,"line_end":437,"column_start":5,"column_end":59}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324209,"byte_end":324250,"line_start":438,"line_end":438,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324255,"byte_end":324264,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324552,"byte_end":324559,"line_start":450,"line_end":450,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Matrix<N, R, C, S>>::get_mut","value":"fn <'a, I> (&'a mut self, index: I) -> Option<I::OutputMut>","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324418,"byte_end":324480,"line_start":447,"line_end":447,"column_start":5,"column_end":67}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324485,"byte_end":324526,"line_start":448,"line_end":448,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324531,"byte_end":324540,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324870,"byte_end":324875,"line_start":461,"line_end":461,"column_start":12,"column_end":17},"name":"index","qualname":"<Matrix<N, R, C, S>>::index","value":"fn <'a, I> (&'a self, index: I) -> I::Output","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324744,"byte_end":324798,"line_start":458,"line_end":458,"column_start":5,"column_end":59}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324803,"byte_end":324844,"line_start":459,"line_end":459,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324849,"byte_end":324858,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325142,"byte_end":325151,"line_start":471,"line_end":471,"column_start":12,"column_end":21},"name":"index_mut","qualname":"<Matrix<N, R, C, S>>::index_mut","value":"fn <'a, I> (&'a mut self, index: I) -> I::OutputMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325008,"byte_end":325070,"line_start":468,"line_end":468,"column_start":5,"column_end":67}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325075,"byte_end":325116,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325121,"byte_end":325130,"line_start":470,"line_end":470,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325457,"byte_end":325470,"line_start":482,"line_end":482,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Matrix<N, R, C, S>>::get_unchecked","value":"fn <'a, I> (&'a self, index: I) -> I::Output","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, without doing","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325330,"byte_end":325395,"line_start":479,"line_end":479,"column_start":5,"column_end":70}},{"value":"/ any bounds checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325400,"byte_end":325424,"line_start":480,"line_end":480,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325429,"byte_end":325438,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325745,"byte_end":325762,"line_start":492,"line_end":492,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Matrix<N, R, C, S>>::get_unchecked_mut","value":"fn <'a, I> (&'a mut self, index: I) -> I::OutputMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Returns a mutable view of the data at the given index, without doing","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325611,"byte_end":325683,"line_start":489,"line_end":489,"column_start":5,"column_end":77}},{"value":"/ any bounds checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325688,"byte_end":325712,"line_start":490,"line_end":490,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":325717,"byte_end":325726,"line_start":491,"line_end":491,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":2625},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334127,"byte_end":334139,"line_start":31,"line_end":31,"column_start":10,"column_end":22},"name":"SquareMatrix","qualname":"::base::matrix::SquareMatrix","value":"Matrix<N, D, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A square matrix.\n","sig":null,"attributes":[{"value":"/ A square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334097,"byte_end":334117,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":2629},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334224,"byte_end":334230,"line_start":34,"line_end":34,"column_start":10,"column_end":16},"name":"Vector","qualname":"::base::matrix::Vector","value":"Matrix<N, D, U1, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one column and `D` rows.\n","sig":null,"attributes":[{"value":"/ A matrix with one column and `D` rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334172,"byte_end":334214,"line_start":33,"line_end":33,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":2633},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334317,"byte_end":334326,"line_start":37,"line_end":37,"column_start":10,"column_end":19},"name":"RowVector","qualname":"::base::matrix::RowVector","value":"Matrix<N, U1, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one row and `D` columns .\n","sig":null,"attributes":[{"value":"/ A matrix with one row and `D` columns .","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334264,"byte_end":334307,"line_start":36,"line_end":36,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2637},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334413,"byte_end":334422,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"name":"MatrixSum","qualname":"::base::matrix::MatrixSum","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334360,"byte_end":334403,"line_start":39,"line_end":39,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2643},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334590,"byte_end":334599,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"VectorSum","qualname":"::base::matrix::VectorSum","value":"Matrix<N, SameShapeR<R1, R2>, U1, SameShapeStorage<N, R1, U1, R2, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334537,"byte_end":334580,"line_start":43,"line_end":43,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2647},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334753,"byte_end":334764,"line_start":48,"line_end":48,"column_start":10,"column_end":21},"name":"MatrixCross","qualname":"::base::matrix::MatrixCross","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix cross product.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix cross product.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334690,"byte_end":334743,"line_start":47,"line_end":47,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":16751},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":336284,"byte_end":336290,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"Matrix","qualname":"::base::matrix::Matrix","value":"Matrix { data }","parent":null,"children":[{"krate":0,"index":16756},{"krate":0,"index":16757}],"decl_id":null,"docs":" The most generic column-major matrix (and vector) type.","sig":null,"attributes":[{"value":"/ The most generic column-major matrix (and vector) type.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334879,"byte_end":334938,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334939,"byte_end":334942,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ It combines four type parameters:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334943,"byte_end":334980,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ - `N`: for the matrix components scalar type.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":334981,"byte_end":335030,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/ - `R`: for the matrix number of rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335031,"byte_end":335072,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/ - `C`: for the matrix number of columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335073,"byte_end":335117,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ - `S`: for the matrix data storage, i.e., the buffer that actually contains the matrix","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335118,"byte_end":335208,"line_start":57,"line_end":57,"column_start":1,"column_end":91}},{"value":"/ components.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335209,"byte_end":335224,"line_start":58,"line_end":58,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335225,"byte_end":335228,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The matrix dimensions parameters `R` and `C` can either be:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335229,"byte_end":335292,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/ - type-level unsigned integer constants (e.g. `U1`, `U124`) from the `nalgebra::` root module.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335293,"byte_end":335391,"line_start":61,"line_end":61,"column_start":1,"column_end":99}},{"value":"/ All numbers from 0 to 127 are defined that way.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335392,"byte_end":335444,"line_start":62,"line_end":62,"column_start":1,"column_end":52}},{"value":"/ - type-level unsigned integer constants (e.g. `U1024`, `U10000`) from the `typenum::` crate.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335445,"byte_end":335541,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"/ Using those, you will not get error messages as nice as for numbers smaller than 128 defined on","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335542,"byte_end":335641,"line_start":64,"line_end":64,"column_start":1,"column_end":100}},{"value":"/ the `nalgebra::` module.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335642,"byte_end":335670,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ - the special value `Dynamic` from the `nalgebra::` root module. This indicates that the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335671,"byte_end":335763,"line_start":66,"line_end":66,"column_start":1,"column_end":93}},{"value":"/ specified dimension is not known at compile-time. Note that this will generally imply that the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335764,"byte_end":335862,"line_start":67,"line_end":67,"column_start":1,"column_end":99}},{"value":"/ matrix data storage `S` performs a dynamic allocation and contains extra metadata for the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335863,"byte_end":335956,"line_start":68,"line_end":68,"column_start":1,"column_end":94}},{"value":"/ matrix shape.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335957,"byte_end":335974,"line_start":69,"line_end":69,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335975,"byte_end":335978,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Note that mixing `Dynamic` with type-level unsigned integers is allowed. Actually, a","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":335979,"byte_end":336067,"line_start":71,"line_end":71,"column_start":1,"column_end":89}},{"value":"/ dynamically-sized column vector should be represented as a `Matrix<N, Dynamic, U1, S>` (given","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":336068,"byte_end":336165,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/ some concrete types for `N` and a compatible data storage type `S`).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":336166,"byte_end":336238,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":336239,"byte_end":336249,"line_start":74,"line_end":74,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":16756},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":336470,"byte_end":336474,"line_start":79,"line_end":79,"column_start":9,"column_end":13},"name":"data","qualname":"::base::matrix::Matrix::data","value":"S","parent":{"krate":0,"index":16751},"children":[],"decl_id":null,"docs":" The data storage that contains all the matrix components and informations about its number\n of rows and column (if needed).\n","sig":null,"attributes":[{"value":"/ The data storage that contains all the matrix components and informations about its number","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":336327,"byte_end":336421,"line_start":77,"line_end":77,"column_start":5,"column_end":99}},{"value":"/ of rows and column (if needed).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":336426,"byte_end":336461,"line_start":78,"line_end":78,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338167,"byte_end":338197,"line_start":143,"line_end":143,"column_start":19,"column_end":49},"name":"from_data_statically_unchecked","qualname":"<Matrix<N, R, C, S>>::from_data_statically_unchecked","value":"fn (data: S) -> Matrix<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data without statically checking that the matrix\n dimension matches the storage dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data without statically checking that the matrix","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":337997,"byte_end":338085,"line_start":140,"line_end":140,"column_start":5,"column_end":93}},{"value":"/ dimension matches the storage dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338090,"byte_end":338134,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338139,"byte_end":338148,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338476,"byte_end":338485,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"from_data","qualname":"<Matrix<N, R, C, S>>::from_data","value":"fn (data: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338405,"byte_end":338450,"line_start":152,"line_end":152,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338455,"byte_end":338464,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338815,"byte_end":338818,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"len","qualname":"<Matrix<N, R, C, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of elements of this matrix.","sig":null,"attributes":[{"value":"/ The total number of elements of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338578,"byte_end":338626,"line_start":158,"line_end":158,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338631,"byte_end":338634,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338639,"byte_end":338654,"line_start":160,"line_end":160,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338659,"byte_end":338662,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338667,"byte_end":338674,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338679,"byte_end":338709,"line_start":163,"line_end":163,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338714,"byte_end":338754,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.len(), 12);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338759,"byte_end":338789,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338794,"byte_end":338803,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339195,"byte_end":339200,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"shape","qualname":"<Matrix<N, R, C, S>>::shape","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The shape of this matrix returned as the tuple (number of rows, number of columns).","sig":null,"attributes":[{"value":"/ The shape of this matrix returned as the tuple (number of rows, number of columns).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338913,"byte_end":339000,"line_start":172,"line_end":172,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339005,"byte_end":339008,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339013,"byte_end":339028,"line_start":174,"line_end":174,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339033,"byte_end":339036,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339041,"byte_end":339048,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339053,"byte_end":339083,"line_start":177,"line_end":177,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339088,"byte_end":339128,"line_start":178,"line_end":178,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.shape(), (3, 4));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339133,"byte_end":339169,"line_start":179,"line_end":179,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339174,"byte_end":339183,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339554,"byte_end":339559,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"nrows","qualname":"<Matrix<N, R, C, S>>::nrows","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of this matrix.","sig":null,"attributes":[{"value":"/ The number of rows of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339326,"byte_end":339364,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339369,"byte_end":339372,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339377,"byte_end":339392,"line_start":188,"line_end":188,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339397,"byte_end":339400,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339405,"byte_end":339412,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339417,"byte_end":339447,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339452,"byte_end":339492,"line_start":192,"line_end":192,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.nrows(), 3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339497,"byte_end":339528,"line_start":193,"line_end":193,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339533,"byte_end":339542,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339843,"byte_end":339848,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"name":"ncols","qualname":"<Matrix<N, R, C, S>>::ncols","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of this matrix.","sig":null,"attributes":[{"value":"/ The number of columns of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339612,"byte_end":339653,"line_start":199,"line_end":199,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339658,"byte_end":339661,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339666,"byte_end":339681,"line_start":201,"line_end":201,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339686,"byte_end":339689,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339694,"byte_end":339701,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339706,"byte_end":339736,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339741,"byte_end":339781,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.ncols(), 4);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339786,"byte_end":339817,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339822,"byte_end":339831,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340331,"byte_end":340338,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"strides","qualname":"<Matrix<N, R, C, S>>::strides","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The strides (row stride, column stride) of this matrix.","sig":null,"attributes":[{"value":"/ The strides (row stride, column stride) of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339901,"byte_end":339960,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339965,"byte_end":339968,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339973,"byte_end":339988,"line_start":214,"line_end":214,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":339993,"byte_end":339996,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340001,"byte_end":340008,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::DMatrix;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340013,"byte_end":340041,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/ let mat = DMatrix::<f32>::zeros(10, 10);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340046,"byte_end":340090,"line_start":218,"line_end":218,"column_start":5,"column_end":49}},{"value":"/ let slice = mat.slice_with_steps((0, 0), (5, 3), (1, 2));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340095,"byte_end":340156,"line_start":219,"line_end":219,"column_start":5,"column_end":66}},{"value":"/ // The column strides is the number of steps (here 2) multiplied by the corresponding dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340161,"byte_end":340261,"line_start":220,"line_end":220,"column_start":5,"column_end":105}},{"value":"/ assert_eq!(mat.strides(), (1, 10));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340266,"byte_end":340305,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340310,"byte_end":340319,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341074,"byte_end":341078,"line_start":245,"line_end":245,"column_start":12,"column_end":16},"name":"iter","qualname":"<Matrix<N, R, C, S>>::iter","value":"fn (&self) -> MatrixIter<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this matrix coordinates in column-major order.","sig":null,"attributes":[{"value":"/ Iterates through this matrix coordinates in column-major order.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340466,"byte_end":340533,"line_start":228,"line_end":228,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340538,"byte_end":340541,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340546,"byte_end":340561,"line_start":230,"line_end":230,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340566,"byte_end":340569,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340574,"byte_end":340581,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340586,"byte_end":340616,"line_start":233,"line_end":233,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, 12, 13,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340621,"byte_end":340661,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/                          21, 22, 23);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340666,"byte_end":340707,"line_start":235,"line_end":235,"column_start":5,"column_end":46}},{"value":"/ let mut it = mat.iter();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340712,"byte_end":340740,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(*it.next().unwrap(), 11);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340745,"byte_end":340785,"line_start":237,"line_end":237,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 21);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340790,"byte_end":340830,"line_start":238,"line_end":238,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 12);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340835,"byte_end":340875,"line_start":239,"line_end":239,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 22);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340880,"byte_end":340920,"line_start":240,"line_end":240,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 13);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340925,"byte_end":340965,"line_start":241,"line_end":241,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 23);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":340970,"byte_end":341010,"line_start":242,"line_end":242,"column_start":5,"column_end":45}},{"value":"/ assert!(it.next().is_none());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341015,"byte_end":341048,"line_start":243,"line_end":243,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341053,"byte_end":341062,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341504,"byte_end":341512,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"row_iter","qualname":"<Matrix<N, R, C, S>>::row_iter","value":"fn (&self) -> RowIter<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the rows of this matrix.","sig":null,"attributes":[{"value":"/ Iterate through the rows of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341161,"byte_end":341205,"line_start":249,"line_end":249,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341210,"byte_end":341213,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341218,"byte_end":341231,"line_start":251,"line_end":251,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341236,"byte_end":341243,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341248,"byte_end":341278,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341283,"byte_end":341322,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341327,"byte_end":341367,"line_start":255,"line_end":255,"column_start":5,"column_end":45}},{"value":"/ for (i, row) in a.row_iter().enumerate() {","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341372,"byte_end":341418,"line_start":256,"line_end":256,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(row, a.row(i))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341423,"byte_end":341456,"line_start":257,"line_end":257,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341461,"byte_end":341466,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341471,"byte_end":341478,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341483,"byte_end":341492,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341933,"byte_end":341944,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"column_iter","qualname":"<Matrix<N, R, C, S>>::column_iter","value":"fn (&self) -> ColumnIter<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the columns of this matrix.\n # Example\n ```\n # use nalgebra::Matrix2x3;\n let mut a = Matrix2x3::new(1, 2, 3,\n                            4, 5, 6);\n for (i, column) in a.column_iter().enumerate() {\n     assert_eq!(column, a.column(i))\n }\n ```\n","sig":null,"attributes":[{"value":"/ Iterate through the columns of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341583,"byte_end":341630,"line_start":265,"line_end":265,"column_start":5,"column_end":52}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341635,"byte_end":341648,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341653,"byte_end":341660,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341665,"byte_end":341695,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341700,"byte_end":341739,"line_start":269,"line_end":269,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341744,"byte_end":341784,"line_start":270,"line_end":270,"column_start":5,"column_end":45}},{"value":"/ for (i, column) in a.column_iter().enumerate() {","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341789,"byte_end":341841,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(column, a.column(i))","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341846,"byte_end":341885,"line_start":272,"line_end":272,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341890,"byte_end":341895,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341900,"byte_end":341907,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":341912,"byte_end":341921,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342151,"byte_end":342173,"line_start":283,"line_end":283,"column_start":12,"column_end":34},"name":"vector_to_matrix_index","qualname":"<Matrix<N, R, C, S>>::vector_to_matrix_index","value":"fn (&self, i: usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the row and column coordinates of the i-th element of this matrix seen as a\n vector.\n","sig":null,"attributes":[{"value":"/ Computes the row and column coordinates of the i-th element of this matrix seen as a","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342021,"byte_end":342109,"line_start":280,"line_end":280,"column_start":5,"column_end":93}},{"value":"/ vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342114,"byte_end":342125,"line_start":281,"line_end":281,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342130,"byte_end":342139,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342718,"byte_end":342724,"line_start":302,"line_end":302,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Matrix<N, R, C, S>>::as_ptr","value":"fn (&self) -> *const N","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a pointer to the start of the matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342536,"byte_end":342585,"line_start":297,"line_end":297,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342590,"byte_end":342593,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342598,"byte_end":342670,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342675,"byte_end":342692,"line_start":300,"line_end":300,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342697,"byte_end":342706,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342954,"byte_end":342965,"line_start":310,"line_end":310,"column_start":12,"column_end":23},"name":"relative_eq","qualname":"<Matrix<N, R, C, S>>::relative_eq","value":"fn <R2, C2, SB> (&self, other: &Matrix<N, R2, C2, SB>, eps: N::Epsilon, max_relative: N::Epsilon) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are equal up to a given epsilon.","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are equal up to a given epsilon.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342781,"byte_end":342848,"line_start":306,"line_end":306,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342853,"byte_end":342856,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ See `relative_eq` from the `RelativeEq` trait for more details.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342861,"byte_end":342928,"line_start":308,"line_end":308,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":342933,"byte_end":342942,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":343568,"byte_end":343570,"line_start":332,"line_end":332,"column_start":12,"column_end":14},"name":"eq","qualname":"<Matrix<N, R, C, S>>::eq","value":"fn <R2, C2, SB> (&self, other: &Matrix<N, R2, C2, SB>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are exactly equal.\n","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are exactly equal.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":343489,"byte_end":343542,"line_start":330,"line_end":330,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":343547,"byte_end":343556,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":344008,"byte_end":344018,"line_start":346,"line_end":346,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Matrix<N, R, C, S>>::into_owned","value":"fn (self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":343932,"byte_end":343982,"line_start":344,"line_end":344,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":343987,"byte_end":343996,"line_start":345,"line_end":345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":344413,"byte_end":344427,"line_start":356,"line_end":356,"column_start":12,"column_end":26},"name":"into_owned_sum","qualname":"<Matrix<N, R, C, S>>::into_owned_sum","value":"fn <R2, C2> (self) -> MatrixSum<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":344241,"byte_end":344332,"line_start":353,"line_end":353,"column_start":5,"column_end":96}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":344337,"byte_end":344387,"line_start":354,"line_end":354,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":344392,"byte_end":344401,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":345244,"byte_end":345255,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Matrix<N, R, C, S>>::clone_owned","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix to one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this matrix to one that owns its data.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":345169,"byte_end":345218,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":345223,"byte_end":345232,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":345568,"byte_end":345583,"line_start":388,"line_end":388,"column_start":12,"column_end":27},"name":"clone_owned_sum","qualname":"<Matrix<N, R, C, S>>::clone_owned_sum","value":"fn <R2, C2> (&self) -> MatrixSum<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Clones this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":345395,"byte_end":345487,"line_start":385,"line_end":385,"column_start":5,"column_end":97}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":345492,"byte_end":345542,"line_start":386,"line_end":386,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":345547,"byte_end":345556,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2699},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":346498,"byte_end":346501,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"map","qualname":"<Matrix<N, R, C, S>>::map","value":"fn <N2, F> (&self, mut f: F) -> MatrixMN<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":346391,"byte_end":346472,"line_start":414,"line_end":414,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":346477,"byte_end":346486,"line_start":415,"line_end":415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":347247,"byte_end":347264,"line_start":437,"line_end":437,"column_start":12,"column_end":29},"name":"map_with_location","qualname":"<Matrix<N, R, C, S>>::map_with_location","value":"fn <N2, F> (&self, mut f: F) -> MatrixMN<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,\n `f` also gets passed the row and column index, i.e. `f(row, col, value)`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":347044,"byte_end":347139,"line_start":434,"line_end":434,"column_start":5,"column_end":100}},{"value":"/ `f` also gets passed the row and column index, i.e. `f(row, col, value)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":347144,"byte_end":347221,"line_start":435,"line_end":435,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":347226,"byte_end":347235,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":347991,"byte_end":347998,"line_start":463,"line_end":463,"column_start":12,"column_end":19},"name":"zip_map","qualname":"<Matrix<N, R, C, S>>::zip_map","value":"fn <N2, N3, S2, F> (&self, rhs: &Matrix<N2, R, C, S2>, mut f: F) -> MatrixMN<N3, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `rhs`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":347863,"byte_end":347950,"line_start":460,"line_end":460,"column_start":5,"column_end":92}},{"value":"/ `rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":347955,"byte_end":347965,"line_start":461,"line_end":461,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":347970,"byte_end":347979,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":349024,"byte_end":349035,"line_start":496,"line_end":496,"column_start":12,"column_end":23},"name":"zip_zip_map","qualname":"<Matrix<N, R, C, S>>::zip_zip_map","value":"fn <N2, N3, N4, S2, S3, F> (&self, b: &Matrix<N2, R, C, S2>, c: &Matrix<N3, R, C, S3>, mut f: F) -> MatrixMN<N4, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `b`, and `c`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":348889,"byte_end":348976,"line_start":493,"line_end":493,"column_start":5,"column_end":92}},{"value":"/ `b`, and `c`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":348981,"byte_end":348998,"line_start":494,"line_end":494,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":349003,"byte_end":349012,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":350246,"byte_end":350250,"line_start":537,"line_end":537,"column_start":12,"column_end":16},"name":"fold","qualname":"<Matrix<N, R, C, S>>::fold","value":"fn <Acc> (&self, init: Acc, mut f: impl FnMut(Acc, N) -> Acc) -> Acc","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each entry of `self`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each entry of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":350171,"byte_end":350220,"line_start":535,"line_end":535,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":350225,"byte_end":350234,"line_start":536,"line_end":536,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":350756,"byte_end":350764,"line_start":556,"line_end":556,"column_start":12,"column_end":20},"name":"zip_fold","qualname":"<Matrix<N, R, C, S>>::zip_fold","value":"fn <N2, R2, C2, S2, Acc> (&self, rhs: &Matrix<N2, R2, C2, S2>, init: Acc, mut f: impl FnMut(Acc, N, N2) -> Acc) -> Acc","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each pairs of entries from `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each pairs of entries from `self` and `rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":350658,"byte_end":350730,"line_start":554,"line_end":554,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":350735,"byte_end":350744,"line_start":555,"line_end":555,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":351726,"byte_end":351738,"line_start":588,"line_end":588,"column_start":12,"column_end":24},"name":"transpose_to","qualname":"<Matrix<N, R, C, S>>::transpose_to","value":"fn <R2, C2, SB> (&self, out: &mut Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Transposes `self` and store the result into `out`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":351646,"byte_end":351700,"line_start":586,"line_end":586,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":351705,"byte_end":351714,"line_start":587,"line_end":587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":352424,"byte_end":352433,"line_start":613,"line_end":613,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Matrix<N, R, C, S>>::transpose","value":"fn (&self) -> MatrixMN<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.\n","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":352376,"byte_end":352398,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":352403,"byte_end":352412,"line_start":612,"line_end":612,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":352889,"byte_end":352897,"line_start":629,"line_end":629,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Matrix<N, R, C, S>>::iter_mut","value":"fn (&mut self) -> MatrixIterMut<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix coordinates.\n","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":352810,"byte_end":352863,"line_start":627,"line_end":627,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":352868,"byte_end":352877,"line_start":628,"line_end":628,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353184,"byte_end":353194,"line_start":638,"line_end":638,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Matrix<N, R, C, S>>::as_mut_ptr","value":"fn (&mut self) -> *mut N","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the start of the matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":352994,"byte_end":353051,"line_start":633,"line_end":633,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353056,"byte_end":353059,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353064,"byte_end":353136,"line_start":635,"line_end":635,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353141,"byte_end":353158,"line_start":636,"line_end":636,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353163,"byte_end":353172,"line_start":637,"line_end":637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353749,"byte_end":353761,"line_start":658,"line_end":658,"column_start":12,"column_end":24},"name":"row_iter_mut","qualname":"<Matrix<N, R, C, S>>::row_iter_mut","value":"fn (&mut self) -> RowIterMut<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix rows.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353257,"byte_end":353303,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353308,"byte_end":353311,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353316,"byte_end":353329,"line_start":644,"line_end":644,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353334,"byte_end":353341,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353346,"byte_end":353376,"line_start":646,"line_end":646,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353381,"byte_end":353420,"line_start":647,"line_end":647,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353425,"byte_end":353465,"line_start":648,"line_end":648,"column_start":5,"column_end":45}},{"value":"/ for (i, mut row) in a.row_iter_mut().enumerate() {","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353470,"byte_end":353524,"line_start":649,"line_end":649,"column_start":5,"column_end":59}},{"value":"/     row *= (i + 1) * 10;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353529,"byte_end":353557,"line_start":650,"line_end":650,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353562,"byte_end":353567,"line_start":651,"line_end":651,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353572,"byte_end":353575,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 20, 30,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353580,"byte_end":353625,"line_start":653,"line_end":653,"column_start":5,"column_end":50}},{"value":"/                               80, 100, 120);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353630,"byte_end":353678,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353683,"byte_end":353711,"line_start":655,"line_end":655,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353716,"byte_end":353723,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353728,"byte_end":353737,"line_start":657,"line_end":657,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354340,"byte_end":354355,"line_start":678,"line_end":678,"column_start":12,"column_end":27},"name":"column_iter_mut","qualname":"<Matrix<N, R, C, S>>::column_iter_mut","value":"fn (&mut self) -> ColumnIterMut<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix columns.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353842,"byte_end":353891,"line_start":662,"line_end":662,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353896,"byte_end":353899,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353904,"byte_end":353917,"line_start":664,"line_end":664,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353922,"byte_end":353929,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353934,"byte_end":353964,"line_start":666,"line_end":666,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":353969,"byte_end":354008,"line_start":667,"line_end":667,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354013,"byte_end":354053,"line_start":668,"line_end":668,"column_start":5,"column_end":45}},{"value":"/ for (i, mut col) in a.column_iter_mut().enumerate() {","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354058,"byte_end":354115,"line_start":669,"line_end":669,"column_start":5,"column_end":62}},{"value":"/     col *= (i + 1) * 10;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354120,"byte_end":354148,"line_start":670,"line_end":670,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354153,"byte_end":354158,"line_start":671,"line_end":671,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354163,"byte_end":354166,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 40, 90,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354171,"byte_end":354216,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/                               40, 100, 180);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354221,"byte_end":354269,"line_start":674,"line_end":674,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354274,"byte_end":354302,"line_start":675,"line_end":675,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354307,"byte_end":354314,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354319,"byte_end":354328,"line_start":677,"line_end":677,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354520,"byte_end":354534,"line_start":684,"line_end":684,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Matrix<N, R, C, S>>::swap_unchecked","value":"fn (&mut self, row_cols1: (usize, usize), row_cols2: (usize, usize)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354442,"byte_end":354487,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354492,"byte_end":354501,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354878,"byte_end":354882,"line_start":692,"line_end":692,"column_start":12,"column_end":16},"name":"swap","qualname":"<Matrix<N, R, C, S>>::swap","value":"fn (&mut self, row_cols1: (usize, usize), row_cols2: (usize, usize)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries.\n","sig":null,"attributes":[{"value":"/ Swaps two entries.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354830,"byte_end":354852,"line_start":690,"line_end":690,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":354857,"byte_end":354866,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":355558,"byte_end":355573,"line_start":709,"line_end":709,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Matrix<N, R, C, S>>::copy_from_slice","value":"fn (&mut self, slice: &[N]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of a slice. Both must hold the same number of elements.","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of a slice. Both must hold the same number of elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":355345,"byte_end":355439,"line_start":705,"line_end":705,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":355444,"byte_end":355447,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ The components of the slice are assumed to be ordered in column-major order.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":355452,"byte_end":355532,"line_start":707,"line_end":707,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":355537,"byte_end":355546,"line_start":708,"line_end":708,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":356135,"byte_end":356144,"line_start":728,"line_end":728,"column_start":12,"column_end":21},"name":"copy_from","qualname":"<Matrix<N, R, C, S>>::copy_from","value":"fn <R2, C2, SB> (&mut self, other: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of another one. Both must have the same shape.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of another one. Both must have the same shape.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":356024,"byte_end":356109,"line_start":726,"line_end":726,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":356114,"byte_end":356123,"line_start":727,"line_end":727,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":356829,"byte_end":356841,"line_start":751,"line_end":751,"column_start":12,"column_end":24},"name":"tr_copy_from","qualname":"<Matrix<N, R, C, S>>::tr_copy_from","value":"fn <R2, C2, SB> (&mut self, other: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of the transpose another one.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of the transpose another one.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":356735,"byte_end":356803,"line_start":749,"line_end":749,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":356808,"byte_end":356817,"line_start":750,"line_end":750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":357653,"byte_end":357663,"line_start":776,"line_end":776,"column_start":12,"column_end":22},"name":"apply_into","qualname":"<Matrix<N, R, C, S>>::apply_into","value":"fn <F> (mut self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `self` with each of its components replaced by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Returns `self` with each of its components replaced by the result of a closure `f` applied on it.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":357526,"byte_end":357627,"line_start":774,"line_end":774,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":357632,"byte_end":357641,"line_start":775,"line_end":775,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":357863,"byte_end":357868,"line_start":783,"line_end":783,"column_start":12,"column_end":17},"name":"apply","qualname":"<Matrix<N, R, C, S>>::apply","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on it.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":357754,"byte_end":357837,"line_start":781,"line_end":781,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":357842,"byte_end":357851,"line_start":782,"line_end":782,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":358353,"byte_end":358362,"line_start":799,"line_end":799,"column_start":12,"column_end":21},"name":"zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_apply","value":"fn <N2, R2, C2, S2> (&mut self, rhs: &Matrix<N2, R2, C2, S2>, mut f: impl FnMut(N, N2) -> N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `rhs`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":358186,"byte_end":358280,"line_start":796,"line_end":796,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":358285,"byte_end":358327,"line_start":797,"line_end":797,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":358332,"byte_end":358341,"line_start":798,"line_end":798,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":359304,"byte_end":359317,"line_start":827,"line_end":827,"column_start":12,"column_end":25},"name":"zip_zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_zip_apply","value":"fn <N2, R2, C2, S2, N3, R3, C3, S3> (&mut self, b: &Matrix<N2, R2, C2, S2>, c: &Matrix<N3, R3, C3, S3>, mut f: impl FnMut(N, N2, N3) -> N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `b` and `c`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":359131,"byte_end":359225,"line_start":824,"line_end":824,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `b` and `c`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":359230,"byte_end":359278,"line_start":825,"line_end":825,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":359283,"byte_end":359292,"line_start":826,"line_end":826,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":360697,"byte_end":360711,"line_start":865,"line_end":865,"column_start":19,"column_end":33},"name":"vget_unchecked","qualname":"<Vector<N, D, S>>::vget_unchecked","value":"fn (&self, i: usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":360578,"byte_end":360664,"line_start":863,"line_end":863,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":360669,"byte_end":360678,"line_start":864,"line_end":864,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361092,"byte_end":361110,"line_start":875,"line_end":875,"column_start":19,"column_end":37},"name":"vget_unchecked_mut","qualname":"<Vector<N, D, S>>::vget_unchecked_mut","value":"fn (&mut self, i: usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":360965,"byte_end":361059,"line_start":873,"line_end":873,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361064,"byte_end":361073,"line_start":874,"line_end":874,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361507,"byte_end":361515,"line_start":885,"line_end":885,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Matrix<N, R, C, S>>::as_slice","value":"fn (&self) -> &[N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361397,"byte_end":361481,"line_start":883,"line_end":883,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361486,"byte_end":361495,"line_start":884,"line_end":884,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361780,"byte_end":361792,"line_start":893,"line_end":893,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<Matrix<N, R, C, S>>::as_mut_slice","value":"fn (&mut self) -> &mut [N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361662,"byte_end":361754,"line_start":891,"line_end":891,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361759,"byte_end":361768,"line_start":892,"line_end":892,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361994,"byte_end":362007,"line_start":900,"line_end":900,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Matrix<N, D, D, S>>::transpose_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transposes the square matrix `self` in-place.\n","sig":null,"attributes":[{"value":"/ Transposes the square matrix `self` in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361933,"byte_end":361982,"line_start":899,"line_end":899,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":362530,"byte_end":362540,"line_start":919,"line_end":919,"column_start":12,"column_end":22},"name":"adjoint_to","qualname":"<Matrix<N, R, C, S>>::adjoint_to","value":"fn <R2, C2, SB> (&self, out: &mut Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":362413,"byte_end":362504,"line_start":917,"line_end":917,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":362509,"byte_end":362518,"line_start":918,"line_end":918,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":363268,"byte_end":363275,"line_start":944,"line_end":944,"column_start":12,"column_end":19},"name":"adjoint","qualname":"<Matrix<N, R, C, S>>::adjoint","value":"fn (&self) -> MatrixMN<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The adjoint (aka. conjugate-transpose) of `self`.\n","sig":null,"attributes":[{"value":"/ The adjoint (aka. conjugate-transpose) of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":363189,"byte_end":363242,"line_start":942,"line_end":942,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":363247,"byte_end":363256,"line_start":943,"line_end":943,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":363754,"byte_end":363776,"line_start":959,"line_end":959,"column_start":12,"column_end":34},"name":"conjugate_transpose_to","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose_to","value":"fn <R2, C2, SB> (&self, out: &mut Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Takes the conjugate and transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the conjugate and transposes `self` and store the result into `out`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":363590,"byte_end":363668,"line_start":956,"line_end":956,"column_start":5,"column_end":83}},{"value":"deprecated(note = \"Renamed `self.adjoint_to(out)`.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":363673,"byte_end":363728,"line_start":957,"line_end":957,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":363733,"byte_end":363742,"line_start":958,"line_end":958,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364175,"byte_end":364194,"line_start":972,"line_end":972,"column_start":12,"column_end":31},"name":"conjugate_transpose","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose","value":"fn (&self) -> MatrixMN<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate transposition of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate transposition of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364053,"byte_end":364095,"line_start":969,"line_end":969,"column_start":5,"column_end":47}},{"value":"deprecated(note = \"Renamed `self.adjoint()`.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364100,"byte_end":364149,"line_start":970,"line_end":970,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364154,"byte_end":364163,"line_start":971,"line_end":971,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364364,"byte_end":364373,"line_start":979,"line_end":979,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Matrix<N, R, C, S>>::conjugate","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364310,"byte_end":364338,"line_start":977,"line_end":977,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364343,"byte_end":364352,"line_start":978,"line_end":978,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364602,"byte_end":364609,"line_start":986,"line_end":986,"column_start":12,"column_end":19},"name":"unscale","qualname":"<Matrix<N, R, C, S>>::unscale","value":"fn (&self, real: N::RealField) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364502,"byte_end":364576,"line_start":984,"line_end":984,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364581,"byte_end":364590,"line_start":985,"line_end":985,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364863,"byte_end":364868,"line_start":993,"line_end":993,"column_start":12,"column_end":17},"name":"scale","qualname":"<Matrix<N, R, C, S>>::scale","value":"fn (&self, real: N::RealField) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364760,"byte_end":364837,"line_start":991,"line_end":991,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":364842,"byte_end":364851,"line_start":992,"line_end":992,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365193,"byte_end":365206,"line_start":1002,"line_end":1002,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Matrix<N, R, C, S>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of the complex matrix `self` computed in-place.\n","sig":null,"attributes":[{"value":"/ The conjugate of the complex matrix `self` computed in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365102,"byte_end":365167,"line_start":1000,"line_end":1000,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365172,"byte_end":365181,"line_start":1001,"line_end":1001,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365369,"byte_end":365380,"line_start":1008,"line_end":1008,"column_start":12,"column_end":23},"name":"unscale_mut","qualname":"<Matrix<N, R, C, S>>::unscale_mut","value":"fn (&mut self, real: N::RealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365269,"byte_end":365343,"line_start":1006,"line_end":1006,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365348,"byte_end":365357,"line_start":1007,"line_end":1007,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365568,"byte_end":365577,"line_start":1014,"line_end":1014,"column_start":12,"column_end":21},"name":"scale_mut","qualname":"<Matrix<N, R, C, S>>::scale_mut","value":"fn (&mut self, real: N::RealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365465,"byte_end":365542,"line_start":1012,"line_end":1012,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365547,"byte_end":365556,"line_start":1013,"line_end":1013,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365841,"byte_end":365864,"line_start":1022,"line_end":1022,"column_start":12,"column_end":35},"name":"conjugate_transform_mut","qualname":"<Matrix<N, D, D, S>>::conjugate_transform_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint.\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365737,"byte_end":365768,"line_start":1020,"line_end":1020,"column_start":5,"column_end":36}},{"value":"deprecated(note = \"Renamed to `self.adjoint_mut()`.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365773,"byte_end":365829,"line_start":1021,"line_end":1021,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365986,"byte_end":365997,"line_start":1027,"line_end":1027,"column_start":12,"column_end":23},"name":"adjoint_mut","qualname":"<Matrix<N, D, D, S>>::adjoint_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint (aka. conjugate-transpose).\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint (aka. conjugate-transpose).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365916,"byte_end":365974,"line_start":1026,"line_end":1026,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":366913,"byte_end":366921,"line_start":1058,"line_end":1058,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SquareMatrix<N, D, S>>::diagonal","value":"fn (&self) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal of this matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":366855,"byte_end":366887,"line_start":1056,"line_end":1056,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":366892,"byte_end":366901,"line_start":1057,"line_end":1057,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":367239,"byte_end":367251,"line_start":1067,"line_end":1067,"column_start":12,"column_end":24},"name":"map_diagonal","qualname":"<SquareMatrix<N, D, S>>::map_diagonal","value":"fn <N2> (&self, mut f: impl FnMut(N) -> N2) -> VectorN<N2, D>","parent":null,"children":[],"decl_id":null,"docs":" Apply the given function to this matrix's diagonal and returns it.","sig":null,"attributes":[{"value":"/ Apply the given function to this matrix's diagonal and returns it.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":367040,"byte_end":367110,"line_start":1063,"line_end":1063,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":367115,"byte_end":367118,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ This is a more efficient version of `self.diagonal().map(f)` since this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":367123,"byte_end":367198,"line_start":1065,"line_end":1065,"column_start":5,"column_end":80}},{"value":"/ allocates only once.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":367203,"byte_end":367227,"line_start":1066,"line_end":1066,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":367896,"byte_end":367901,"line_start":1088,"line_end":1088,"column_start":12,"column_end":17},"name":"trace","qualname":"<SquareMatrix<N, D, S>>::trace","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes a trace of a square matrix, i.e., the sum of its diagonal elements.\n","sig":null,"attributes":[{"value":"/ Computes a trace of a square matrix, i.e., the sum of its diagonal elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":367790,"byte_end":367870,"line_start":1086,"line_end":1086,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":367875,"byte_end":367884,"line_start":1087,"line_end":1087,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":368435,"byte_end":368449,"line_start":1109,"line_end":1109,"column_start":12,"column_end":26},"name":"symmetric_part","qualname":"<SquareMatrix<N, D, S>>::symmetric_part","value":"fn (&self) -> MatrixMN<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.\n","sig":null,"attributes":[{"value":"/ The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":368335,"byte_end":368409,"line_start":1107,"line_end":1107,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":368414,"byte_end":368423,"line_start":1108,"line_end":1108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":368849,"byte_end":368863,"line_start":1120,"line_end":1120,"column_start":12,"column_end":26},"name":"hermitian_part","qualname":"<SquareMatrix<N, D, S>>::hermitian_part","value":"fn (&self) -> MatrixMN<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.\n","sig":null,"attributes":[{"value":"/ The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":368751,"byte_end":368823,"line_start":1118,"line_end":1118,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":368828,"byte_end":368837,"line_start":1119,"line_end":1119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":369439,"byte_end":369453,"line_start":1136,"line_end":1136,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Matrix<N, D, D, S>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and\n and setting the diagonal element to `1`.\n","sig":null,"attributes":[{"value":"/ Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":369270,"byte_end":369364,"line_start":1133,"line_end":1133,"column_start":5,"column_end":99}},{"value":"/ and setting the diagonal element to `1`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":369369,"byte_end":369413,"line_start":1134,"line_end":1134,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":369418,"byte_end":369427,"line_start":1135,"line_end":1135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":370125,"byte_end":370139,"line_start":1151,"line_end":1151,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Vector<N, D, S>>::to_homogeneous","value":"fn (&self) -> VectorN<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the coordinates in projective space of this vector, i.e., appends a `0` to its\n coordinates.\n","sig":null,"attributes":[{"value":"/ Computes the coordinates in projective space of this vector, i.e., appends a `0` to its","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":369987,"byte_end":370078,"line_start":1148,"line_end":1148,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":370083,"byte_end":370099,"line_start":1149,"line_end":1149,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":370104,"byte_end":370113,"line_start":1150,"line_end":1150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":370462,"byte_end":370478,"line_start":1159,"line_end":1159,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Vector<N, D, S>>::from_homogeneous","value":"fn <SB> (v: Vector<N, DimSum<D, U1>, SB>) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of\n `self`. Returns `None` if this last component is not zero.\n","sig":null,"attributes":[{"value":"/ Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":370274,"byte_end":370369,"line_start":1156,"line_end":1156,"column_start":5,"column_end":100}},{"value":"/ `self`. Returns `None` if this last component is not zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":370374,"byte_end":370436,"line_start":1157,"line_end":1157,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":370441,"byte_end":370450,"line_start":1158,"line_end":1158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":371046,"byte_end":371050,"line_start":1176,"line_end":1176,"column_start":12,"column_end":16},"name":"push","qualname":"<Vector<N, D, S>>::push","value":"fn (&self, element: N) -> VectorN<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new vector of higher dimension by appending `element` to the end of `self`.\n","sig":null,"attributes":[{"value":"/ Constructs a new vector of higher dimension by appending `element` to the end of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":370928,"byte_end":371020,"line_start":1174,"line_end":1174,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":371025,"byte_end":371034,"line_start":1175,"line_end":1175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":378409,"byte_end":378413,"line_start":1436,"line_end":1436,"column_start":12,"column_end":16},"name":"perp","qualname":"<Matrix<N, R, C, S>>::perp","value":"fn <R2, C2, SB> (&self, b: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.\n","sig":null,"attributes":[{"value":"/ The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":378293,"byte_end":378383,"line_start":1434,"line_end":1434,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":378388,"byte_end":378397,"line_start":1435,"line_end":1435,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":379269,"byte_end":379274,"line_start":1460,"line_end":1460,"column_start":12,"column_end":17},"name":"cross","qualname":"<Matrix<N, R, C, S>>::cross","value":"fn <R2, C2, SB> (&self, b: &Matrix<N, R2, C2, SB>) -> MatrixCross<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" The 3D cross product between two vectors.","sig":null,"attributes":[{"value":"/ The 3D cross product between two vectors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":379026,"byte_end":379071,"line_start":1455,"line_end":1455,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":379076,"byte_end":379079,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ Panics if the shape is not 3D vector. In the future, this will be implemented only for","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":379084,"byte_end":379174,"line_start":1457,"line_end":1457,"column_start":5,"column_end":95}},{"value":"/ dynamically-sized matrices and statically-sized 3D matrices.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":379179,"byte_end":379243,"line_start":1458,"line_end":1458,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":379248,"byte_end":379257,"line_start":1459,"line_end":1459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":381814,"byte_end":381826,"line_start":1529,"line_end":1529,"column_start":12,"column_end":24},"name":"cross_matrix","qualname":"<Vector<N, U3, S>>::cross_matrix","value":"fn (&self) -> MatrixN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.\n","sig":null,"attributes":[{"value":"/ Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":381697,"byte_end":381788,"line_start":1527,"line_end":1527,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":381793,"byte_end":381802,"line_start":1528,"line_end":1528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":382255,"byte_end":382260,"line_start":1547,"line_end":1547,"column_start":12,"column_end":17},"name":"angle","qualname":"<Matrix<N, R, C, S>>::angle","value":"fn <R2, C2, SB> (&self, other: &Matrix<N, R2, C2, SB>) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The smallest angle between two vectors.\n","sig":null,"attributes":[{"value":"/ The smallest angle between two vectors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":382186,"byte_end":382229,"line_start":1545,"line_end":1545,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":382234,"byte_end":382243,"line_start":1546,"line_end":1546,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383496,"byte_end":383500,"line_start":1587,"line_end":1587,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector<N, D, S>>::lerp","value":"fn <S2> (&self, rhs: &Vector<N, D, S2>, t: N) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","sig":null,"attributes":[{"value":"/ Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383046,"byte_end":383159,"line_start":1575,"line_end":1575,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383164,"byte_end":383167,"line_start":1576,"line_end":1576,"column_start":5,"column_end":8}},{"value":"/ The value for a is not restricted to the range `[0, 1]`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383172,"byte_end":383232,"line_start":1577,"line_end":1577,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383237,"byte_end":383240,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383245,"byte_end":383260,"line_start":1579,"line_end":1579,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383265,"byte_end":383268,"line_start":1580,"line_end":1580,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383273,"byte_end":383280,"line_start":1581,"line_end":1581,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383285,"byte_end":383313,"line_start":1582,"line_end":1582,"column_start":5,"column_end":33}},{"value":"/ let x = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383318,"byte_end":383358,"line_start":1583,"line_end":1583,"column_start":5,"column_end":45}},{"value":"/ let y = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383363,"byte_end":383406,"line_start":1584,"line_end":1584,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(x.lerp(&y, 0.1), Vector3::new(1.9, 3.8, 5.7));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383411,"byte_end":383472,"line_start":1585,"line_end":1585,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383477,"byte_end":383484,"line_start":1586,"line_end":1586,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384315,"byte_end":384320,"line_start":1610,"line_end":1610,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Unit<Vector<N, D, S>>>::slerp","value":"fn <S2> (&self, rhs: &Unit<Vector<N, D, S2>>, t: N::RealField) -> Unit<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383799,"byte_end":383872,"line_start":1596,"line_end":1596,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383877,"byte_end":383880,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383885,"byte_end":383900,"line_start":1598,"line_end":1598,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383905,"byte_end":383908,"line_start":1599,"line_end":1599,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383913,"byte_end":383920,"line_start":1600,"line_end":1600,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::geometry::UnitQuaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383925,"byte_end":383970,"line_start":1601,"line_end":1601,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383975,"byte_end":383978,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(std::f32::consts::FRAC_PI_4, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383983,"byte_end":384069,"line_start":1603,"line_end":1603,"column_start":5,"column_end":91}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-std::f32::consts::PI, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384074,"byte_end":384154,"line_start":1604,"line_end":1604,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384159,"byte_end":384162,"line_start":1605,"line_end":1605,"column_start":5,"column_end":8}},{"value":"/ let q = q1.slerp(&q2, 1.0 / 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384167,"byte_end":384204,"line_start":1606,"line_end":1606,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384209,"byte_end":384212,"line_start":1607,"line_end":1607,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.euler_angles(), (std::f32::consts::FRAC_PI_2, 0.0, 0.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384217,"byte_end":384291,"line_start":1608,"line_end":1608,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384296,"byte_end":384303,"line_start":1609,"line_end":1609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384991,"byte_end":385000,"line_start":1627,"line_end":1627,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<Unit<Vector<N, D, S>>>::try_slerp","value":"fn <S2> (&self, rhs: &Unit<Vector<N, D, S2>>, t: N::RealField, epsilon: N::RealField) -> Option<Unit<VectorN<N, D>>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384741,"byte_end":384814,"line_start":1623,"line_end":1623,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384819,"byte_end":384822,"line_start":1624,"line_end":1624,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the two vectors are almost collinear and with opposite direction","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384827,"byte_end":384913,"line_start":1625,"line_end":1625,"column_start":5,"column_end":91}},{"value":"/ (in this case, there is an infinity of possible results).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":384918,"byte_end":384979,"line_start":1626,"line_end":1626,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3163},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":400663,"byte_end":400675,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"ArrayStorage","qualname":"::base::array_storage::ArrayStorage","value":"ArrayStorage {  }","parent":null,"children":[{"krate":0,"index":3167}],"decl_id":null,"docs":" A array-based statically sized matrix data storage.\n","sig":null,"attributes":[{"value":"/ A array-based statically sized matrix data storage.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":400585,"byte_end":400640,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":400641,"byte_end":400651,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":3168},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":400944,"byte_end":400955,"line_start":49,"line_end":49,"column_start":10,"column_end":21},"name":"MatrixArray","qualname":"::base::array_storage::MatrixArray","value":"ArrayStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [ArrayStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `ArrayStorage`\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":400856,"byte_end":400903,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ Renamed to [ArrayStorage].","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":400904,"byte_end":400934,"line_start":48,"line_end":48,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":16836},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":412314,"byte_end":412326,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"name":"SliceStorage","qualname":"::base::matrix_slice::SliceStorage","value":"SliceStorage {  }","parent":null,"children":[{"krate":0,"index":16843},{"krate":0,"index":16844},{"krate":0,"index":16845},{"krate":0,"index":16846}],"decl_id":null,"docs":"A matrix data storage for a matrix slice. Only contains an internal reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16892},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":412578,"byte_end":412593,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"name":"SliceStorageMut","qualname":"::base::matrix_slice::SliceStorageMut","value":"SliceStorageMut {  }","parent":null,"children":[{"krate":0,"index":16899},{"krate":0,"index":16900},{"krate":0,"index":16901},{"krate":0,"index":16902}],"decl_id":null,"docs":"A mutable matrix data storage for mutable matrix slice. Only contains an internal mutable reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":16943},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434547,"byte_end":434558,"line_start":621,"line_end":621,"column_start":19,"column_end":30},"name":"MatrixSlice","qualname":"::base::matrix_slice::MatrixSlice","value":"Matrix<N, R, C, SliceStorage<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A matrix slice.\n","sig":null,"attributes":[{"value":"/ A matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":418469,"byte_end":418488,"line_start":260,"line_end":260,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":16955},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434624,"byte_end":434627,"line_start":622,"line_end":622,"column_start":6,"column_end":9},"name":"row","qualname":"<Matrix<N, R, C, S>>::row","value":"fn (self: &Self, i: usize) -> MatrixSlice<N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":418808,"byte_end":418867,"line_start":270,"line_end":270,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":418880,"byte_end":418889,"line_start":271,"line_end":271,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16956},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434634,"byte_end":434642,"line_start":623,"line_end":623,"column_start":6,"column_end":14},"name":"row_part","qualname":"<Matrix<N, R, C, S>>::row_part","value":"fn (self: &Self, i: usize, n: usize) -> MatrixSlice<N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419054,"byte_end":419139,"line_start":276,"line_end":276,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419152,"byte_end":419161,"line_start":277,"line_end":277,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16957},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434649,"byte_end":434653,"line_start":624,"line_end":624,"column_start":6,"column_end":10},"name":"rows","qualname":"<Matrix<N, R, C, S>>::rows","value":"fn (self: &Self, first_row: usize, nrows: usize) -> MatrixSlice<N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419372,"byte_end":419428,"line_start":282,"line_end":282,"column_start":13,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419441,"byte_end":419450,"line_start":283,"line_end":283,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16958},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434660,"byte_end":434674,"line_start":625,"line_end":625,"column_start":6,"column_end":20},"name":"rows_with_step","qualname":"<Matrix<N, R, C, S>>::rows_with_step","value":"fn (self: &Self, first_row: usize, nrows: usize, step: usize) -> MatrixSlice<N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419685,"byte_end":419772,"line_start":290,"line_end":290,"column_start":13,"column_end":100}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419785,"byte_end":419794,"line_start":291,"line_end":291,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16959},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434681,"byte_end":434691,"line_start":626,"line_end":626,"column_start":6,"column_end":16},"name":"fixed_rows","qualname":"<Matrix<N, R, C, S>>::fixed_rows","value":"fn <RSlice> (self: &Self, first_row: usize) -> MatrixSlice<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420065,"byte_end":420137,"line_start":298,"line_end":298,"column_start":13,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420150,"byte_end":420159,"line_start":299,"line_end":299,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16961},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434698,"byte_end":434718,"line_start":627,"line_end":627,"column_start":6,"column_end":26},"name":"fixed_rows_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step","value":"fn <RSlice> (self: &Self, first_row: usize, step: usize) -> MatrixSlice<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420397,"byte_end":420482,"line_start":306,"line_end":306,"column_start":13,"column_end":98}},{"value":"/ rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420495,"byte_end":420504,"line_start":307,"line_end":307,"column_start":13,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420517,"byte_end":420526,"line_start":308,"line_end":308,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16963},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434725,"byte_end":434737,"line_start":628,"line_end":628,"column_start":6,"column_end":18},"name":"rows_generic","qualname":"<Matrix<N, R, C, S>>::rows_generic","value":"fn <RSlice> (self: &Self, row_start: usize, nrows: RSlice) -> MatrixSlice<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420800,"byte_end":420879,"line_start":315,"line_end":315,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420892,"byte_end":420952,"line_start":316,"line_end":316,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420965,"byte_end":420974,"line_start":317,"line_end":317,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16965},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434744,"byte_end":434766,"line_start":629,"line_end":629,"column_start":6,"column_end":28},"name":"rows_generic_with_step","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step","value":"fn <RSlice> (self: &Self, row_start: usize, nrows: RSlice, step: usize) -> MatrixSlice<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":421566,"byte_end":421645,"line_start":332,"line_end":332,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":421658,"byte_end":421718,"line_start":333,"line_end":333,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":421731,"byte_end":421740,"line_start":334,"line_end":334,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16967},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434773,"byte_end":434779,"line_start":630,"line_end":630,"column_start":6,"column_end":12},"name":"column","qualname":"<Matrix<N, R, C, S>>::column","value":"fn (self: &Self, i: usize) -> MatrixSlice<N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":422648,"byte_end":422710,"line_start":357,"line_end":357,"column_start":13,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":422723,"byte_end":422732,"line_start":358,"line_end":358,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16968},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434786,"byte_end":434797,"line_start":631,"line_end":631,"column_start":6,"column_end":17},"name":"column_part","qualname":"<Matrix<N, R, C, S>>::column_part","value":"fn (self: &Self, i: usize, n: usize) -> MatrixSlice<N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":422903,"byte_end":422991,"line_start":363,"line_end":363,"column_start":13,"column_end":101}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423004,"byte_end":423013,"line_start":364,"line_end":364,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16969},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434804,"byte_end":434811,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"name":"columns","qualname":"<Matrix<N, R, C, S>>::columns","value":"fn (self: &Self, first_col: usize, ncols: usize) -> MatrixSlice<N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423227,"byte_end":423286,"line_start":369,"line_end":369,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423299,"byte_end":423308,"line_start":370,"line_end":370,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16970},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434818,"byte_end":434835,"line_start":633,"line_end":633,"column_start":6,"column_end":23},"name":"columns_with_step","qualname":"<Matrix<N, R, C, S>>::columns_with_step","value":"fn (self: &Self, first_col: usize, ncols: usize, step: usize) -> MatrixSlice<N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423549,"byte_end":423633,"line_start":377,"line_end":377,"column_start":13,"column_end":97}},{"value":"/ columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423646,"byte_end":423658,"line_start":378,"line_end":378,"column_start":13,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423671,"byte_end":423680,"line_start":379,"line_end":379,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16971},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434842,"byte_end":434855,"line_start":634,"line_end":634,"column_start":6,"column_end":19},"name":"fixed_columns","qualname":"<Matrix<N, R, C, S>>::fixed_columns","value":"fn <CSlice> (self: &Self, first_col: usize) -> MatrixSlice<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423957,"byte_end":424032,"line_start":386,"line_end":386,"column_start":13,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424045,"byte_end":424054,"line_start":387,"line_end":387,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16973},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434862,"byte_end":434885,"line_start":635,"line_end":635,"column_start":6,"column_end":29},"name":"fixed_columns_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step","value":"fn <CSlice> (self: &Self, first_col: usize, step: usize) -> MatrixSlice<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424298,"byte_end":424379,"line_start":394,"line_end":394,"column_start":13,"column_end":94}},{"value":"/ `step` columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424392,"byte_end":424411,"line_start":395,"line_end":395,"column_start":13,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424424,"byte_end":424433,"line_start":396,"line_end":396,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16975},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434892,"byte_end":434907,"line_start":636,"line_end":636,"column_start":6,"column_end":21},"name":"columns_generic","qualname":"<Matrix<N, R, C, S>>::columns_generic","value":"fn <CSlice> (self: &Self, first_col: usize, ncols: CSlice) -> MatrixSlice<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424713,"byte_end":424799,"line_start":403,"line_end":403,"column_start":13,"column_end":99}},{"value":"/ known at compile-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424812,"byte_end":424838,"line_start":404,"line_end":404,"column_start":13,"column_end":39}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424851,"byte_end":424860,"line_start":405,"line_end":405,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16977},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434914,"byte_end":434939,"line_start":637,"line_end":637,"column_start":6,"column_end":31},"name":"columns_generic_with_step","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step","value":"fn <CSlice> (self: &Self, first_col: usize, ncols: CSlice, step: usize) -> MatrixSlice<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":425453,"byte_end":425541,"line_start":420,"line_end":420,"column_start":13,"column_end":101}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":425554,"byte_end":425601,"line_start":421,"line_end":421,"column_start":13,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":425614,"byte_end":425623,"line_start":422,"line_end":422,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16979},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434946,"byte_end":434951,"line_start":638,"line_end":638,"column_start":6,"column_end":11},"name":"slice","qualname":"<Matrix<N, R, C, S>>::slice","value":"fn (self: &Self, start: (usize, usize), shape: (usize, usize)) -> MatrixSlice<N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":426507,"byte_end":426596,"line_start":445,"line_end":445,"column_start":13,"column_end":102}},{"value":"/ consecutive elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":426609,"byte_end":426634,"line_start":446,"line_end":446,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":426647,"byte_end":426656,"line_start":447,"line_end":447,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16980},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434958,"byte_end":434974,"line_start":639,"line_end":639,"column_start":6,"column_end":22},"name":"slice_with_steps","qualname":"<Matrix<N, R, C, S>>::slice_with_steps","value":"fn (self: &Self, start: (usize, usize), shape: (usize, usize), steps: (usize, usize)) -> MatrixSlice<N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427176,"byte_end":427254,"line_start":461,"line_end":461,"column_start":13,"column_end":91}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427267,"byte_end":427351,"line_start":462,"line_end":462,"column_start":13,"column_end":97}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427364,"byte_end":427444,"line_start":463,"line_end":463,"column_start":13,"column_end":93}},{"value":"/ original matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427457,"byte_end":427477,"line_start":464,"line_end":464,"column_start":13,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427490,"byte_end":427499,"line_start":465,"line_end":465,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16981},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434981,"byte_end":434992,"line_start":640,"line_end":640,"column_start":6,"column_end":17},"name":"fixed_slice","qualname":"<Matrix<N, R, C, S>>::fixed_slice","value":"fn <RSlice, CSlice> (self: &Self, irow: usize, icol: usize) -> MatrixSlice<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427860,"byte_end":427944,"line_start":473,"line_end":473,"column_start":13,"column_end":97}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427957,"byte_end":428000,"line_start":474,"line_end":474,"column_start":13,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428013,"byte_end":428022,"line_start":475,"line_end":475,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16984},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":434999,"byte_end":435021,"line_start":641,"line_end":641,"column_start":6,"column_end":28},"name":"fixed_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps","value":"fn <RSlice, CSlice> (self: &Self, start: (usize, usize), steps: (usize, usize)) -> MatrixSlice<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428643,"byte_end":428721,"line_start":490,"line_end":490,"column_start":13,"column_end":91}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428734,"byte_end":428815,"line_start":491,"line_end":491,"column_start":13,"column_end":94}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428828,"byte_end":428914,"line_start":492,"line_end":492,"column_start":13,"column_end":99}},{"value":"/ the original matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428927,"byte_end":428951,"line_start":493,"line_end":493,"column_start":13,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428964,"byte_end":428973,"line_start":494,"line_end":494,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16987},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435028,"byte_end":435041,"line_start":642,"line_end":642,"column_start":6,"column_end":19},"name":"generic_slice","qualname":"<Matrix<N, R, C, S>>::generic_slice","value":"fn <RSlice, CSlice> (self: &Self, start: (usize, usize), shape: (RSlice, CSlice)) -> MatrixSlice<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":429393,"byte_end":429462,"line_start":503,"line_end":503,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":429475,"byte_end":429484,"line_start":504,"line_end":504,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16990},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435048,"byte_end":435072,"line_start":643,"line_end":643,"column_start":6,"column_end":30},"name":"generic_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps","value":"fn <RSlice, CSlice> (self: &Self, start: (usize, usize), shape: (RSlice, CSlice), steps: (usize, usize)) -> MatrixSlice<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":430049,"byte_end":430118,"line_start":518,"line_end":518,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":430131,"byte_end":430140,"line_start":519,"line_end":519,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16993},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435079,"byte_end":435094,"line_start":644,"line_end":644,"column_start":6,"column_end":21},"name":"rows_range_pair","qualname":"<Matrix<N, R, C, S>>::rows_range_pair","value":"fn <Range1, Range2> (self: &Self, r1: Range1, r2: Range2) -> (MatrixSlice<N, Range1::Size, C, S::RStride, S::CStride>,\n MatrixSlice<N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":431251,"byte_end":431317,"line_start":545,"line_end":545,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":431330,"byte_end":431333,"line_start":546,"line_end":546,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":431346,"byte_end":431410,"line_start":547,"line_end":547,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":431423,"byte_end":431432,"line_start":548,"line_end":548,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16996},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435101,"byte_end":435119,"line_start":645,"line_end":645,"column_start":6,"column_end":24},"name":"columns_range_pair","qualname":"<Matrix<N, R, C, S>>::columns_range_pair","value":"fn <Range1, Range2> (self: &Self, r1: Range1, r2: Range2) -> (MatrixSlice<N, R, Range1::Size, S::RStride, S::CStride>,\n MatrixSlice<N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":432872,"byte_end":432938,"line_start":581,"line_end":581,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":432951,"byte_end":432954,"line_start":582,"line_end":582,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":432967,"byte_end":433031,"line_start":583,"line_end":583,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":433044,"byte_end":433053,"line_start":584,"line_end":584,"column_start":13,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":16999},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435165,"byte_end":435179,"line_start":648,"line_end":648,"column_start":23,"column_end":37},"name":"MatrixSliceMut","qualname":"::base::matrix_slice::MatrixSliceMut","value":"Matrix<N, R, C, SliceStorageMut<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A matrix slice.\n","sig":null,"attributes":[{"value":"/ A matrix slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":418469,"byte_end":418488,"line_start":260,"line_end":260,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":17011},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435259,"byte_end":435266,"line_start":649,"line_end":649,"column_start":6,"column_end":13},"name":"row_mut","qualname":"<Matrix<N, R, C, S>>::row_mut","value":"fn (self: &mut Self, i: usize) -> MatrixSliceMut<N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":418808,"byte_end":418867,"line_start":270,"line_end":270,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":418880,"byte_end":418889,"line_start":271,"line_end":271,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17012},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435273,"byte_end":435285,"line_start":650,"line_end":650,"column_start":6,"column_end":18},"name":"row_part_mut","qualname":"<Matrix<N, R, C, S>>::row_part_mut","value":"fn (self: &mut Self, i: usize, n: usize) -> MatrixSliceMut<N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419054,"byte_end":419139,"line_start":276,"line_end":276,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419152,"byte_end":419161,"line_start":277,"line_end":277,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17013},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435292,"byte_end":435300,"line_start":651,"line_end":651,"column_start":6,"column_end":14},"name":"rows_mut","qualname":"<Matrix<N, R, C, S>>::rows_mut","value":"fn (self: &mut Self, first_row: usize, nrows: usize) -> MatrixSliceMut<N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419372,"byte_end":419428,"line_start":282,"line_end":282,"column_start":13,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419441,"byte_end":419450,"line_start":283,"line_end":283,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17014},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435307,"byte_end":435325,"line_start":652,"line_end":652,"column_start":6,"column_end":24},"name":"rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_with_step_mut","value":"fn (self: &mut Self, first_row: usize, nrows: usize, step: usize) -> MatrixSliceMut<N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419685,"byte_end":419772,"line_start":290,"line_end":290,"column_start":13,"column_end":100}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":419785,"byte_end":419794,"line_start":291,"line_end":291,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17015},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435332,"byte_end":435346,"line_start":653,"line_end":653,"column_start":6,"column_end":20},"name":"fixed_rows_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_mut","value":"fn <RSlice> (self: &mut Self, first_row: usize) -> MatrixSliceMut<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420065,"byte_end":420137,"line_start":298,"line_end":298,"column_start":13,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420150,"byte_end":420159,"line_start":299,"line_end":299,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17017},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435353,"byte_end":435377,"line_start":654,"line_end":654,"column_start":6,"column_end":30},"name":"fixed_rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step_mut","value":"fn <RSlice> (self: &mut Self, first_row: usize, step: usize) -> MatrixSliceMut<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420397,"byte_end":420482,"line_start":306,"line_end":306,"column_start":13,"column_end":98}},{"value":"/ rows.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420495,"byte_end":420504,"line_start":307,"line_end":307,"column_start":13,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420517,"byte_end":420526,"line_start":308,"line_end":308,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17019},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435384,"byte_end":435400,"line_start":655,"line_end":655,"column_start":6,"column_end":22},"name":"rows_generic_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_mut","value":"fn <RSlice> (self: &mut Self, row_start: usize, nrows: RSlice) -> MatrixSliceMut<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420800,"byte_end":420879,"line_start":315,"line_end":315,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420892,"byte_end":420952,"line_start":316,"line_end":316,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":420965,"byte_end":420974,"line_start":317,"line_end":317,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17021},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435407,"byte_end":435433,"line_start":656,"line_end":656,"column_start":6,"column_end":32},"name":"rows_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step_mut","value":"fn <RSlice> (self: &mut Self, row_start: usize, nrows: RSlice, step: usize) -> MatrixSliceMut<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":421566,"byte_end":421645,"line_start":332,"line_end":332,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":421658,"byte_end":421718,"line_start":333,"line_end":333,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":421731,"byte_end":421740,"line_start":334,"line_end":334,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17023},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435440,"byte_end":435450,"line_start":657,"line_end":657,"column_start":6,"column_end":16},"name":"column_mut","qualname":"<Matrix<N, R, C, S>>::column_mut","value":"fn (self: &mut Self, i: usize) -> MatrixSliceMut<N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":422648,"byte_end":422710,"line_start":357,"line_end":357,"column_start":13,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":422723,"byte_end":422732,"line_start":358,"line_end":358,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17024},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435457,"byte_end":435472,"line_start":658,"line_end":658,"column_start":6,"column_end":21},"name":"column_part_mut","qualname":"<Matrix<N, R, C, S>>::column_part_mut","value":"fn (self: &mut Self, i: usize, n: usize) -> MatrixSliceMut<N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":422903,"byte_end":422991,"line_start":363,"line_end":363,"column_start":13,"column_end":101}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423004,"byte_end":423013,"line_start":364,"line_end":364,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17025},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435479,"byte_end":435490,"line_start":659,"line_end":659,"column_start":6,"column_end":17},"name":"columns_mut","qualname":"<Matrix<N, R, C, S>>::columns_mut","value":"fn (self: &mut Self, first_col: usize, ncols: usize) -> MatrixSliceMut<N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423227,"byte_end":423286,"line_start":369,"line_end":369,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423299,"byte_end":423308,"line_start":370,"line_end":370,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17026},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435497,"byte_end":435518,"line_start":660,"line_end":660,"column_start":6,"column_end":27},"name":"columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_with_step_mut","value":"fn (self: &mut Self, first_col: usize, ncols: usize, step: usize) -> MatrixSliceMut<N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423549,"byte_end":423633,"line_start":377,"line_end":377,"column_start":13,"column_end":97}},{"value":"/ columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423646,"byte_end":423658,"line_start":378,"line_end":378,"column_start":13,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423671,"byte_end":423680,"line_start":379,"line_end":379,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17027},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435525,"byte_end":435542,"line_start":661,"line_end":661,"column_start":6,"column_end":23},"name":"fixed_columns_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize) -> MatrixSliceMut<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":423957,"byte_end":424032,"line_start":386,"line_end":386,"column_start":13,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424045,"byte_end":424054,"line_start":387,"line_end":387,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17029},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435549,"byte_end":435576,"line_start":662,"line_end":662,"column_start":6,"column_end":33},"name":"fixed_columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize, step: usize) -> MatrixSliceMut<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424298,"byte_end":424379,"line_start":394,"line_end":394,"column_start":13,"column_end":94}},{"value":"/ `step` columns.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424392,"byte_end":424411,"line_start":395,"line_end":395,"column_start":13,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424424,"byte_end":424433,"line_start":396,"line_end":396,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17031},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435583,"byte_end":435602,"line_start":663,"line_end":663,"column_start":6,"column_end":25},"name":"columns_generic_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize, ncols: CSlice) -> MatrixSliceMut<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424713,"byte_end":424799,"line_start":403,"line_end":403,"column_start":13,"column_end":99}},{"value":"/ known at compile-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424812,"byte_end":424838,"line_start":404,"line_end":404,"column_start":13,"column_end":39}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":424851,"byte_end":424860,"line_start":405,"line_end":405,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17033},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435609,"byte_end":435638,"line_start":664,"line_end":664,"column_start":6,"column_end":35},"name":"columns_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize, ncols: CSlice, step: usize) -> MatrixSliceMut<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":425453,"byte_end":425541,"line_start":420,"line_end":420,"column_start":13,"column_end":101}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":425554,"byte_end":425601,"line_start":421,"line_end":421,"column_start":13,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":425614,"byte_end":425623,"line_start":422,"line_end":422,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17035},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435645,"byte_end":435654,"line_start":665,"line_end":665,"column_start":6,"column_end":15},"name":"slice_mut","qualname":"<Matrix<N, R, C, S>>::slice_mut","value":"fn (self: &mut Self, start: (usize, usize), shape: (usize, usize)) -> MatrixSliceMut<N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":426507,"byte_end":426596,"line_start":445,"line_end":445,"column_start":13,"column_end":102}},{"value":"/ consecutive elements.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":426609,"byte_end":426634,"line_start":446,"line_end":446,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":426647,"byte_end":426656,"line_start":447,"line_end":447,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17036},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435661,"byte_end":435681,"line_start":666,"line_end":666,"column_start":6,"column_end":26},"name":"slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::slice_with_steps_mut","value":"fn (self: &mut Self, start: (usize, usize), shape: (usize, usize), steps: (usize, usize)) -> MatrixSliceMut<N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427176,"byte_end":427254,"line_start":461,"line_end":461,"column_start":13,"column_end":91}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427267,"byte_end":427351,"line_start":462,"line_end":462,"column_start":13,"column_end":97}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427364,"byte_end":427444,"line_start":463,"line_end":463,"column_start":13,"column_end":93}},{"value":"/ original matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427457,"byte_end":427477,"line_start":464,"line_end":464,"column_start":13,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427490,"byte_end":427499,"line_start":465,"line_end":465,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17037},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435688,"byte_end":435703,"line_start":667,"line_end":667,"column_start":6,"column_end":21},"name":"fixed_slice_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_mut","value":"fn <RSlice, CSlice> (self: &mut Self, irow: usize, icol: usize) -> MatrixSliceMut<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427860,"byte_end":427944,"line_start":473,"line_end":473,"column_start":13,"column_end":97}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":427957,"byte_end":428000,"line_start":474,"line_end":474,"column_start":13,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428013,"byte_end":428022,"line_start":475,"line_end":475,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17040},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435710,"byte_end":435736,"line_start":668,"line_end":668,"column_start":6,"column_end":32},"name":"fixed_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps_mut","value":"fn <RSlice, CSlice> (self: &mut Self, start: (usize, usize), steps: (usize, usize)) -> MatrixSliceMut<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428643,"byte_end":428721,"line_start":490,"line_end":490,"column_start":13,"column_end":91}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428734,"byte_end":428815,"line_start":491,"line_end":491,"column_start":13,"column_end":94}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428828,"byte_end":428914,"line_start":492,"line_end":492,"column_start":13,"column_end":99}},{"value":"/ the original matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428927,"byte_end":428951,"line_start":493,"line_end":493,"column_start":13,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":428964,"byte_end":428973,"line_start":494,"line_end":494,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17043},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435743,"byte_end":435760,"line_start":669,"line_end":669,"column_start":6,"column_end":23},"name":"generic_slice_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_mut","value":"fn <RSlice, CSlice> (self: &mut Self, start: (usize, usize), shape: (RSlice, CSlice)) -> MatrixSliceMut<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":429393,"byte_end":429462,"line_start":503,"line_end":503,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":429475,"byte_end":429484,"line_start":504,"line_end":504,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17046},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435767,"byte_end":435795,"line_start":670,"line_end":670,"column_start":6,"column_end":34},"name":"generic_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps_mut","value":"fn <RSlice, CSlice> (self: &mut Self, start: (usize, usize), shape: (RSlice, CSlice), steps: (usize, usize)) -> MatrixSliceMut<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":430049,"byte_end":430118,"line_start":518,"line_end":518,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":430131,"byte_end":430140,"line_start":519,"line_end":519,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17049},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435802,"byte_end":435821,"line_start":671,"line_end":671,"column_start":6,"column_end":25},"name":"rows_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_pair_mut","value":"fn <Range1, Range2> (self: &mut Self, r1: Range1, r2: Range2) -> (MatrixSliceMut<N, Range1::Size, C, S::RStride, S::CStride>,\n MatrixSliceMut<N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":431251,"byte_end":431317,"line_start":545,"line_end":545,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":431330,"byte_end":431333,"line_start":546,"line_end":546,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":431346,"byte_end":431410,"line_start":547,"line_end":547,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":431423,"byte_end":431432,"line_start":548,"line_end":548,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17052},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435828,"byte_end":435850,"line_start":672,"line_end":672,"column_start":6,"column_end":28},"name":"columns_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_pair_mut","value":"fn <Range1, Range2> (self: &mut Self, r1: Range1, r2: Range2) -> (MatrixSliceMut<N, R, Range1::Size, S::RStride, S::CStride>,\n MatrixSliceMut<N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":432872,"byte_end":432938,"line_start":581,"line_end":581,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":432951,"byte_end":432954,"line_start":582,"line_end":582,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":432967,"byte_end":433031,"line_start":583,"line_end":583,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":433044,"byte_end":433053,"line_start":584,"line_end":584,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3328},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436156,"byte_end":436166,"line_start":681,"line_end":681,"column_start":11,"column_end":21},"name":"SliceRange","qualname":"::base::matrix_slice::SliceRange","value":"SliceRange<D: Dim>","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333}],"decl_id":null,"docs":" A range with a size that may be known at compile-time.","sig":null,"attributes":[{"value":"/ A range with a size that may be known at compile-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435854,"byte_end":435912,"line_start":674,"line_end":674,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435913,"byte_end":435916,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ This may be:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435917,"byte_end":435933,"line_start":676,"line_end":676,"column_start":1,"column_end":17}},{"value":"/ * A single `usize` index, e.g., `4`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435934,"byte_end":435973,"line_start":677,"line_end":677,"column_start":1,"column_end":40}},{"value":"/ * A left-open range `std::ops::RangeTo`, e.g., `.. 4`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":435974,"byte_end":436031,"line_start":678,"line_end":678,"column_start":1,"column_end":58}},{"value":"/ * A right-open range `std::ops::RangeFrom`, e.g., `4 ..`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436032,"byte_end":436092,"line_start":679,"line_end":679,"column_start":1,"column_end":61}},{"value":"/ * A full range `std::ops::RangeFull`, e.g., `..`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436093,"byte_end":436145,"line_start":680,"line_end":680,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":3330},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436247,"byte_end":436251,"line_start":683,"line_end":683,"column_start":10,"column_end":14},"name":"Size","qualname":"::base::matrix_slice::SliceRange::Size","value":"type Size: Dim;","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" Type of the range size. May be a type-level integer.\n","sig":null,"attributes":[{"value":"/ Type of the range size. May be a type-level integer.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436181,"byte_end":436237,"line_start":682,"line_end":682,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436304,"byte_end":436309,"line_start":686,"line_end":686,"column_start":8,"column_end":13},"name":"begin","qualname":"::base::matrix_slice::SliceRange::begin","value":"fn (&self, shape: D) -> usize","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" The start index of the range.\n","sig":null,"attributes":[{"value":"/ The start index of the range.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436263,"byte_end":436296,"line_start":685,"line_end":685,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436481,"byte_end":436484,"line_start":689,"line_end":689,"column_start":8,"column_end":11},"name":"end","qualname":"::base::matrix_slice::SliceRange::end","value":"fn (&self, shape: D) -> usize","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" The index immediately after the last index inside of the range.\n","sig":null,"attributes":[{"value":"/ The index immediately after the last index inside of the range.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436406,"byte_end":436473,"line_start":688,"line_end":688,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436595,"byte_end":436599,"line_start":691,"line_end":691,"column_start":8,"column_end":12},"name":"size","qualname":"::base::matrix_slice::SliceRange::size","value":"fn (&self, shape: D) -> Self::Size","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" The number of elements of the range, i.e., `self.end - self.begin`.\n","sig":null,"attributes":[{"value":"/ The number of elements of the range, i.e., `self.end - self.begin`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436516,"byte_end":436587,"line_start":690,"line_end":690,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":438535,"byte_end":438546,"line_start":793,"line_end":793,"column_start":12,"column_end":23},"name":"slice_range","qualname":"<Matrix<N, R, C, S>>::slice_range","value":"fn <RowRange, ColRange> (&self, rows: RowRange, cols: ColRange) -> MatrixSlice<N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed\n by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":438385,"byte_end":438480,"line_start":790,"line_end":790,"column_start":5,"column_end":100}},{"value":"/ by the range `cols`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":438485,"byte_end":438509,"line_start":791,"line_end":791,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":438514,"byte_end":438523,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":439080,"byte_end":439090,"line_start":811,"line_end":811,"column_start":12,"column_end":22},"name":"rows_range","qualname":"<Matrix<N, R, C, S>>::rows_range","value":"fn <RowRange> (&self, rows: RowRange) -> MatrixSlice<N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":438992,"byte_end":439054,"line_start":809,"line_end":809,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":439059,"byte_end":439068,"line_start":810,"line_end":810,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":439366,"byte_end":439379,"line_start":821,"line_end":821,"column_start":12,"column_end":25},"name":"columns_range","qualname":"<Matrix<N, R, C, S>>::columns_range","value":"fn <ColRange> (&self, cols: ColRange) -> MatrixSlice<N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `rows`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":439275,"byte_end":439340,"line_start":819,"line_end":819,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":439345,"byte_end":439354,"line_start":820,"line_end":820,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3381},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":439787,"byte_end":439802,"line_start":833,"line_end":833,"column_start":12,"column_end":27},"name":"slice_range_mut","qualname":"<Matrix<N, R, C, S>>::slice_range_mut","value":"fn <RowRange, ColRange> (&mut self, rows: RowRange, cols: ColRange) -> MatrixSliceMut<N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns\n indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":439643,"byte_end":439738,"line_start":831,"line_end":831,"column_start":5,"column_end":100}},{"value":"/ indexed by the range `cols`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":439743,"byte_end":439775,"line_start":832,"line_end":832,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3384},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":440347,"byte_end":440361,"line_start":851,"line_end":851,"column_start":12,"column_end":26},"name":"rows_range_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_mut","value":"fn <RowRange> (&mut self, rows: RowRange) -> MatrixSliceMut<N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":440259,"byte_end":440321,"line_start":849,"line_end":849,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":440326,"byte_end":440335,"line_start":850,"line_end":850,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":440648,"byte_end":440665,"line_start":861,"line_end":861,"column_start":12,"column_end":29},"name":"columns_range_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_mut","value":"fn <ColRange> (&mut self, cols: ColRange) -> MatrixSliceMut<N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `cols`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":440557,"byte_end":440622,"line_start":859,"line_end":859,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":440627,"byte_end":440636,"line_start":860,"line_end":860,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17055},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442278,"byte_end":442288,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"VecStorage","qualname":"::base::vec_storage::VecStorage","value":"VecStorage {  }","parent":null,"children":[{"krate":0,"index":17059},{"krate":0,"index":17060},{"krate":0,"index":17061}],"decl_id":null,"docs":" A Vec-based matrix data storage. It may be dynamically-sized.\n","sig":null,"attributes":[{"value":"/ A Vec-based matrix data storage. It may be dynamically-sized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442078,"byte_end":442143,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442144,"byte_end":442154,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":3416},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442443,"byte_end":442452,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"name":"MatrixVec","qualname":"::base::vec_storage::MatrixVec","value":"VecStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [VecStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `VecStorage`\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442359,"byte_end":442404,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/ Renamed to [VecStorage].","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442405,"byte_end":442433,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3424},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442640,"byte_end":442643,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<VecStorage<N, R, C>>::new","value":"fn (nrows: R, ncols: C, data: Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamic matrix data storage from the given vector and shape.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamic matrix data storage from the given vector and shape.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442536,"byte_end":442614,"line_start":37,"line_end":37,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442619,"byte_end":442628,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442997,"byte_end":443003,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"as_vec","qualname":"<VecStorage<N, R, C>>::as_vec","value":"fn (&self) -> &Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying data storage.\n","sig":null,"attributes":[{"value":"/ The underlying data storage.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442939,"byte_end":442971,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442976,"byte_end":442985,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443242,"byte_end":443252,"line_start":62,"line_end":62,"column_start":19,"column_end":29},"name":"as_vec_mut","qualname":"<VecStorage<N, R, C>>::as_vec_mut","value":"fn (&mut self) -> &mut Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying mutable data storage.","sig":null,"attributes":[{"value":"/ The underlying mutable data storage.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443054,"byte_end":443094,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443099,"byte_end":443102,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This is unsafe because this may cause UB if the size of the vector is changed","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443107,"byte_end":443188,"line_start":59,"line_end":59,"column_start":5,"column_end":86}},{"value":"/ by the user.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443193,"byte_end":443209,"line_start":60,"line_end":60,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443214,"byte_end":443223,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443592,"byte_end":443598,"line_start":71,"line_end":71,"column_start":19,"column_end":25},"name":"resize","qualname":"<VecStorage<N, R, C>>::resize","value":"fn (mut self, sz: usize) -> Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the underlying mutable data storage and unwraps it.","sig":null,"attributes":[{"value":"/ Resizes the underlying mutable data storage and unwraps it.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443315,"byte_end":443378,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443383,"byte_end":443386,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If `sz` is larger than the current size, additional elements are uninitialized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443391,"byte_end":443474,"line_start":68,"line_end":68,"column_start":5,"column_end":88}},{"value":"/ If `sz` is smaller than the current size, additional elements are truncated.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443479,"byte_end":443559,"line_start":69,"line_end":69,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443564,"byte_end":443573,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443976,"byte_end":443979,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"len","qualname":"<VecStorage<N, R, C>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements on the underlying vector.\n","sig":null,"attributes":[{"value":"/ The number of elements on the underlying vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443898,"byte_end":443950,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":443955,"byte_end":443964,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3521},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450299,"byte_end":450307,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Matrix<N, R, C, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this is an empty matrix.\n","sig":null,"attributes":[{"value":"/ Indicates if this is an empty matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450232,"byte_end":450273,"line_start":13,"line_end":13,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450278,"byte_end":450287,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450479,"byte_end":450488,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"is_square","qualname":"<Matrix<N, R, C, S>>::is_square","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this is a square matrix.\n","sig":null,"attributes":[{"value":"/ Indicates if this is a square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450412,"byte_end":450453,"line_start":20,"line_end":20,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450458,"byte_end":450467,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450972,"byte_end":450983,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Matrix<N, R, C, S>>::is_identity","value":"fn (&self, eps: N::Epsilon) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicated if this is the identity matrix within a relative error of `eps`.","sig":null,"attributes":[{"value":"/ Indicated if this is the identity matrix within a relative error of `eps`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450668,"byte_end":450746,"line_start":28,"line_end":28,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450751,"byte_end":450754,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If the matrix is diagonal, this checks that diagonal elements (i.e. at coordinates `(i, i)`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450759,"byte_end":450854,"line_start":30,"line_end":30,"column_start":5,"column_end":100}},{"value":"/ for i from `0` to `min(R, C)`) are equal one; and that all other elements are zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450859,"byte_end":450946,"line_start":31,"line_end":31,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450951,"byte_end":450960,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3529},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":452668,"byte_end":452681,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"is_orthogonal","qualname":"<Matrix<N, R, C, S>>::is_orthogonal","value":"fn (&self, eps: N::Epsilon) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that `Mᵀ × M = Id`.","sig":null,"attributes":[{"value":"/ Checks that `Mᵀ × M = Id`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":452477,"byte_end":452510,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":452515,"byte_end":452518,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ In this definition `Id` is approximately equal to the identity matrix with a relative error","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":452523,"byte_end":452618,"line_start":90,"line_end":90,"column_start":5,"column_end":100}},{"value":"/ equal to `eps`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":452623,"byte_end":452642,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":452647,"byte_end":452656,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3534},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":453206,"byte_end":453227,"line_start":109,"line_end":109,"column_start":12,"column_end":33},"name":"is_special_orthogonal","qualname":"<SquareMatrix<N, D, S>>::is_special_orthogonal","value":"fn (&self, eps: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that this matrix is orthogonal and has a determinant equal to 1.\n","sig":null,"attributes":[{"value":"/ Checks that this matrix is orthogonal and has a determinant equal to 1.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":453105,"byte_end":453180,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":453185,"byte_end":453194,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3535},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":453528,"byte_end":453541,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<SquareMatrix<N, D, S>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this matrix is invertible.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":453454,"byte_end":453502,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":453507,"byte_end":453516,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3540},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453865,"byte_end":453871,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Scalar","qualname":"::base::scalar::Scalar","value":"Scalar: Copy + PartialEq + Debug + Any","parent":null,"children":[{"krate":0,"index":3541}],"decl_id":null,"docs":" The basic scalar type for all structures of `nalgebra`.","sig":null,"attributes":[{"value":"/ The basic scalar type for all structures of `nalgebra`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453714,"byte_end":453773,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453774,"byte_end":453777,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This does not make any assumption on the algebraic properties of `Self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453778,"byte_end":453854,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3541},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":454066,"byte_end":454068,"line_start":13,"line_end":13,"column_start":8,"column_end":10},"name":"is","qualname":"::base::scalar::Scalar::is","value":"fn <T> () -> bool","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Tests if `Self` the same as the type `T`","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453910,"byte_end":453919,"line_start":9,"line_end":9,"column_start":5,"column_end":14}},{"value":"/ Tests if `Self` the same as the type `T`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453924,"byte_end":453968,"line_start":10,"line_end":10,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453973,"byte_end":453976,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ Typically used to test of `Self` is a f32 or a f64 with `N::is::<f32>()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453981,"byte_end":454058,"line_start":12,"line_end":12,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":17095},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454957,"byte_end":454959,"line_start":24,"line_end":24,"column_start":15,"column_end":17},"name":"xx","qualname":"<Vector<N, D, S>>::xx","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17096},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454995,"byte_end":454998,"line_start":25,"line_end":25,"column_start":15,"column_end":18},"name":"xxx","qualname":"<Vector<N, D, S>>::xxx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17101},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455037,"byte_end":455039,"line_start":27,"line_end":27,"column_start":15,"column_end":17},"name":"xy","qualname":"<Vector<N, D, S>>::xy","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17102},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455075,"byte_end":455077,"line_start":28,"line_end":28,"column_start":15,"column_end":17},"name":"yx","qualname":"<Vector<N, D, S>>::yx","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17103},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455113,"byte_end":455115,"line_start":29,"line_end":29,"column_start":15,"column_end":17},"name":"yy","qualname":"<Vector<N, D, S>>::yy","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17104},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455151,"byte_end":455154,"line_start":30,"line_end":30,"column_start":15,"column_end":18},"name":"xxy","qualname":"<Vector<N, D, S>>::xxy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17105},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455192,"byte_end":455195,"line_start":31,"line_end":31,"column_start":15,"column_end":18},"name":"xyx","qualname":"<Vector<N, D, S>>::xyx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17106},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455233,"byte_end":455236,"line_start":32,"line_end":32,"column_start":15,"column_end":18},"name":"xyy","qualname":"<Vector<N, D, S>>::xyy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17107},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455274,"byte_end":455277,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"yxx","qualname":"<Vector<N, D, S>>::yxx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17108},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455315,"byte_end":455318,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"yxy","qualname":"<Vector<N, D, S>>::yxy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17109},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455356,"byte_end":455359,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"yyx","qualname":"<Vector<N, D, S>>::yyx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17110},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455397,"byte_end":455400,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"name":"yyy","qualname":"<Vector<N, D, S>>::yyy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17115},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455439,"byte_end":455441,"line_start":38,"line_end":38,"column_start":15,"column_end":17},"name":"xz","qualname":"<Vector<N, D, S>>::xz","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17116},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455477,"byte_end":455479,"line_start":39,"line_end":39,"column_start":15,"column_end":17},"name":"yz","qualname":"<Vector<N, D, S>>::yz","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17117},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455515,"byte_end":455517,"line_start":40,"line_end":40,"column_start":15,"column_end":17},"name":"zx","qualname":"<Vector<N, D, S>>::zx","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17118},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455553,"byte_end":455555,"line_start":41,"line_end":41,"column_start":15,"column_end":17},"name":"zy","qualname":"<Vector<N, D, S>>::zy","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17119},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455591,"byte_end":455593,"line_start":42,"line_end":42,"column_start":15,"column_end":17},"name":"zz","qualname":"<Vector<N, D, S>>::zz","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17120},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455629,"byte_end":455632,"line_start":43,"line_end":43,"column_start":15,"column_end":18},"name":"xxz","qualname":"<Vector<N, D, S>>::xxz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17121},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455670,"byte_end":455673,"line_start":44,"line_end":44,"column_start":15,"column_end":18},"name":"xyz","qualname":"<Vector<N, D, S>>::xyz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17122},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455711,"byte_end":455714,"line_start":45,"line_end":45,"column_start":15,"column_end":18},"name":"xzx","qualname":"<Vector<N, D, S>>::xzx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17123},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455752,"byte_end":455755,"line_start":46,"line_end":46,"column_start":15,"column_end":18},"name":"xzy","qualname":"<Vector<N, D, S>>::xzy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17124},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455793,"byte_end":455796,"line_start":47,"line_end":47,"column_start":15,"column_end":18},"name":"xzz","qualname":"<Vector<N, D, S>>::xzz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17125},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455834,"byte_end":455837,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"name":"yxz","qualname":"<Vector<N, D, S>>::yxz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17126},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455875,"byte_end":455878,"line_start":49,"line_end":49,"column_start":15,"column_end":18},"name":"yyz","qualname":"<Vector<N, D, S>>::yyz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17127},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455916,"byte_end":455919,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"yzx","qualname":"<Vector<N, D, S>>::yzx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17128},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455957,"byte_end":455960,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"yzy","qualname":"<Vector<N, D, S>>::yzy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17129},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":455998,"byte_end":456001,"line_start":52,"line_end":52,"column_start":15,"column_end":18},"name":"yzz","qualname":"<Vector<N, D, S>>::yzz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17130},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":456039,"byte_end":456042,"line_start":53,"line_end":53,"column_start":15,"column_end":18},"name":"zxx","qualname":"<Vector<N, D, S>>::zxx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17131},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":456080,"byte_end":456083,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"zxy","qualname":"<Vector<N, D, S>>::zxy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17132},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":456121,"byte_end":456124,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"zxz","qualname":"<Vector<N, D, S>>::zxz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17133},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":456162,"byte_end":456165,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"zyx","qualname":"<Vector<N, D, S>>::zyx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17134},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":456203,"byte_end":456206,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"zyy","qualname":"<Vector<N, D, S>>::zyy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17135},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":456244,"byte_end":456247,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"zyz","qualname":"<Vector<N, D, S>>::zyz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17136},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":456285,"byte_end":456288,"line_start":59,"line_end":59,"column_start":15,"column_end":18},"name":"zzx","qualname":"<Vector<N, D, S>>::zzx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17137},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":456326,"byte_end":456329,"line_start":60,"line_end":60,"column_start":15,"column_end":18},"name":"zzy","qualname":"<Vector<N, D, S>>::zzy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17138},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":456367,"byte_end":456370,"line_start":61,"line_end":61,"column_start":15,"column_end":18},"name":"zzz","qualname":"<Vector<N, D, S>>::zzz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454664,"byte_end":454714,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/swizzle.rs","byte_start":454735,"byte_end":454744,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":17139},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":457057,"byte_end":457061,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Unit","qualname":"::base::unit::Unit","value":"Unit {  }","parent":null,"children":[{"krate":0,"index":17141}],"decl_id":null,"docs":" A wrapper that ensures the underlying algebraic entity has a unit norm.","sig":null,"attributes":[{"value":"/ A wrapper that ensures the underlying algebraic entity has a unit norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":456799,"byte_end":456874,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":456875,"byte_end":456878,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Use `.as_ref()` or `.into_inner()` to obtain the underlying value by-reference or by-move.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":456879,"byte_end":456973,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"repr(transparent)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":456974,"byte_end":456994,"line_start":19,"line_end":19,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458113,"byte_end":458126,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"new_normalize","qualname":"<Unit<T>>::new_normalize","value":"fn (value: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given value and return it wrapped on a `Unit` structure.\n","sig":null,"attributes":[{"value":"/ Normalize the given value and return it wrapped on a `Unit` structure.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458013,"byte_end":458087,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458092,"byte_end":458101,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3571},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458384,"byte_end":458391,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Unit<T>>::try_new","value":"fn (value: T, min_norm: T::RealField) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to normalize the given value and return it wrapped on a `Unit` structure.","sig":null,"attributes":[{"value":"/ Attempts to normalize the given value and return it wrapped on a `Unit` structure.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458193,"byte_end":458279,"line_start":63,"line_end":63,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458284,"byte_end":458287,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458292,"byte_end":458358,"line_start":65,"line_end":65,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458363,"byte_end":458372,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3573},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458632,"byte_end":458643,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"new_and_get","qualname":"<Unit<T>>::new_and_get","value":"fn (mut value: T) -> (Self, T::RealField)","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given value and return it wrapped on a `Unit` structure and its norm.\n","sig":null,"attributes":[{"value":"/ Normalize the given value and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458519,"byte_end":458606,"line_start":71,"line_end":71,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458611,"byte_end":458620,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458962,"byte_end":458977,"line_start":83,"line_end":83,"column_start":12,"column_end":27},"name":"try_new_and_get","qualname":"<Unit<T>>::try_new_and_get","value":"fn (mut value: T, min_norm: T::RealField) -> Option<(Self, T::RealField)>","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given value and return it wrapped on a `Unit` structure and its norm.","sig":null,"attributes":[{"value":"/ Normalize the given value and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458770,"byte_end":458857,"line_start":79,"line_end":79,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458862,"byte_end":458865,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458870,"byte_end":458936,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":458941,"byte_end":458950,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3575},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459591,"byte_end":459602,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Unit<T>>::renormalize","value":"fn (&mut self) -> T::RealField","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this value again. This is useful when repeated computations\n might cause a drift in the norm because of float inaccuracies.","sig":null,"attributes":[{"value":"/ Normalizes this value again. This is useful when repeated computations","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459211,"byte_end":459285,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ might cause a drift in the norm because of float inaccuracies.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459290,"byte_end":459356,"line_start":92,"line_end":92,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459361,"byte_end":459364,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Returns the norm before re-normalization. See `.renormalize_fast` for a faster alternative","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459369,"byte_end":459463,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/ that may be slightly less accurate if `self` drifted significantly from having a unit length.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459468,"byte_end":459565,"line_start":95,"line_end":95,"column_start":5,"column_end":102}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459570,"byte_end":459579,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3576},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459898,"byte_end":459914,"line_start":105,"line_end":105,"column_start":12,"column_end":28},"name":"renormalize_fast","qualname":"<Unit<T>>::renormalize_fast","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this value again using a first-order Taylor approximation.\n This is useful when repeated computations might cause a drift in the norm\n because of float inaccuracies.\n","sig":null,"attributes":[{"value":"/ Normalizes this value again using a first-order Taylor approximation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459678,"byte_end":459751,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ This is useful when repeated computations might cause a drift in the norm","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459756,"byte_end":459833,"line_start":102,"line_end":102,"column_start":5,"column_end":82}},{"value":"/ because of float inaccuracies.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459838,"byte_end":459872,"line_start":103,"line_end":103,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":459877,"byte_end":459886,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3579},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460274,"byte_end":460287,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Unit<T>>::new_unchecked","value":"fn (value: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given value, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given value, assuming it is already normalized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460187,"byte_end":460248,"line_start":114,"line_end":114,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460253,"byte_end":460262,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3580},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460440,"byte_end":460458,"line_start":122,"line_end":122,"column_start":12,"column_end":30},"name":"from_ref_unchecked","qualname":"<Unit<T>>::from_ref_unchecked","value":"fn <'a> (value: &'a T) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given reference, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given reference, assuming it is already normalized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460349,"byte_end":460414,"line_start":120,"line_end":120,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460419,"byte_end":460428,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460604,"byte_end":460614,"line_start":128,"line_end":128,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Unit<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460543,"byte_end":460578,"line_start":126,"line_end":126,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460583,"byte_end":460592,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460825,"byte_end":460831,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Unit<T>>::unwrap","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n Deprecated: use [Unit::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460658,"byte_end":460693,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/ Deprecated: use [Unit::into_inner] instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460698,"byte_end":460745,"line_start":133,"line_end":133,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460750,"byte_end":460799,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460804,"byte_end":460813,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":461113,"byte_end":461129,"line_start":144,"line_end":144,"column_start":12,"column_end":28},"name":"as_mut_unchecked","qualname":"<Unit<T>>::as_mut_unchecked","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying value. This is `_unchecked` because modifying\n the underlying value in such a way that it no longer has unit length may lead to unexpected\n results.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying value. This is `_unchecked` because modifying","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460875,"byte_end":460970,"line_start":140,"line_end":140,"column_start":5,"column_end":100}},{"value":"/ the underlying value in such a way that it no longer has unit length may lead to unexpected","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460975,"byte_end":461070,"line_start":141,"line_end":141,"column_start":5,"column_end":100}},{"value":"/ results.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":461075,"byte_end":461087,"line_start":142,"line_end":142,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":461092,"byte_end":461101,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":463722,"byte_end":463735,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"compress_rows","qualname":"<Matrix<N, R, C, S>>::compress_rows","value":"fn (&self, f: impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a row vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.\n","sig":null,"attributes":[{"value":"/ Returns a row vector where each element is the result of the application of `f` on the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":463553,"byte_end":463643,"line_start":7,"line_end":7,"column_start":5,"column_end":95}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":463648,"byte_end":463696,"line_start":8,"line_end":8,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":463701,"byte_end":463710,"line_start":9,"line_end":9,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":464448,"byte_end":464464,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"name":"compress_rows_tr","qualname":"<Matrix<N, R, C, S>>::compress_rows_tr","value":"fn (&self, f: impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.","sig":null,"attributes":[{"value":"/ Returns a column vector where each element is the result of the application of `f` on the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":464203,"byte_end":464296,"line_start":24,"line_end":24,"column_start":5,"column_end":98}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":464301,"byte_end":464349,"line_start":25,"line_end":25,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":464354,"byte_end":464357,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.compress_rows(f).transpose()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":464362,"byte_end":464422,"line_start":27,"line_end":27,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":464427,"byte_end":464436,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465036,"byte_end":465052,"line_start":45,"line_end":45,"column_start":12,"column_end":28},"name":"compress_columns","qualname":"<Matrix<N, R, C, S>>::compress_columns","value":"fn (&self, init: VectorN<N, R>, f: impl Fn(&mut VectorN<N, R>, VectorSliceN<N, R, S::RStride, S::CStride>)) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector resulting from the folding of `f` on each column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a column vector resulting from the folding of `f` on each column of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":464918,"byte_end":465010,"line_start":43,"line_end":43,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465015,"byte_end":465024,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465819,"byte_end":465822,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"sum","qualname":"<Matrix<N, R, C, S>>::sum","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the elements of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465517,"byte_end":465564,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465569,"byte_end":465572,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465577,"byte_end":465590,"line_start":65,"line_end":65,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465595,"byte_end":465598,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465603,"byte_end":465610,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465615,"byte_end":465645,"line_start":68,"line_end":68,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465650,"byte_end":465653,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465658,"byte_end":465699,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465704,"byte_end":465746,"line_start":71,"line_end":71,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.sum(), 21.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465751,"byte_end":465781,"line_start":72,"line_end":72,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465786,"byte_end":465793,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465798,"byte_end":465807,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466339,"byte_end":466346,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"row_sum","qualname":"<Matrix<N, R, C, S>>::row_sum","value":"fn (&self) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465907,"byte_end":465950,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465955,"byte_end":465958,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465963,"byte_end":466040,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466045,"byte_end":466048,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466053,"byte_end":466066,"line_start":83,"line_end":83,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466071,"byte_end":466074,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466079,"byte_end":466086,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466091,"byte_end":466135,"line_start":86,"line_end":86,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466140,"byte_end":466143,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466148,"byte_end":466189,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466194,"byte_end":466236,"line_start":89,"line_end":89,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum(), RowVector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466241,"byte_end":466301,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466306,"byte_end":466313,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466318,"byte_end":466327,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466880,"byte_end":466890,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"row_sum_tr","qualname":"<Matrix<N, R, C, S>>::row_sum_tr","value":"fn (&self) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466483,"byte_end":466584,"line_start":98,"line_end":98,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466589,"byte_end":466592,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466597,"byte_end":466610,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466615,"byte_end":466618,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466623,"byte_end":466630,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466635,"byte_end":466676,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466681,"byte_end":466684,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466689,"byte_end":466730,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466735,"byte_end":466777,"line_start":106,"line_end":106,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum_tr(), Vector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466782,"byte_end":466842,"line_start":107,"line_end":107,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466847,"byte_end":466854,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":466859,"byte_end":466868,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3638},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467361,"byte_end":467371,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"column_sum","qualname":"<Matrix<N, R, C, S>>::column_sum","value":"fn (&self) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the columns of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467023,"byte_end":467069,"line_start":115,"line_end":115,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467074,"byte_end":467077,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467082,"byte_end":467095,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467100,"byte_end":467103,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467108,"byte_end":467115,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467120,"byte_end":467161,"line_start":120,"line_end":120,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467166,"byte_end":467169,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467174,"byte_end":467215,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467220,"byte_end":467262,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_sum(), Vector2::new(6.0, 15.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467267,"byte_end":467323,"line_start":124,"line_end":124,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467328,"byte_end":467335,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467340,"byte_end":467349,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3640},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468082,"byte_end":468090,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"variance","qualname":"<Matrix<N, R, C, S>>::variance","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the elements of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467692,"byte_end":467744,"line_start":140,"line_end":140,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467749,"byte_end":467752,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467757,"byte_end":467770,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467775,"byte_end":467778,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467783,"byte_end":467790,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467795,"byte_end":467834,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467839,"byte_end":467869,"line_start":146,"line_end":146,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467874,"byte_end":467877,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467882,"byte_end":467923,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467928,"byte_end":467970,"line_start":149,"line_end":149,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.variance(), 35.0 / 12.0, epsilon = 1.0e-8);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":467975,"byte_end":468044,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468049,"byte_end":468056,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468061,"byte_end":468070,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468875,"byte_end":468887,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"row_variance","qualname":"<Matrix<N, R, C, S>>::row_variance","value":"fn (&self) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468438,"byte_end":468486,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468491,"byte_end":468494,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468499,"byte_end":468576,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468581,"byte_end":468594,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468599,"byte_end":468602,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468607,"byte_end":468614,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468619,"byte_end":468663,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468668,"byte_end":468671,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468676,"byte_end":468717,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468722,"byte_end":468764,"line_start":172,"line_end":172,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance(), RowVector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468769,"byte_end":468837,"line_start":173,"line_end":173,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468842,"byte_end":468849,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":468854,"byte_end":468863,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469439,"byte_end":469454,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"row_variance_tr","qualname":"<Matrix<N, R, C, S>>::row_variance_tr","value":"fn (&self) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469029,"byte_end":469135,"line_start":181,"line_end":181,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469140,"byte_end":469143,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469148,"byte_end":469161,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469166,"byte_end":469169,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469174,"byte_end":469181,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469186,"byte_end":469227,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469232,"byte_end":469235,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469240,"byte_end":469281,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469286,"byte_end":469328,"line_start":189,"line_end":189,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance_tr(), Vector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469333,"byte_end":469401,"line_start":190,"line_end":190,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469406,"byte_end":469413,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469418,"byte_end":469427,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470022,"byte_end":470037,"line_start":211,"line_end":211,"column_start":12,"column_end":27},"name":"column_variance","qualname":"<Matrix<N, R, C, S>>::column_variance","value":"fn (&self) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the columns of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469592,"byte_end":469643,"line_start":198,"line_end":198,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469648,"byte_end":469651,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469656,"byte_end":469669,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469674,"byte_end":469677,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469682,"byte_end":469689,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469694,"byte_end":469733,"line_start":203,"line_end":203,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469738,"byte_end":469779,"line_start":204,"line_end":204,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469784,"byte_end":469787,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469792,"byte_end":469833,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469838,"byte_end":469880,"line_start":207,"line_end":207,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.column_variance(), Vector2::new(2.0 / 3.0, 2.0 / 3.0), epsilon = 1.0e-8);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469885,"byte_end":469984,"line_start":208,"line_end":208,"column_start":5,"column_end":104}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":469989,"byte_end":469996,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470001,"byte_end":470010,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470964,"byte_end":470968,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"mean","qualname":"<Matrix<N, R, C, S>>::mean","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the elements of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470661,"byte_end":470709,"line_start":234,"line_end":234,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470714,"byte_end":470717,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470722,"byte_end":470735,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470740,"byte_end":470743,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470748,"byte_end":470755,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470760,"byte_end":470790,"line_start":239,"line_end":239,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470795,"byte_end":470798,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470803,"byte_end":470844,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470849,"byte_end":470891,"line_start":242,"line_end":242,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.mean(), 3.5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470896,"byte_end":470926,"line_start":243,"line_end":243,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470931,"byte_end":470938,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":470943,"byte_end":470952,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471561,"byte_end":471569,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"row_mean","qualname":"<Matrix<N, R, C, S>>::row_mean","value":"fn (&self) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471131,"byte_end":471175,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471180,"byte_end":471183,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Use `.row_mean_tr` if you need the result in a column vector instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471188,"byte_end":471261,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471266,"byte_end":471269,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471274,"byte_end":471287,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471292,"byte_end":471295,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471300,"byte_end":471307,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471312,"byte_end":471356,"line_start":261,"line_end":261,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471361,"byte_end":471364,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471369,"byte_end":471410,"line_start":263,"line_end":263,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471415,"byte_end":471457,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean(), RowVector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471462,"byte_end":471523,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471528,"byte_end":471535,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471540,"byte_end":471549,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472106,"byte_end":472117,"line_start":285,"line_end":285,"column_start":12,"column_end":23},"name":"row_mean_tr","qualname":"<Matrix<N, R, C, S>>::row_mean_tr","value":"fn (&self) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471707,"byte_end":471809,"line_start":273,"line_end":273,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471814,"byte_end":471817,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471822,"byte_end":471835,"line_start":275,"line_end":275,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471840,"byte_end":471843,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471848,"byte_end":471855,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471860,"byte_end":471901,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471906,"byte_end":471909,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471914,"byte_end":471955,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":471960,"byte_end":472002,"line_start":281,"line_end":281,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean_tr(), Vector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472007,"byte_end":472068,"line_start":282,"line_end":282,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472073,"byte_end":472080,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472085,"byte_end":472094,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472590,"byte_end":472601,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"column_mean","qualname":"<Matrix<N, R, C, S>>::column_mean","value":"fn (&self) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the columns of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472251,"byte_end":472298,"line_start":290,"line_end":290,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472303,"byte_end":472306,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472311,"byte_end":472324,"line_start":292,"line_end":292,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472329,"byte_end":472332,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472337,"byte_end":472344,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472349,"byte_end":472390,"line_start":295,"line_end":295,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472395,"byte_end":472398,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472403,"byte_end":472444,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472449,"byte_end":472491,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_mean(), Vector2::new(2.0, 5.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472496,"byte_end":472552,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472557,"byte_end":472564,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":472569,"byte_end":472578,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3674},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":473369,"byte_end":473373,"line_start":14,"line_end":14,"column_start":11,"column_end":15},"name":"Norm","qualname":"::base::norm::Norm","value":"Norm<N: ComplexField>","parent":null,"children":[{"krate":0,"index":3676},{"krate":0,"index":3680}],"decl_id":null,"docs":" A trait for abstract matrix norms.","sig":null,"attributes":[{"value":"/ A trait for abstract matrix norms.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":473261,"byte_end":473299,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":473300,"byte_end":473303,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This may be moved to the alga crate in the future.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":473304,"byte_end":473358,"line_start":13,"line_end":13,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":473445,"byte_end":473449,"line_start":16,"line_end":16,"column_start":8,"column_end":12},"name":"norm","qualname":"::base::norm::Norm::norm","value":"fn <R, C, S> (&self, m: &Matrix<N, R, C, S>) -> N::RealField","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":" Apply this norm to the given matrix.\n","sig":null,"attributes":[{"value":"/ Apply this norm to the given matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":473397,"byte_end":473437,"line_start":15,"line_end":15,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":473671,"byte_end":473686,"line_start":19,"line_end":19,"column_start":8,"column_end":23},"name":"metric_distance","qualname":"::base::norm::Norm::metric_distance","value":"fn <R1, C1, S1, R2, C2, S2> (&self, m1: &Matrix<N, R1, C1, S1>, m2: &Matrix<N, R2, C2, S2>) -> N::RealField","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":" Use the metric induced by this norm to compute the metric distance between the two given matrices.\n","sig":null,"attributes":[{"value":"/ Use the metric induced by this norm to compute the metric distance between the two given matrices.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":473561,"byte_end":473663,"line_start":18,"line_end":18,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":3687},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":474023,"byte_end":474036,"line_start":26,"line_end":26,"column_start":12,"column_end":25},"name":"EuclideanNorm","qualname":"::base::norm::EuclideanNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Euclidean norm.\n","sig":null,"attributes":[{"value":"/ Euclidean norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":473992,"byte_end":474011,"line_start":25,"line_end":25,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3689},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":474062,"byte_end":474068,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"LpNorm","qualname":"::base::norm::LpNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lp norm.\n","sig":null,"attributes":[{"value":"/ Lp norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":474038,"byte_end":474050,"line_start":27,"line_end":27,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":3692},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":474170,"byte_end":474181,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"UniformNorm","qualname":"::base::norm::UniformNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.\n","sig":null,"attributes":[{"value":"/ L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":474079,"byte_end":474158,"line_start":29,"line_end":29,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":476885,"byte_end":476897,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Matrix<N, R, C, S>>::norm_squared","value":"fn (&self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The squared L2 norm of this vector.\n","sig":null,"attributes":[{"value":"/ The squared L2 norm of this vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":476820,"byte_end":476859,"line_start":99,"line_end":99,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":476864,"byte_end":476873,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477231,"byte_end":477235,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"norm","qualname":"<Matrix<N, R, C, S>>::norm","value":"fn (&self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The L2 norm of this matrix.","sig":null,"attributes":[{"value":"/ The L2 norm of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477116,"byte_end":477147,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477152,"byte_end":477155,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_norm` to apply a custom norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477160,"byte_end":477205,"line_start":114,"line_end":114,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477210,"byte_end":477219,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3745},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477499,"byte_end":477514,"line_start":124,"line_end":124,"column_start":12,"column_end":27},"name":"metric_distance","qualname":"<Matrix<N, R, C, S>>::metric_distance","value":"fn <R2, C2, S2> (&self, rhs: &Matrix<N, R2, C2, S2>) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","sig":null,"attributes":[{"value":"/ Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477307,"byte_end":477404,"line_start":120,"line_end":120,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477409,"byte_end":477412,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_metric_distance` to apply a custom norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477417,"byte_end":477473,"line_start":122,"line_end":122,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477478,"byte_end":477487,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478216,"byte_end":478226,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"apply_norm","qualname":"<Matrix<N, R, C, S>>::apply_norm","value":"fn (&self, norm: &impl Norm<N>) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" Uses the given `norm` to compute the norm of `self`.","sig":null,"attributes":[{"value":"/ Uses the given `norm` to compute the norm of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477788,"byte_end":477844,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477849,"byte_end":477852,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477857,"byte_end":477870,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477875,"byte_end":477878,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477883,"byte_end":477890,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477895,"byte_end":477961,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477966,"byte_end":477969,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let v = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":477974,"byte_end":478014,"line_start":137,"line_end":137,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v.apply_norm(&UniformNorm), 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478019,"byte_end":478067,"line_start":138,"line_end":138,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(v.apply_norm(&LpNorm(1)), 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478072,"byte_end":478118,"line_start":139,"line_end":139,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(v.apply_norm(&EuclideanNorm), v.norm());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478123,"byte_end":478178,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478183,"byte_end":478190,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478195,"byte_end":478204,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478916,"byte_end":478937,"line_start":162,"line_end":162,"column_start":12,"column_end":33},"name":"apply_metric_distance","qualname":"<Matrix<N, R, C, S>>::apply_metric_distance","value":"fn <R2, C2, S2> (&self, rhs: &Matrix<N, R2, C2, S2>, norm: &impl Norm<N>) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478308,"byte_end":478412,"line_start":147,"line_end":147,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478417,"byte_end":478420,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478425,"byte_end":478438,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478443,"byte_end":478446,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478451,"byte_end":478458,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478463,"byte_end":478529,"line_start":152,"line_end":152,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478534,"byte_end":478537,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478542,"byte_end":478583,"line_start":154,"line_end":154,"column_start":5,"column_end":46}},{"value":"/ let v2 = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478588,"byte_end":478632,"line_start":155,"line_end":155,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478637,"byte_end":478640,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &UniformNorm), 27.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478645,"byte_end":478711,"line_start":157,"line_end":157,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &LpNorm(1)), 27.0 + 18.0 + 9.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478716,"byte_end":478793,"line_start":158,"line_end":158,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &EuclideanNorm), (v1 - v2).norm());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478798,"byte_end":478878,"line_start":159,"line_end":159,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478883,"byte_end":478890,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":478895,"byte_end":478904,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479390,"byte_end":479399,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Matrix<N, R, C, S>>::magnitude","value":"fn (&self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479216,"byte_end":479258,"line_start":168,"line_end":168,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479263,"byte_end":479266,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479271,"byte_end":479290,"line_start":170,"line_end":170,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479295,"byte_end":479298,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm()`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479303,"byte_end":479364,"line_start":172,"line_end":172,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479369,"byte_end":479378,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3757},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479654,"byte_end":479671,"line_start":184,"line_end":184,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Matrix<N, R, C, S>>::magnitude_squared","value":"fn (&self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479456,"byte_end":479506,"line_start":178,"line_end":178,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479511,"byte_end":479514,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479519,"byte_end":479546,"line_start":180,"line_end":180,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479551,"byte_end":479554,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm_squared()`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479559,"byte_end":479628,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479633,"byte_end":479642,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479810,"byte_end":479819,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Matrix<N, R, C, S>>::normalize","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479736,"byte_end":479784,"line_start":188,"line_end":188,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479789,"byte_end":479798,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480065,"byte_end":480078,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"try_normalize","qualname":"<Matrix<N, R, C, S>>::try_normalize","value":"fn (&self, min_norm: N::RealField) -> Option<MatrixMN<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.\n","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":479946,"byte_end":480039,"line_start":195,"line_end":195,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480044,"byte_end":480053,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3760},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480395,"byte_end":480402,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"lp_norm","qualname":"<Matrix<N, R, C, S>>::lp_norm","value":"fn (&self, p: i32) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The Lp norm of this matrix.\n","sig":null,"attributes":[{"value":"/ The Lp norm of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480338,"byte_end":480369,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480374,"byte_end":480383,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3766},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480652,"byte_end":480665,"line_start":219,"line_end":219,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Matrix<N, R, C, S>>::normalize_mut","value":"fn (&mut self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place and returns its norm.\n","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place and returns its norm.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480569,"byte_end":480626,"line_start":217,"line_end":217,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480631,"byte_end":480640,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480981,"byte_end":480998,"line_start":230,"line_end":230,"column_start":12,"column_end":29},"name":"try_normalize_mut","qualname":"<Matrix<N, R, C, S>>::try_normalize_mut","value":"fn (&mut self, min_norm: N::RealField) -> Option<N::RealField>","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480775,"byte_end":480868,"line_start":226,"line_end":226,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480873,"byte_end":480876,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If the normalization succeeded, returns the old normal of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480881,"byte_end":480955,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480960,"byte_end":480969,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3768},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/helper.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"helper","qualname":"::base::helper","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/helper.rs","parent":null,"children":[{"krate":0,"index":3769},{"krate":0,"index":3772},{"krate":0,"index":3773}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3773},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/helper.rs","byte_start":481693,"byte_end":481704,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"reject_rand","qualname":"::base::helper::reject_rand","value":"fn <G, F, T> (g: &mut G, f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/helper.rs","byte_start":481676,"byte_end":481685,"line_start":19,"line_end":19,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":3790},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geometry","qualname":"::geometry","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","parent":null,"children":[{"krate":0,"index":3791},{"krate":0,"index":3798},{"krate":0,"index":3875},{"krate":0,"index":3917},{"krate":0,"index":3938},{"krate":0,"index":3984},{"krate":0,"index":4027},{"krate":0,"index":4052},{"krate":0,"index":4117},{"krate":0,"index":4200},{"krate":0,"index":4281},{"krate":0,"index":4290},{"krate":0,"index":4312},{"krate":0,"index":4409},{"krate":0,"index":4447},{"krate":0,"index":4543},{"krate":0,"index":4706},{"krate":0,"index":4828},{"krate":0,"index":4923},{"krate":0,"index":5007},{"krate":0,"index":5022},{"krate":0,"index":5072},{"krate":0,"index":5128},{"krate":0,"index":5201},{"krate":0,"index":5254},{"krate":0,"index":5327},{"krate":0,"index":5435},{"krate":0,"index":5517},{"krate":0,"index":5598},{"krate":0,"index":5619},{"krate":0,"index":5657},{"krate":0,"index":5732},{"krate":0,"index":5757},{"krate":0,"index":5782},{"krate":0,"index":5876},{"krate":0,"index":5959},{"krate":0,"index":5977},{"krate":0,"index":6035},{"krate":0,"index":6101},{"krate":0,"index":6130},{"krate":0,"index":6232},{"krate":0,"index":6311},{"krate":0,"index":6329},{"krate":0,"index":6385},{"krate":0,"index":6442},{"krate":0,"index":6471},{"krate":0,"index":6486},{"krate":0,"index":6615},{"krate":0,"index":6674},{"krate":0,"index":6695},{"krate":0,"index":6719},{"krate":0,"index":6758},{"krate":0,"index":6812},{"krate":0,"index":6865},{"krate":0,"index":6938},{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":7007},{"krate":0,"index":7008},{"krate":0,"index":7009},{"krate":0,"index":7010},{"krate":0,"index":7011},{"krate":0,"index":7012},{"krate":0,"index":7013},{"krate":0,"index":7014},{"krate":0,"index":7015},{"krate":0,"index":7016},{"krate":0,"index":7017},{"krate":0,"index":7018},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":7021}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for points and usual transformations\n (rotations, isometries, etc.)\n","sig":null,"attributes":[{"value":"! [Reexported at the root of this crate.] Data structures for points and usual transformations","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":481880,"byte_end":481976,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"! (rotations, isometries, etc.)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/mod.rs","byte_start":481977,"byte_end":482010,"line_start":2,"line_end":2,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":17165},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":493017,"byte_end":493022,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::point::Point","value":"Point { coords }","parent":null,"children":[{"krate":0,"index":17168}],"decl_id":null,"docs":" A point in a n-dimensional euclidean space.\n","sig":null,"attributes":[{"value":"/ A point in a n-dimensional euclidean space.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":492923,"byte_end":492970,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":492971,"byte_end":492981,"line_start":21,"line_end":21,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":17168},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":493168,"byte_end":493174,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::point::Point::coords","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":17165},"children":[],"decl_id":null,"docs":" The coordinates of this point, i.e., the shift from the origin.\n","sig":null,"attributes":[{"value":"/ The coordinates of this point, i.e., the shift from the origin.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":493092,"byte_end":493159,"line_start":26,"line_end":26,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3831},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495577,"byte_end":495591,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Point<N, D>>::to_homogeneous","value":"fn (&self) -> VectorN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the\n end of it.","sig":null,"attributes":[{"value":"/ Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":494999,"byte_end":495091,"line_start":97,"line_end":97,"column_start":5,"column_end":97}},{"value":"/ end of it.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495096,"byte_end":495110,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495115,"byte_end":495118,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is the same as `.into()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495123,"byte_end":495157,"line_start":100,"line_end":100,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495162,"byte_end":495165,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495170,"byte_end":495183,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495188,"byte_end":495195,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495200,"byte_end":495255,"line_start":104,"line_end":104,"column_start":5,"column_end":60}},{"value":"/ let p = Point2::new(10.0, 20.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495260,"byte_end":495296,"line_start":105,"line_end":105,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector3::new(10.0, 20.0, 1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495301,"byte_end":495367,"line_start":106,"line_end":106,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495372,"byte_end":495375,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495380,"byte_end":495415,"line_start":108,"line_end":108,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495420,"byte_end":495462,"line_start":109,"line_end":109,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector4::new(10.0, 20.0, 30.0, 1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495467,"byte_end":495539,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495544,"byte_end":495551,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495556,"byte_end":495565,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3832},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496106,"byte_end":496122,"line_start":129,"line_end":129,"column_start":12,"column_end":28},"name":"from_coordinates","qualname":"<Point<N, D>>::from_coordinates","value":"fn (coords: VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with the given coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with the given coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":495968,"byte_end":496019,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"Use Point::from(vector) instead.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496024,"byte_end":496080,"line_start":127,"line_end":127,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496085,"byte_end":496094,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3833},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496547,"byte_end":496550,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"len","qualname":"<Point<N, D>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The dimension of this point.","sig":null,"attributes":[{"value":"/ The dimension of this point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496199,"byte_end":496231,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496236,"byte_end":496239,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496244,"byte_end":496257,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496262,"byte_end":496269,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496274,"byte_end":496311,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496316,"byte_end":496350,"line_start":138,"line_end":138,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.len(), 2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496355,"byte_end":496382,"line_start":139,"line_end":139,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496387,"byte_end":496390,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496395,"byte_end":496430,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496435,"byte_end":496477,"line_start":142,"line_end":142,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.len(), 3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496482,"byte_end":496509,"line_start":143,"line_end":143,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496514,"byte_end":496521,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496526,"byte_end":496535,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3834},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496839,"byte_end":496845,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"stride","qualname":"<Point<N, D>>::stride","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The stride of this point. This is the number of buffer element separating each component of\n this point.\n","sig":null,"attributes":[{"value":"/ The stride of this point. This is the number of buffer element separating each component of","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496606,"byte_end":496701,"line_start":150,"line_end":150,"column_start":5,"column_end":100}},{"value":"/ this point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496706,"byte_end":496721,"line_start":151,"line_end":151,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496726,"byte_end":496735,"line_start":152,"line_end":152,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This methods is no longer significant and will always return 1.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496740,"byte_end":496827,"line_start":153,"line_end":153,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":3835},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497302,"byte_end":497306,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"iter","qualname":"<Point<N, D>>::iter","value":"fn (&self) -> MatrixIter<N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Iterates through this point coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496907,"byte_end":496951,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496956,"byte_end":496959,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496964,"byte_end":496977,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496982,"byte_end":496989,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":496994,"byte_end":497021,"line_start":162,"line_end":162,"column_start":5,"column_end":32}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497026,"byte_end":497065,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ let mut it = p.iter().cloned();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497070,"byte_end":497105,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497110,"byte_end":497113,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(it.next(), Some(1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497118,"byte_end":497155,"line_start":166,"line_end":166,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(2.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497160,"byte_end":497197,"line_start":167,"line_end":167,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497202,"byte_end":497239,"line_start":168,"line_end":168,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), None);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497244,"byte_end":497276,"line_start":169,"line_end":169,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497281,"byte_end":497290,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3836},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497532,"byte_end":497545,"line_start":177,"line_end":177,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Point<N, D>>::get_unchecked","value":"fn (&self, i: usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to i-th element of this point without bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497425,"byte_end":497499,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497504,"byte_end":497513,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3837},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497952,"byte_end":497960,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Point<N, D>>::iter_mut","value":"fn (&mut self) -> MatrixIterMut<N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Mutably iterates through this point coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497620,"byte_end":497672,"line_start":181,"line_end":181,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497677,"byte_end":497680,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497685,"byte_end":497698,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497703,"byte_end":497710,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497715,"byte_end":497742,"line_start":185,"line_end":185,"column_start":5,"column_end":32}},{"value":"/ let mut p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497747,"byte_end":497790,"line_start":186,"line_end":186,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497795,"byte_end":497798,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ for e in p.iter_mut() {","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497803,"byte_end":497830,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/     *e *= 10.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497835,"byte_end":497854,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497859,"byte_end":497864,"line_start":190,"line_end":190,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497869,"byte_end":497872,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p, Point3::new(10.0, 20.0, 30.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497877,"byte_end":497926,"line_start":192,"line_end":192,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":497931,"byte_end":497940,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3838},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":498220,"byte_end":498237,"line_start":202,"line_end":202,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Point<N, D>>::get_unchecked_mut","value":"fn (&mut self, i: usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to i-th element of this point without bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":498105,"byte_end":498187,"line_start":200,"line_end":200,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":498192,"byte_end":498201,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":498402,"byte_end":498416,"line_start":208,"line_end":208,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Point<N, D>>::swap_unchecked","value":"fn (&mut self, i1: usize, i2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":498324,"byte_end":498369,"line_start":206,"line_end":206,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":498374,"byte_end":498383,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":3926},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503127,"byte_end":503133,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Point1","qualname":"::geometry::point_alias::Point1","value":"Point<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 1-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 1-dimensional column point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503067,"byte_end":503117,"line_start":5,"line_end":5,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":3928},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503213,"byte_end":503219,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Point2","qualname":"::geometry::point_alias::Point2","value":"Point<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 2-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 2-dimensional column point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503153,"byte_end":503203,"line_start":7,"line_end":7,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":3930},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503299,"byte_end":503305,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Point3","qualname":"::geometry::point_alias::Point3","value":"Point<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 3-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 3-dimensional column point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503239,"byte_end":503289,"line_start":9,"line_end":9,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":3932},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503385,"byte_end":503391,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Point4","qualname":"::geometry::point_alias::Point4","value":"Point<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 4-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 4-dimensional column point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503325,"byte_end":503375,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":3934},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503471,"byte_end":503477,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Point5","qualname":"::geometry::point_alias::Point5","value":"Point<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 5-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 5-dimensional column point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503411,"byte_end":503461,"line_start":13,"line_end":13,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":3936},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503557,"byte_end":503563,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Point6","qualname":"::geometry::point_alias::Point6","value":"Point<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 6-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 6-dimensional column point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alias.rs","byte_start":503497,"byte_end":503547,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504161,"byte_end":504178,"line_start":20,"line_end":20,"column_start":19,"column_end":36},"name":"new_uninitialized","qualname":"<Point<N, D>>::new_uninitialized","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with uninitialized coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with uninitialized coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504073,"byte_end":504128,"line_start":18,"line_end":18,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504133,"byte_end":504142,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3968},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504807,"byte_end":504813,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point<N, D>>::origin","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with all coordinates equal to zero.","sig":null,"attributes":[{"value":"/ Creates a new point with all coordinates equal to zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504251,"byte_end":504310,"line_start":24,"line_end":24,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504315,"byte_end":504318,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504323,"byte_end":504336,"line_start":26,"line_end":26,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504341,"byte_end":504344,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504349,"byte_end":504356,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504361,"byte_end":504398,"line_start":29,"line_end":29,"column_start":5,"column_end":42}},{"value":"/ // This works in any dimension.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504403,"byte_end":504438,"line_start":30,"line_end":30,"column_start":5,"column_end":40}},{"value":"/ // The explicit crate::<f32> type annotation may not always be needed,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504443,"byte_end":504517,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ // depending on the context of type inference.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504522,"byte_end":504572,"line_start":32,"line_end":32,"column_start":5,"column_end":55}},{"value":"/ let pt = Point2::<f32>::origin();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504577,"byte_end":504614,"line_start":33,"line_end":33,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504619,"byte_end":504659,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504664,"byte_end":504667,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::<f32>::origin();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504672,"byte_end":504709,"line_start":36,"line_end":36,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0 && pt.z == 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504714,"byte_end":504769,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504774,"byte_end":504781,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504786,"byte_end":504795,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505317,"byte_end":505327,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Point<N, D>>::from_slice","value":"fn (components: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from a slice.","sig":null,"attributes":[{"value":"/ Creates a new point from a slice.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504908,"byte_end":504945,"line_start":45,"line_end":45,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504950,"byte_end":504953,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504958,"byte_end":504971,"line_start":47,"line_end":47,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504976,"byte_end":504979,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504984,"byte_end":504991,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504996,"byte_end":505033,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/ let data = [ 1.0, 2.0, 3.0 ];","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505038,"byte_end":505071,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505076,"byte_end":505079,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::from_slice(&data[..2]);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505084,"byte_end":505128,"line_start":53,"line_end":53,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(pt, Point2::new(1.0, 2.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505133,"byte_end":505175,"line_start":54,"line_end":54,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505180,"byte_end":505183,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::from_slice(&data);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505188,"byte_end":505227,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(pt, Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505232,"byte_end":505279,"line_start":57,"line_end":57,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505284,"byte_end":505291,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505296,"byte_end":505305,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3970},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506684,"byte_end":506700,"line_start":95,"line_end":95,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Point<N, D>>::from_homogeneous","value":"fn (v: VectorN<N, DimNameSum<D, U1>>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from its homogeneous vector representation.","sig":null,"attributes":[{"value":"/ Creates a new point from its homogeneous vector representation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505423,"byte_end":505490,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505495,"byte_end":505498,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ In practice, this builds a D-dimensional points with the same first D component as `v`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505503,"byte_end":505593,"line_start":66,"line_end":66,"column_start":5,"column_end":95}},{"value":"/ divided by the last component of `v`. Returns `None` if this divisor is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505598,"byte_end":505679,"line_start":67,"line_end":67,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505684,"byte_end":505687,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505692,"byte_end":505705,"line_start":69,"line_end":69,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505710,"byte_end":505713,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505718,"byte_end":505725,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505730,"byte_end":505785,"line_start":72,"line_end":72,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505790,"byte_end":505793,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505798,"byte_end":505848,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505853,"byte_end":505899,"line_start":75,"line_end":75,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(1.0, 2.0, 3.0)));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505904,"byte_end":505957,"line_start":76,"line_end":76,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505962,"byte_end":505965,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ // All component of the result will be divided by the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":505970,"byte_end":506027,"line_start":78,"line_end":78,"column_start":5,"column_end":62}},{"value":"/ // last component of the vector, here 2.0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506032,"byte_end":506079,"line_start":79,"line_end":79,"column_start":5,"column_end":51}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506084,"byte_end":506134,"line_start":80,"line_end":80,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506139,"byte_end":506185,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(0.5, 1.0, 1.5)));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506190,"byte_end":506243,"line_start":82,"line_end":82,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506248,"byte_end":506251,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Fails because the last component is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506256,"byte_end":506304,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506309,"byte_end":506359,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506364,"byte_end":506410,"line_start":86,"line_end":86,"column_start":5,"column_end":51}},{"value":"/ assert!(pt.is_none());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506415,"byte_end":506441,"line_start":87,"line_end":87,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506446,"byte_end":506449,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ // Works also in other dimensions.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506454,"byte_end":506492,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/ let coords = Vector3::new(1.0, 2.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506497,"byte_end":506542,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/ let pt = Point2::from_homogeneous(coords);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506547,"byte_end":506593,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point2::new(1.0, 2.0)));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506598,"byte_end":506646,"line_start":92,"line_end":92,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506651,"byte_end":506658,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":506663,"byte_end":506672,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17555},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":524333,"byte_end":524341,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"Rotation","qualname":"::geometry::rotation::Rotation","value":"Rotation {  }","parent":null,"children":[{"krate":0,"index":17558}],"decl_id":null,"docs":" A rotation matrix.\n","sig":null,"attributes":[{"value":"/ A rotation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":524271,"byte_end":524293,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":524294,"byte_end":524304,"line_start":25,"line_end":25,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":4155},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527320,"byte_end":527326,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Rotation<N, D>>::matrix","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix representation of this rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526516,"byte_end":526589,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526594,"byte_end":526597,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526602,"byte_end":526615,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526620,"byte_end":526627,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526632,"byte_end":526702,"line_start":115,"line_end":115,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526707,"byte_end":526726,"line_start":116,"line_end":116,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526731,"byte_end":526816,"line_start":117,"line_end":117,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526821,"byte_end":526879,"line_start":118,"line_end":118,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526884,"byte_end":526942,"line_start":119,"line_end":119,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526947,"byte_end":527006,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527011,"byte_end":527051,"line_start":121,"line_end":121,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527056,"byte_end":527059,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527064,"byte_end":527067,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527072,"byte_end":527125,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527130,"byte_end":527178,"line_start":125,"line_end":125,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527183,"byte_end":527237,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527242,"byte_end":527282,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527287,"byte_end":527294,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527299,"byte_end":527308,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4156},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527567,"byte_end":527577,"line_start":137,"line_end":137,"column_start":19,"column_end":29},"name":"matrix_mut","qualname":"<Rotation<N, D>>::matrix_mut","value":"fn (&mut self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527386,"byte_end":527467,"line_start":134,"line_end":134,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527472,"byte_end":527481,"line_start":135,"line_end":135,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `.matrix_mut_unchecked()` instead.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527486,"byte_end":527548,"line_start":136,"line_end":136,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4157},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528016,"byte_end":528036,"line_start":147,"line_end":147,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Rotation<N, D>>::matrix_mut_unchecked","value":"fn (&mut self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527649,"byte_end":527730,"line_start":141,"line_end":141,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527735,"byte_end":527738,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This is suffixed by \"_unchecked\" because this allows the user to replace the matrix by another one that is","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527743,"byte_end":527853,"line_start":143,"line_end":143,"column_start":5,"column_end":115}},{"value":"/ non-square, non-inversible, or non-orthonormal. If one of those properties is broken,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527858,"byte_end":527947,"line_start":144,"line_end":144,"column_start":5,"column_end":94}},{"value":"/ subsequent method calls may be UB.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527952,"byte_end":527990,"line_start":145,"line_end":145,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":527995,"byte_end":528004,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4158},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528925,"byte_end":528935,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Rotation<N, D>>::into_inner","value":"fn (self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528108,"byte_end":528142,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528147,"byte_end":528150,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528155,"byte_end":528168,"line_start":153,"line_end":153,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528173,"byte_end":528180,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528185,"byte_end":528255,"line_start":155,"line_end":155,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528260,"byte_end":528279,"line_start":156,"line_end":156,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528284,"byte_end":528369,"line_start":157,"line_end":157,"column_start":5,"column_end":90}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528374,"byte_end":528405,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528410,"byte_end":528468,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528473,"byte_end":528531,"line_start":160,"line_end":160,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528536,"byte_end":528595,"line_start":161,"line_end":161,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528600,"byte_end":528630,"line_start":162,"line_end":162,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528635,"byte_end":528638,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528643,"byte_end":528646,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528651,"byte_end":528704,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528709,"byte_end":528740,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528745,"byte_end":528793,"line_start":167,"line_end":167,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528798,"byte_end":528852,"line_start":168,"line_end":168,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528857,"byte_end":528887,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528892,"byte_end":528899,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528904,"byte_end":528913,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4159},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529162,"byte_end":529168,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Rotation<N, D>>::unwrap","value":"fn (self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.\n Deprecated: Use [Rotation::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":528992,"byte_end":529026,"line_start":176,"line_end":176,"column_start":5,"column_end":39}},{"value":"/ Deprecated: Use [Rotation::into_inner] instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529031,"byte_end":529082,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529087,"byte_end":529136,"line_start":178,"line_end":178,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529141,"byte_end":529150,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4160},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":530263,"byte_end":530277,"line_start":207,"line_end":207,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Rotation<N, D>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this rotation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this rotation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529225,"byte_end":529306,"line_start":184,"line_end":184,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529311,"byte_end":529314,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.into()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529319,"byte_end":529357,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529362,"byte_end":529365,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529370,"byte_end":529383,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529388,"byte_end":529395,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix3, Matrix4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529400,"byte_end":529470,"line_start":190,"line_end":190,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529475,"byte_end":529494,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529499,"byte_end":529584,"line_start":192,"line_end":192,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529589,"byte_end":529652,"line_start":193,"line_end":193,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529657,"byte_end":529720,"line_start":194,"line_end":194,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529725,"byte_end":529788,"line_start":195,"line_end":195,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529793,"byte_end":529857,"line_start":196,"line_end":196,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529862,"byte_end":529909,"line_start":197,"line_end":197,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529914,"byte_end":529917,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529922,"byte_end":529925,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529930,"byte_end":529983,"line_start":200,"line_end":200,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":529988,"byte_end":530046,"line_start":201,"line_end":201,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":530051,"byte_end":530109,"line_start":202,"line_end":202,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":530114,"byte_end":530173,"line_start":203,"line_end":203,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":530178,"byte_end":530225,"line_start":204,"line_end":204,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":530230,"byte_end":530237,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":530242,"byte_end":530251,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4161},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531652,"byte_end":531673,"line_start":245,"line_end":245,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Rotation<N, D>>::from_matrix_unchecked","value":"fn (matrix: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from the given square matrix.","sig":null,"attributes":[{"value":"/ Creates a new rotation from the given square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":530850,"byte_end":530906,"line_start":222,"line_end":222,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":530911,"byte_end":530914,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ The matrix squareness is checked but not its orthonormality.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":530919,"byte_end":530983,"line_start":224,"line_end":224,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":530988,"byte_end":530991,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":530996,"byte_end":531009,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531014,"byte_end":531021,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Matrix2, Matrix3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531026,"byte_end":531087,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531092,"byte_end":531111,"line_start":229,"line_end":229,"column_start":5,"column_end":24}},{"value":"/ let mat = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531116,"byte_end":531169,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/                        0.5,       0.8660254, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531174,"byte_end":531227,"line_start":231,"line_end":231,"column_start":5,"column_end":58}},{"value":"/                        0.0,       0.0,       1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531232,"byte_end":531286,"line_start":232,"line_end":232,"column_start":5,"column_end":59}},{"value":"/ let rot = Rotation3::from_matrix_unchecked(mat);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531291,"byte_end":531343,"line_start":233,"line_end":233,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531348,"byte_end":531351,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531356,"byte_end":531391,"line_start":235,"line_end":235,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531396,"byte_end":531399,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531404,"byte_end":531407,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531412,"byte_end":531455,"line_start":238,"line_end":238,"column_start":5,"column_end":48}},{"value":"/                        0.5,       0.8660254);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531460,"byte_end":531509,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/ let rot = Rotation2::from_matrix_unchecked(mat);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531514,"byte_end":531566,"line_start":240,"line_end":240,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531571,"byte_end":531574,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531579,"byte_end":531614,"line_start":242,"line_end":242,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531619,"byte_end":531626,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531631,"byte_end":531640,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4162},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532696,"byte_end":532705,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Rotation<N, D>>::transpose","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531879,"byte_end":531901,"line_start":254,"line_end":254,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531906,"byte_end":531909,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":531914,"byte_end":531997,"line_start":256,"line_end":256,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532002,"byte_end":532005,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532010,"byte_end":532023,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532028,"byte_end":532035,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532040,"byte_end":532079,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532084,"byte_end":532136,"line_start":261,"line_end":261,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532141,"byte_end":532199,"line_start":262,"line_end":262,"column_start":5,"column_end":63}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532204,"byte_end":532237,"line_start":263,"line_end":263,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532242,"byte_end":532321,"line_start":264,"line_end":264,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532326,"byte_end":532405,"line_start":265,"line_end":265,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532410,"byte_end":532413,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532418,"byte_end":532452,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532457,"byte_end":532490,"line_start":268,"line_end":268,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532495,"byte_end":532574,"line_start":269,"line_end":269,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532579,"byte_end":532658,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532663,"byte_end":532670,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532675,"byte_end":532684,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4163},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533589,"byte_end":533596,"line_start":296,"line_end":296,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation<N, D>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532795,"byte_end":532814,"line_start":277,"line_end":277,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532819,"byte_end":532822,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532827,"byte_end":532912,"line_start":279,"line_end":279,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532917,"byte_end":532920,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532925,"byte_end":532938,"line_start":281,"line_end":281,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532943,"byte_end":532950,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532955,"byte_end":532994,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":532999,"byte_end":533051,"line_start":284,"line_end":284,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533056,"byte_end":533114,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533119,"byte_end":533147,"line_start":286,"line_end":286,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533152,"byte_end":533228,"line_start":287,"line_end":287,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533233,"byte_end":533309,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533314,"byte_end":533317,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533322,"byte_end":533356,"line_start":290,"line_end":290,"column_start":5,"column_end":39}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533361,"byte_end":533389,"line_start":291,"line_end":291,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533394,"byte_end":533470,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533475,"byte_end":533551,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533556,"byte_end":533563,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533568,"byte_end":533577,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4164},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534600,"byte_end":534613,"line_start":323,"line_end":323,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Rotation<N, D>>::transpose_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` in-place.","sig":null,"attributes":[{"value":"/ Transposes `self` in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533650,"byte_end":533681,"line_start":300,"line_end":300,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533686,"byte_end":533689,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533694,"byte_end":533781,"line_start":302,"line_end":302,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533786,"byte_end":533789,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533794,"byte_end":533807,"line_start":304,"line_end":304,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533812,"byte_end":533819,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533824,"byte_end":533863,"line_start":306,"line_end":306,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533868,"byte_end":533920,"line_start":307,"line_end":307,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533925,"byte_end":533983,"line_start":308,"line_end":308,"column_start":5,"column_end":63}},{"value":"/ let mut tr_rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":533988,"byte_end":534053,"line_start":309,"line_end":309,"column_start":5,"column_end":70}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534058,"byte_end":534085,"line_start":310,"line_end":310,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534090,"byte_end":534093,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534098,"byte_end":534177,"line_start":312,"line_end":312,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534182,"byte_end":534261,"line_start":313,"line_end":313,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534266,"byte_end":534269,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534274,"byte_end":534308,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/ let mut tr_rot = Rotation2::new(1.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534313,"byte_end":534354,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534359,"byte_end":534386,"line_start":317,"line_end":317,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534391,"byte_end":534394,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534399,"byte_end":534478,"line_start":319,"line_end":319,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534483,"byte_end":534562,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534567,"byte_end":534574,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534579,"byte_end":534588,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4165},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535595,"byte_end":535606,"line_start":350,"line_end":350,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Rotation<N, D>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534674,"byte_end":534702,"line_start":327,"line_end":327,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534707,"byte_end":534710,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534715,"byte_end":534804,"line_start":329,"line_end":329,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534809,"byte_end":534812,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534817,"byte_end":534830,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534835,"byte_end":534842,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534847,"byte_end":534886,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534891,"byte_end":534943,"line_start":334,"line_end":334,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":534948,"byte_end":535006,"line_start":335,"line_end":335,"column_start":5,"column_end":63}},{"value":"/ let mut inv = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535011,"byte_end":535073,"line_start":336,"line_end":336,"column_start":5,"column_end":67}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535078,"byte_end":535100,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535105,"byte_end":535108,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535113,"byte_end":535189,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535194,"byte_end":535270,"line_start":340,"line_end":340,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535275,"byte_end":535278,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535283,"byte_end":535317,"line_start":342,"line_end":342,"column_start":5,"column_end":39}},{"value":"/ let mut inv = Rotation2::new(1.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535322,"byte_end":535360,"line_start":343,"line_end":343,"column_start":5,"column_end":43}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535365,"byte_end":535387,"line_start":344,"line_end":344,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535392,"byte_end":535395,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535400,"byte_end":535476,"line_start":346,"line_end":346,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535481,"byte_end":535557,"line_start":347,"line_end":347,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535562,"byte_end":535569,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535574,"byte_end":535583,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4169},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536349,"byte_end":536364,"line_start":373,"line_end":373,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Rotation<N, D>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point.","sig":null,"attributes":[{"value":"/ Rotate the given point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535771,"byte_end":535798,"line_start":358,"line_end":358,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535803,"byte_end":535806,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535811,"byte_end":535866,"line_start":360,"line_end":360,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535871,"byte_end":535874,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535879,"byte_end":535892,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535897,"byte_end":535904,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535909,"byte_end":535948,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535953,"byte_end":535972,"line_start":365,"line_end":365,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535977,"byte_end":536053,"line_start":366,"line_end":366,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536058,"byte_end":536126,"line_start":367,"line_end":367,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536131,"byte_end":536208,"line_start":368,"line_end":368,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536213,"byte_end":536216,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536221,"byte_end":536311,"line_start":370,"line_end":370,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536316,"byte_end":536323,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536328,"byte_end":536337,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4170},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537011,"byte_end":537027,"line_start":392,"line_end":392,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Rotation<N, D>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536436,"byte_end":536464,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536469,"byte_end":536472,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536477,"byte_end":536531,"line_start":379,"line_end":379,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536536,"byte_end":536539,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536544,"byte_end":536557,"line_start":381,"line_end":381,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536562,"byte_end":536569,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536574,"byte_end":536613,"line_start":383,"line_end":383,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536618,"byte_end":536637,"line_start":384,"line_end":384,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536642,"byte_end":536710,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536715,"byte_end":536783,"line_start":386,"line_end":386,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536788,"byte_end":536868,"line_start":387,"line_end":387,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536873,"byte_end":536876,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536881,"byte_end":536973,"line_start":389,"line_end":389,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536978,"byte_end":536985,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":536990,"byte_end":536999,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4171},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537754,"byte_end":537777,"line_start":411,"line_end":411,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Rotation<N, D>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n point.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this rotation. This may be","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537101,"byte_end":537172,"line_start":396,"line_end":396,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537177,"byte_end":537248,"line_start":397,"line_end":397,"column_start":5,"column_end":76}},{"value":"/ point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537253,"byte_end":537263,"line_start":398,"line_end":398,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537268,"byte_end":537271,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537276,"byte_end":537289,"line_start":400,"line_end":400,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537294,"byte_end":537301,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537306,"byte_end":537345,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537350,"byte_end":537369,"line_start":403,"line_end":403,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537374,"byte_end":537450,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537455,"byte_end":537523,"line_start":405,"line_end":405,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537528,"byte_end":537613,"line_start":406,"line_end":406,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537618,"byte_end":537621,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537626,"byte_end":537716,"line_start":408,"line_end":408,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537721,"byte_end":537728,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537733,"byte_end":537742,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4172},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538546,"byte_end":538570,"line_start":430,"line_end":430,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Rotation<N, D>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this rotation. This may be","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537894,"byte_end":537966,"line_start":415,"line_end":415,"column_start":5,"column_end":77}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":537971,"byte_end":538042,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538047,"byte_end":538058,"line_start":417,"line_end":417,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538063,"byte_end":538066,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538071,"byte_end":538084,"line_start":419,"line_end":419,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538089,"byte_end":538096,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538101,"byte_end":538140,"line_start":421,"line_end":421,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538145,"byte_end":538164,"line_start":422,"line_end":422,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538169,"byte_end":538237,"line_start":423,"line_end":423,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538242,"byte_end":538310,"line_start":424,"line_end":424,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538315,"byte_end":538403,"line_start":425,"line_end":425,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538408,"byte_end":538411,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538416,"byte_end":538508,"line_start":427,"line_end":427,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538513,"byte_end":538520,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538525,"byte_end":538534,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4286},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alias.rs","byte_start":548033,"byte_end":548042,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"Rotation2","qualname":"::geometry::rotation_alias::Rotation2","value":"Rotation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional rotation matrix.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional rotation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alias.rs","byte_start":547987,"byte_end":548023,"line_start":5,"line_end":5,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":4288},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alias.rs","byte_start":548112,"byte_end":548121,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Rotation3","qualname":"::geometry::rotation_alias::Rotation3","value":"Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional rotation matrix.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional rotation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alias.rs","byte_start":548066,"byte_end":548102,"line_start":8,"line_end":8,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4307},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548857,"byte_end":548865,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation<N, D>>::identity","value":"fn () -> Rotation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new square identity rotation of the given `dimension`.","sig":null,"attributes":[{"value":"/ Creates a new square identity rotation of the given `dimension`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548492,"byte_end":548560,"line_start":16,"line_end":16,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548565,"byte_end":548568,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548573,"byte_end":548586,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548591,"byte_end":548598,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548603,"byte_end":548634,"line_start":20,"line_end":20,"column_start":5,"column_end":36}},{"value":"/ let rot1 = Quaternion::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548639,"byte_end":548677,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/ let rot2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548682,"byte_end":548733,"line_start":22,"line_end":22,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548738,"byte_end":548741,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548746,"byte_end":548780,"line_start":24,"line_end":24,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548785,"byte_end":548819,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548824,"byte_end":548831,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548836,"byte_end":548845,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4477},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563501,"byte_end":563504,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation2<N>>::new","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563103,"byte_end":563170,"line_start":24,"line_end":24,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563175,"byte_end":563178,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563183,"byte_end":563196,"line_start":26,"line_end":26,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563201,"byte_end":563204,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563209,"byte_end":563216,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563221,"byte_end":563260,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563265,"byte_end":563284,"line_start":30,"line_end":30,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Point2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563289,"byte_end":563329,"line_start":31,"line_end":31,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563334,"byte_end":563387,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563392,"byte_end":563395,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563400,"byte_end":563477,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563482,"byte_end":563489,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4478},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563926,"byte_end":563942,"line_start":47,"line_end":47,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation2<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563649,"byte_end":563750,"line_start":41,"line_end":41,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563755,"byte_end":563758,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563763,"byte_end":563766,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563771,"byte_end":563842,"line_start":44,"line_end":44,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563847,"byte_end":563900,"line_start":45,"line_end":45,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563905,"byte_end":563914,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4480},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564397,"byte_end":564408,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation2<N>>::from_matrix","value":"fn (m: &Matrix2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564046,"byte_end":564139,"line_start":51,"line_end":51,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564144,"byte_end":564147,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564152,"byte_end":564224,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564229,"byte_end":564278,"line_start":54,"line_end":54,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564283,"byte_end":564385,"line_start":55,"line_end":55,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4481},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":565322,"byte_end":565337,"line_start":72,"line_end":72,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation2<N>>::from_matrix_eps","value":"fn (m: &Matrix2<N>, eps: N, mut max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564522,"byte_end":564615,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564620,"byte_end":564623,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564628,"byte_end":564730,"line_start":62,"line_end":62,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564735,"byte_end":564738,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564743,"byte_end":564759,"line_start":64,"line_end":64,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564764,"byte_end":564767,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564772,"byte_end":564844,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564849,"byte_end":564940,"line_start":67,"line_end":67,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":564945,"byte_end":565048,"line_start":68,"line_end":68,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":565053,"byte_end":565166,"line_start":69,"line_end":69,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `Rotation2::identity()` if no other","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":565171,"byte_end":565270,"line_start":70,"line_end":70,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":565275,"byte_end":565310,"line_start":71,"line_end":71,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4482},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566622,"byte_end":566638,"line_start":111,"line_end":111,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation2<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566048,"byte_end":566121,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566126,"byte_end":566129,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566134,"byte_end":566229,"line_start":98,"line_end":98,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566234,"byte_end":566237,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566242,"byte_end":566255,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566260,"byte_end":566267,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566272,"byte_end":566311,"line_start":102,"line_end":102,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566316,"byte_end":566357,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566362,"byte_end":566397,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566402,"byte_end":566437,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/ let rot = Rotation2::rotation_between(&a, &b);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566442,"byte_end":566492,"line_start":106,"line_end":106,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566497,"byte_end":566533,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566538,"byte_end":566584,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566589,"byte_end":566596,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566601,"byte_end":566610,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567534,"byte_end":567557,"line_start":134,"line_end":134,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation2<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566865,"byte_end":566953,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":566958,"byte_end":566997,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567002,"byte_end":567005,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567010,"byte_end":567023,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567028,"byte_end":567035,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567040,"byte_end":567079,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567084,"byte_end":567125,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567130,"byte_end":567165,"line_start":126,"line_end":126,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567170,"byte_end":567205,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567210,"byte_end":567273,"line_start":128,"line_end":128,"column_start":5,"column_end":68}},{"value":"/ let rot5 = Rotation2::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567278,"byte_end":567341,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567346,"byte_end":567429,"line_start":130,"line_end":130,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567434,"byte_end":567496,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567501,"byte_end":567508,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567513,"byte_end":567522,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4488},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568097,"byte_end":568102,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation2<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle.","sig":null,"attributes":[{"value":"/ The rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567831,"byte_end":567854,"line_start":146,"line_end":146,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567859,"byte_end":567862,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567867,"byte_end":567880,"line_start":148,"line_end":148,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567885,"byte_end":567892,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567897,"byte_end":567936,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567941,"byte_end":567971,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(1.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":567976,"byte_end":568011,"line_start":152,"line_end":152,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568016,"byte_end":568059,"line_start":153,"line_end":153,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568064,"byte_end":568071,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568076,"byte_end":568085,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4489},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568544,"byte_end":568552,"line_start":171,"line_end":171,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation2<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568187,"byte_end":568253,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568258,"byte_end":568261,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568266,"byte_end":568279,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568284,"byte_end":568291,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568296,"byte_end":568335,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568340,"byte_end":568370,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568375,"byte_end":568410,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568415,"byte_end":568450,"line_start":167,"line_end":167,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568455,"byte_end":568506,"line_start":168,"line_end":168,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568511,"byte_end":568518,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568523,"byte_end":568532,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4490},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569182,"byte_end":569193,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation2<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568632,"byte_end":568699,"line_start":175,"line_end":175,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568704,"byte_end":568707,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568712,"byte_end":568783,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568788,"byte_end":568791,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568796,"byte_end":568809,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568814,"byte_end":568821,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568826,"byte_end":568865,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568870,"byte_end":568900,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568905,"byte_end":568940,"line_start":183,"line_end":183,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568945,"byte_end":568980,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":568985,"byte_end":569026,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569031,"byte_end":569034,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569039,"byte_end":569084,"line_start":187,"line_end":187,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569089,"byte_end":569144,"line_start":188,"line_end":188,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569149,"byte_end":569156,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569161,"byte_end":569170,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4491},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569476,"byte_end":569487,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation2<N>>::renormalize","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569268,"byte_end":569356,"line_start":196,"line_end":196,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569361,"byte_end":569450,"line_start":197,"line_end":197,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569455,"byte_end":569464,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570093,"byte_end":570097,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation2<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the angle\n of `self` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the angle","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569681,"byte_end":569774,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ of `self` multiplied by `n`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569779,"byte_end":569811,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569816,"byte_end":569819,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569824,"byte_end":569837,"line_start":210,"line_end":210,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569842,"byte_end":569849,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569854,"byte_end":569893,"line_start":212,"line_end":212,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569898,"byte_end":569928,"line_start":213,"line_end":213,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(0.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569933,"byte_end":569968,"line_start":214,"line_end":214,"column_start":5,"column_end":40}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":569973,"byte_end":570001,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570006,"byte_end":570055,"line_start":216,"line_end":216,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570060,"byte_end":570067,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570072,"byte_end":570081,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4493},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570390,"byte_end":570401,"line_start":228,"line_end":228,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation2<N>>::scaled_axis","value":"fn (&self) -> VectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570168,"byte_end":570226,"line_start":223,"line_end":223,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570231,"byte_end":570234,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570239,"byte_end":570310,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570315,"byte_end":570364,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570369,"byte_end":570378,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4501},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572109,"byte_end":572112,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation3<N>>::new","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3 dimensional rotation matrix from an axis and an angle.","sig":null,"attributes":[{"value":"/ Builds a 3 dimensional rotation matrix from an axis and an angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571087,"byte_end":571156,"line_start":259,"line_end":259,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571161,"byte_end":571164,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571169,"byte_end":571184,"line_start":261,"line_end":261,"column_start":5,"column_end":20}},{"value":"/   * `axisangle` - A vector representing the rotation. Its magnitude is the amount of rotation","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571189,"byte_end":571286,"line_start":262,"line_end":262,"column_start":5,"column_end":102}},{"value":"/   in radian. Its direction is the axis of rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571291,"byte_end":571346,"line_start":263,"line_end":263,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571351,"byte_end":571354,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571359,"byte_end":571372,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571377,"byte_end":571384,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571389,"byte_end":571428,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571433,"byte_end":571452,"line_start":268,"line_end":268,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571457,"byte_end":571506,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571511,"byte_end":571569,"line_start":270,"line_end":270,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571574,"byte_end":571629,"line_start":271,"line_end":271,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571634,"byte_end":571674,"line_start":272,"line_end":272,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571679,"byte_end":571721,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571726,"byte_end":571766,"line_start":274,"line_end":274,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571771,"byte_end":571774,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571779,"byte_end":571860,"line_start":276,"line_end":276,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571865,"byte_end":571948,"line_start":277,"line_end":277,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571953,"byte_end":571956,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571961,"byte_end":572001,"line_start":279,"line_end":279,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::new(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572006,"byte_end":572085,"line_start":280,"line_end":280,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572090,"byte_end":572097,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4503},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572685,"byte_end":572696,"line_start":293,"line_end":293,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation3<N>>::from_matrix","value":"fn (m: &Matrix3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572334,"byte_end":572427,"line_start":288,"line_end":288,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572432,"byte_end":572435,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572440,"byte_end":572512,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572517,"byte_end":572566,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572571,"byte_end":572673,"line_start":292,"line_end":292,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4504},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":573606,"byte_end":573621,"line_start":309,"line_end":309,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation3<N>>::from_matrix_eps","value":"fn (m: &Matrix3<N>, eps: N, mut max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572810,"byte_end":572903,"line_start":297,"line_end":297,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572908,"byte_end":572911,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":572916,"byte_end":573018,"line_start":299,"line_end":299,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":573023,"byte_end":573026,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":573031,"byte_end":573047,"line_start":301,"line_end":301,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":573052,"byte_end":573055,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":573060,"byte_end":573132,"line_start":303,"line_end":303,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":573137,"byte_end":573228,"line_start":304,"line_end":304,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":573233,"byte_end":573336,"line_start":305,"line_end":305,"column_start":5,"column_end":108}},{"value":"/ * `guess`: a guess of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":573341,"byte_end":573450,"line_start":306,"line_end":306,"column_start":5,"column_end":114}},{"value":"/           to the actual solution is provided. Can be set to `Rotation3::identity()` if no other","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":573455,"byte_end":573554,"line_start":307,"line_end":307,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":573559,"byte_end":573594,"line_start":308,"line_end":308,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4505},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575421,"byte_end":575437,"line_start":357,"line_end":357,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation3<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis scaled by the rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574511,"byte_end":574585,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574590,"byte_end":574593,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This is the same as `Self::new(axisangle)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574598,"byte_end":574645,"line_start":338,"line_end":338,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574650,"byte_end":574653,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574658,"byte_end":574671,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574676,"byte_end":574683,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574688,"byte_end":574727,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574732,"byte_end":574751,"line_start":343,"line_end":343,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574756,"byte_end":574805,"line_start":344,"line_end":344,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574810,"byte_end":574868,"line_start":345,"line_end":345,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574873,"byte_end":574928,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574933,"byte_end":574973,"line_start":347,"line_end":347,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":574978,"byte_end":575020,"line_start":348,"line_end":348,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575025,"byte_end":575065,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575070,"byte_end":575073,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575078,"byte_end":575159,"line_start":351,"line_end":351,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575164,"byte_end":575247,"line_start":352,"line_end":352,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575252,"byte_end":575255,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575260,"byte_end":575300,"line_start":354,"line_end":354,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575305,"byte_end":575397,"line_start":355,"line_end":355,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575402,"byte_end":575409,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4507},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":576501,"byte_end":576516,"line_start":383,"line_end":383,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Rotation3<N>>::from_axis_angle","value":"fn <SB> (axis: &Unit<Vector<N, U3, SB>>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis and a rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis and a rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575538,"byte_end":575604,"line_start":361,"line_end":361,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575609,"byte_end":575612,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575617,"byte_end":575630,"line_start":363,"line_end":363,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575635,"byte_end":575642,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575647,"byte_end":575686,"line_start":365,"line_end":365,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575691,"byte_end":575710,"line_start":366,"line_end":366,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575715,"byte_end":575764,"line_start":367,"line_end":367,"column_start":5,"column_end":54}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575769,"byte_end":575802,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575807,"byte_end":575846,"line_start":369,"line_end":369,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575851,"byte_end":575906,"line_start":370,"line_end":370,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575911,"byte_end":575951,"line_start":371,"line_end":371,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":575956,"byte_end":575998,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":576003,"byte_end":576058,"line_start":373,"line_end":373,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":576063,"byte_end":576066,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":576071,"byte_end":576113,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(rot.angle(), angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":576118,"byte_end":576153,"line_start":376,"line_end":376,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":576158,"byte_end":576239,"line_start":377,"line_end":377,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":576244,"byte_end":576327,"line_start":378,"line_end":378,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":576332,"byte_end":576335,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":576340,"byte_end":576380,"line_start":380,"line_end":380,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":576385,"byte_end":576477,"line_start":381,"line_end":381,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":576482,"byte_end":576489,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4509},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578067,"byte_end":578084,"line_start":425,"line_end":425,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Rotation3<N>>::from_euler_angles","value":"fn (roll: N, pitch: N, yaw: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577503,"byte_end":577548,"line_start":411,"line_end":411,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577553,"byte_end":577556,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577561,"byte_end":577640,"line_start":413,"line_end":413,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577645,"byte_end":577648,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577653,"byte_end":577666,"line_start":415,"line_end":415,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577671,"byte_end":577678,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577683,"byte_end":577722,"line_start":417,"line_end":417,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577727,"byte_end":577757,"line_start":418,"line_end":418,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577762,"byte_end":577820,"line_start":419,"line_end":419,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577825,"byte_end":577860,"line_start":420,"line_end":420,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577865,"byte_end":577921,"line_start":421,"line_end":421,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577926,"byte_end":577982,"line_start":422,"line_end":422,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":577987,"byte_end":578043,"line_start":423,"line_end":423,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578048,"byte_end":578055,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4510},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578761,"byte_end":578776,"line_start":447,"line_end":447,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<Rotation3<N>>::to_euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Creates Euler angles from a rotation.","sig":null,"attributes":[{"value":"/ Creates Euler angles from a rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578566,"byte_end":578607,"line_start":443,"line_end":443,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578612,"byte_end":578615,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578620,"byte_end":578679,"line_start":445,"line_end":445,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578684,"byte_end":578749,"line_start":446,"line_end":446,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":579401,"byte_end":579413,"line_start":465,"line_end":465,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<Rotation3<N>>::euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Euler angles corresponding to this rotation from a rotation.","sig":null,"attributes":[{"value":"/ Euler angles corresponding to this rotation from a rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578838,"byte_end":578902,"line_start":451,"line_end":451,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578907,"byte_end":578910,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578915,"byte_end":578974,"line_start":453,"line_end":453,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578979,"byte_end":578982,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":578987,"byte_end":579000,"line_start":455,"line_end":455,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":579005,"byte_end":579012,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":579017,"byte_end":579056,"line_start":457,"line_end":457,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":579061,"byte_end":579091,"line_start":458,"line_end":458,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":579096,"byte_end":579154,"line_start":459,"line_end":459,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":579159,"byte_end":579194,"line_start":460,"line_end":460,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":579199,"byte_end":579255,"line_start":461,"line_end":461,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":579260,"byte_end":579316,"line_start":462,"line_end":462,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":579321,"byte_end":579377,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":579382,"byte_end":579389,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4512},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580415,"byte_end":580426,"line_start":487,"line_end":487,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation3<N>>::renormalize","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580207,"byte_end":580295,"line_start":484,"line_end":484,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580300,"byte_end":580389,"line_start":485,"line_end":485,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580394,"byte_end":580403,"line_start":486,"line_end":486,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4513},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581492,"byte_end":581504,"line_start":516,"line_end":516,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Rotation3<N>>::face_towards","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates a rotation that corresponds to the local frame of an observer standing at the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580622,"byte_end":580711,"line_start":494,"line_end":494,"column_start":5,"column_end":94}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580716,"byte_end":580752,"line_start":495,"line_end":495,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580757,"byte_end":580760,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580765,"byte_end":580813,"line_start":497,"line_end":497,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580818,"byte_end":580821,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580826,"byte_end":580841,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction, that is, direction the matrix `z` axis will be aligned with.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580846,"byte_end":580940,"line_start":500,"line_end":500,"column_start":5,"column_end":99}},{"value":"/   * up - The vertical direction. The only requirement of this parameter is to not be","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":580945,"byte_end":581033,"line_start":501,"line_end":501,"column_start":5,"column_end":93}},{"value":"/   collinear to `dir`. Non-collinearity is not checked.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581038,"byte_end":581096,"line_start":502,"line_end":502,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581101,"byte_end":581104,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581109,"byte_end":581122,"line_start":504,"line_end":504,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581127,"byte_end":581134,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581139,"byte_end":581178,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581183,"byte_end":581202,"line_start":507,"line_end":507,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581207,"byte_end":581248,"line_start":508,"line_end":508,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581253,"byte_end":581295,"line_start":509,"line_end":509,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581300,"byte_end":581326,"line_start":510,"line_end":510,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581331,"byte_end":581334,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::face_towards(&dir, &up);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581339,"byte_end":581388,"line_start":512,"line_end":512,"column_start":5,"column_end":54}},{"value":"/ assert_relative_eq!(rot * Vector3::z(), dir.normalize());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581393,"byte_end":581454,"line_start":513,"line_end":513,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581459,"byte_end":581466,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581471,"byte_end":581480,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4516},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582075,"byte_end":582094,"line_start":532,"line_end":532,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<Rotation3<N>>::new_observer_frames","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Rotation3::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Rotation3::face_towards] instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":581957,"byte_end":582011,"line_start":530,"line_end":530,"column_start":5,"column_end":59}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582016,"byte_end":582063,"line_start":531,"line_end":531,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4519},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583193,"byte_end":583203,"line_start":563,"line_end":563,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Rotation3<N>>::look_at_rh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582279,"byte_end":582345,"line_start":540,"line_end":540,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582350,"byte_end":582353,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582358,"byte_end":582424,"line_start":542,"line_end":542,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582429,"byte_end":582516,"line_start":543,"line_end":543,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582521,"byte_end":582544,"line_start":544,"line_end":544,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582549,"byte_end":582552,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582557,"byte_end":582572,"line_start":546,"line_end":546,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582577,"byte_end":582635,"line_start":547,"line_end":547,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582640,"byte_end":582725,"line_start":548,"line_end":548,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582730,"byte_end":582798,"line_start":549,"line_end":549,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582803,"byte_end":582806,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582811,"byte_end":582824,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582829,"byte_end":582836,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582841,"byte_end":582880,"line_start":553,"line_end":553,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582885,"byte_end":582904,"line_start":554,"line_end":554,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582909,"byte_end":582950,"line_start":555,"line_end":555,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":582955,"byte_end":582997,"line_start":556,"line_end":556,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583002,"byte_end":583028,"line_start":557,"line_end":557,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583033,"byte_end":583036,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_rh(&dir, &up);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583041,"byte_end":583088,"line_start":559,"line_end":559,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), -Vector3::z());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583093,"byte_end":583155,"line_start":560,"line_end":560,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583160,"byte_end":583167,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583172,"byte_end":583181,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4522},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584316,"byte_end":584326,"line_start":594,"line_end":594,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Rotation3<N>>::look_at_lh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583405,"byte_end":583470,"line_start":571,"line_end":571,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583475,"byte_end":583478,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583483,"byte_end":583549,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583554,"byte_end":583640,"line_start":574,"line_end":574,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583645,"byte_end":583668,"line_start":575,"line_end":575,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583673,"byte_end":583676,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583681,"byte_end":583696,"line_start":577,"line_end":577,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583701,"byte_end":583759,"line_start":578,"line_end":578,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583764,"byte_end":583849,"line_start":579,"line_end":579,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583854,"byte_end":583922,"line_start":580,"line_end":580,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583927,"byte_end":583930,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583935,"byte_end":583948,"line_start":582,"line_end":582,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583953,"byte_end":583960,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":583965,"byte_end":584004,"line_start":584,"line_end":584,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584009,"byte_end":584028,"line_start":585,"line_end":585,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584033,"byte_end":584074,"line_start":586,"line_end":586,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584079,"byte_end":584121,"line_start":587,"line_end":587,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584126,"byte_end":584152,"line_start":588,"line_end":588,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584157,"byte_end":584160,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_lh(&dir, &up);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584165,"byte_end":584212,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), Vector3::z());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584217,"byte_end":584278,"line_start":591,"line_end":591,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584283,"byte_end":584290,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584295,"byte_end":584304,"line_start":593,"line_end":593,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4525},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585150,"byte_end":585166,"line_start":617,"line_end":617,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation3<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584521,"byte_end":584594,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584599,"byte_end":584602,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584607,"byte_end":584702,"line_start":604,"line_end":604,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584707,"byte_end":584710,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584715,"byte_end":584728,"line_start":606,"line_end":606,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584733,"byte_end":584740,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584745,"byte_end":584784,"line_start":608,"line_end":608,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584789,"byte_end":584830,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584835,"byte_end":584875,"line_start":610,"line_end":610,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584880,"byte_end":584920,"line_start":611,"line_end":611,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation3::rotation_between(&a, &b).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584925,"byte_end":584984,"line_start":612,"line_end":612,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(rot * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":584989,"byte_end":585043,"line_start":613,"line_end":613,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585048,"byte_end":585112,"line_start":614,"line_end":614,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585117,"byte_end":585124,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585129,"byte_end":585138,"line_start":616,"line_end":616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4528},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":586071,"byte_end":586094,"line_start":640,"line_end":640,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation3<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>, n: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585374,"byte_end":585462,"line_start":625,"line_end":625,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585467,"byte_end":585506,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585511,"byte_end":585514,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585519,"byte_end":585532,"line_start":628,"line_end":628,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585537,"byte_end":585544,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585549,"byte_end":585588,"line_start":630,"line_end":630,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585593,"byte_end":585634,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585639,"byte_end":585679,"line_start":632,"line_end":632,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585684,"byte_end":585724,"line_start":633,"line_end":633,"column_start":5,"column_end":45}},{"value":"/ let rot2 = Rotation3::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585729,"byte_end":585801,"line_start":634,"line_end":634,"column_start":5,"column_end":77}},{"value":"/ let rot5 = Rotation3::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585806,"byte_end":585878,"line_start":635,"line_end":635,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585883,"byte_end":585966,"line_start":636,"line_end":636,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":585971,"byte_end":586033,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":586038,"byte_end":586045,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":586050,"byte_end":586059,"line_start":639,"line_end":639,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587339,"byte_end":587344,"line_start":681,"line_end":681,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation3<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi].","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi].","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":586957,"byte_end":586991,"line_start":670,"line_end":670,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":586996,"byte_end":586999,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587004,"byte_end":587017,"line_start":672,"line_end":672,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587022,"byte_end":587029,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587034,"byte_end":587073,"line_start":674,"line_end":674,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Rotation3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587078,"byte_end":587125,"line_start":675,"line_end":675,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587130,"byte_end":587194,"line_start":676,"line_end":676,"column_start":5,"column_end":69}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 1.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587199,"byte_end":587253,"line_start":677,"line_end":677,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587258,"byte_end":587301,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587306,"byte_end":587313,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587318,"byte_end":587327,"line_start":680,"line_end":680,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4532},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588109,"byte_end":588113,"line_start":703,"line_end":703,"column_start":12,"column_end":16},"name":"axis","qualname":"<Rotation3<N>>::axis","value":"fn (&self) -> Option<Unit<Vector3<N>>>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis. Returns `None` if the rotation angle is zero or PI.","sig":null,"attributes":[{"value":"/ The rotation axis. Returns `None` if the rotation angle is zero or PI.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587513,"byte_end":587587,"line_start":687,"line_end":687,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587592,"byte_end":587595,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587600,"byte_end":587613,"line_start":689,"line_end":689,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587618,"byte_end":587625,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587630,"byte_end":587669,"line_start":691,"line_end":691,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587674,"byte_end":587721,"line_start":692,"line_end":692,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587726,"byte_end":587790,"line_start":693,"line_end":693,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587795,"byte_end":587815,"line_start":694,"line_end":694,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587820,"byte_end":587875,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587880,"byte_end":587931,"line_start":696,"line_end":696,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587936,"byte_end":587939,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587944,"byte_end":587974,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":587979,"byte_end":588032,"line_start":699,"line_end":699,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588037,"byte_end":588071,"line_start":700,"line_end":700,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588076,"byte_end":588083,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588088,"byte_end":588097,"line_start":702,"line_end":702,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4533},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588845,"byte_end":588856,"line_start":724,"line_end":724,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation3<N>>::scaled_axis","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis multiplied by the rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588443,"byte_end":588498,"line_start":713,"line_end":713,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588503,"byte_end":588506,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588511,"byte_end":588524,"line_start":715,"line_end":715,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588529,"byte_end":588536,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588541,"byte_end":588580,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588585,"byte_end":588632,"line_start":718,"line_end":718,"column_start":5,"column_end":52}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588637,"byte_end":588685,"line_start":719,"line_end":719,"column_start":5,"column_end":53}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588690,"byte_end":588730,"line_start":720,"line_end":720,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588735,"byte_end":588807,"line_start":721,"line_end":721,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588812,"byte_end":588819,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":588824,"byte_end":588833,"line_start":723,"line_end":723,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4534},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589775,"byte_end":589785,"line_start":752,"line_end":752,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<Rotation3<N>>::axis_angle","value":"fn (&self) -> Option<(Unit<Vector3<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589032,"byte_end":589099,"line_start":732,"line_end":732,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589104,"byte_end":589107,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589112,"byte_end":589152,"line_start":734,"line_end":734,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589157,"byte_end":589160,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589165,"byte_end":589178,"line_start":736,"line_end":736,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589183,"byte_end":589190,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589195,"byte_end":589234,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589239,"byte_end":589286,"line_start":739,"line_end":739,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589291,"byte_end":589355,"line_start":740,"line_end":740,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589360,"byte_end":589380,"line_start":741,"line_end":741,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589385,"byte_end":589440,"line_start":742,"line_end":742,"column_start":5,"column_end":60}},{"value":"/ let axis_angle = rot.axis_angle().unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589445,"byte_end":589492,"line_start":743,"line_end":743,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(axis_angle.0, axis);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589497,"byte_end":589541,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ assert_relative_eq!(axis_angle.1, angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589546,"byte_end":589591,"line_start":745,"line_end":745,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589596,"byte_end":589599,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589604,"byte_end":589634,"line_start":747,"line_end":747,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589639,"byte_end":589692,"line_start":748,"line_end":748,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589697,"byte_end":589737,"line_start":749,"line_end":749,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589742,"byte_end":589749,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589754,"byte_end":589763,"line_start":751,"line_end":751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4535},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590420,"byte_end":590428,"line_start":771,"line_end":771,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation3<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":589964,"byte_end":590030,"line_start":760,"line_end":760,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590035,"byte_end":590038,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590043,"byte_end":590056,"line_start":762,"line_end":762,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590061,"byte_end":590068,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590073,"byte_end":590112,"line_start":764,"line_end":764,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590117,"byte_end":590158,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590163,"byte_end":590230,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590235,"byte_end":590302,"line_start":767,"line_end":767,"column_start":5,"column_end":72}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590307,"byte_end":590382,"line_start":768,"line_end":768,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590387,"byte_end":590394,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590399,"byte_end":590408,"line_start":770,"line_end":770,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4536},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591083,"byte_end":591094,"line_start":789,"line_end":789,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation3<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590508,"byte_end":590575,"line_start":775,"line_end":775,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590580,"byte_end":590583,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590588,"byte_end":590659,"line_start":777,"line_end":777,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590664,"byte_end":590667,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590672,"byte_end":590685,"line_start":779,"line_end":779,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590690,"byte_end":590697,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590702,"byte_end":590741,"line_start":781,"line_end":781,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590746,"byte_end":590787,"line_start":782,"line_end":782,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590792,"byte_end":590859,"line_start":783,"line_end":783,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590864,"byte_end":590931,"line_start":784,"line_end":784,"column_start":5,"column_end":72}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590936,"byte_end":590977,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":590982,"byte_end":591045,"line_start":786,"line_end":786,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591050,"byte_end":591057,"line_start":787,"line_end":787,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591062,"byte_end":591071,"line_start":788,"line_end":788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591810,"byte_end":591814,"line_start":808,"line_end":808,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation3<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the same\n axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the same","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591168,"byte_end":591260,"line_start":793,"line_end":793,"column_start":5,"column_end":97}},{"value":"/ axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591265,"byte_end":591339,"line_start":794,"line_end":794,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591344,"byte_end":591347,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591352,"byte_end":591365,"line_start":796,"line_end":796,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591370,"byte_end":591377,"line_start":797,"line_end":797,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591382,"byte_end":591421,"line_start":798,"line_end":798,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591426,"byte_end":591473,"line_start":799,"line_end":799,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591478,"byte_end":591542,"line_start":800,"line_end":800,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591547,"byte_end":591567,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591572,"byte_end":591627,"line_start":802,"line_end":802,"column_start":5,"column_end":60}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591632,"byte_end":591660,"line_start":803,"line_end":803,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591665,"byte_end":591734,"line_start":804,"line_end":804,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591739,"byte_end":591772,"line_start":805,"line_end":805,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591777,"byte_end":591784,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":591789,"byte_end":591798,"line_start":807,"line_end":807,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17835},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":594501,"byte_end":594511,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"Quaternion","qualname":"::geometry::quaternion::Quaternion","value":"Quaternion { coords }","parent":null,"children":[{"krate":0,"index":17837}],"decl_id":null,"docs":" A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion\n that may be used as a rotation.\n","sig":null,"attributes":[{"value":"/ A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":594336,"byte_end":594425,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/ that may be used as a rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":594426,"byte_end":594461,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":594462,"byte_end":594472,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":17837},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":594629,"byte_end":594635,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::quaternion::Quaternion::coords","value":"base::matrix::Matrix<N, base::dimension::U4, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, base::dimension::U4>>::Buffer>","parent":{"krate":0,"index":17835},"children":[],"decl_id":null,"docs":" This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.\n","sig":null,"attributes":[{"value":"/ This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":594532,"byte_end":594620,"line_start":29,"line_end":29,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4587},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596578,"byte_end":596588,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Quaternion<N>>::into_owned","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Moves this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this unit quaternion into one that owns its data.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596401,"byte_end":596460,"line_start":98,"line_end":98,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596465,"byte_end":596474,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596479,"byte_end":596566,"line_start":100,"line_end":100,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4588},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596807,"byte_end":596818,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Quaternion<N>>::clone_owned","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clones this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this unit quaternion into one that owns its data.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596629,"byte_end":596689,"line_start":105,"line_end":105,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596694,"byte_end":596703,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596708,"byte_end":596795,"line_start":107,"line_end":107,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4589},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597223,"byte_end":597232,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Quaternion<N>>::normalize","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596893,"byte_end":596924,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596929,"byte_end":596932,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596937,"byte_end":596950,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596955,"byte_end":596962,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596967,"byte_end":597006,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597011,"byte_end":597042,"line_start":117,"line_end":117,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597047,"byte_end":597095,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/ let q_normalized = q.normalize();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597100,"byte_end":597137,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ relative_eq!(q_normalized.norm(), 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597142,"byte_end":597185,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597190,"byte_end":597197,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597202,"byte_end":597211,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4590},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597373,"byte_end":597377,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"imag","qualname":"<Quaternion<N>>::imag","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The imaginary part of this quaternion.\n","sig":null,"attributes":[{"value":"/ The imaginary part of this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597305,"byte_end":597347,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597352,"byte_end":597361,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4591},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597760,"byte_end":597769,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Quaternion<N>>::conjugate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of this quaternion.","sig":null,"attributes":[{"value":"/ The conjugate of this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597438,"byte_end":597475,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597480,"byte_end":597483,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597488,"byte_end":597501,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597506,"byte_end":597513,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597518,"byte_end":597549,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597554,"byte_end":597602,"line_start":138,"line_end":138,"column_start":5,"column_end":53}},{"value":"/ let conj = q.conjugate();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597607,"byte_end":597636,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/ assert!(conj.i == -2.0 && conj.j == -3.0 && conj.k == -4.0 && conj.w == 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597641,"byte_end":597722,"line_start":140,"line_end":140,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597727,"byte_end":597734,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597739,"byte_end":597748,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4592},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598422,"byte_end":598433,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Quaternion<N>>::try_inverse","value":"fn (&self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597845,"byte_end":597891,"line_start":147,"line_end":147,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597896,"byte_end":597899,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597904,"byte_end":597917,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597922,"byte_end":597929,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597934,"byte_end":597973,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":597978,"byte_end":598009,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598014,"byte_end":598062,"line_start":153,"line_end":153,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598067,"byte_end":598099,"line_start":154,"line_end":154,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598104,"byte_end":598107,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_some());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598112,"byte_end":598141,"line_start":156,"line_end":156,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv_q.unwrap() * q, Quaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598146,"byte_end":598214,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598219,"byte_end":598222,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598227,"byte_end":598252,"line_start":159,"line_end":159,"column_start":5,"column_end":30}},{"value":"/ let q = Quaternion::new(0.0, 0.0, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598257,"byte_end":598305,"line_start":160,"line_end":160,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598310,"byte_end":598342,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598347,"byte_end":598350,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_none());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598355,"byte_end":598384,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598389,"byte_end":598396,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598401,"byte_end":598410,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4593},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599044,"byte_end":599048,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Quaternion<N>>::lerp","value":"fn (&self, other: &Self, t: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two quaternion.","sig":null,"attributes":[{"value":"/ Linear interpolation between two quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598633,"byte_end":598681,"line_start":176,"line_end":176,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598686,"byte_end":598689,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Computes `self * (1 - t) + other * t`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598694,"byte_end":598736,"line_start":178,"line_end":178,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598741,"byte_end":598744,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598749,"byte_end":598762,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598767,"byte_end":598774,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598779,"byte_end":598810,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598815,"byte_end":598864,"line_start":183,"line_end":183,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(10.0, 20.0, 30.0, 40.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598869,"byte_end":598922,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598927,"byte_end":598930,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(1.9, 3.8, 5.7, 7.6));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":598935,"byte_end":599006,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599011,"byte_end":599018,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599023,"byte_end":599032,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4594},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599475,"byte_end":599481,"line_start":204,"line_end":204,"column_start":12,"column_end":18},"name":"vector","qualname":"<Quaternion<N>>::vector","value":"fn (&self) -> MatrixSlice<N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599139,"byte_end":599190,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599195,"byte_end":599198,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599203,"byte_end":599216,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599221,"byte_end":599228,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599233,"byte_end":599264,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599269,"byte_end":599317,"line_start":198,"line_end":198,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.vector()[0], 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599322,"byte_end":599357,"line_start":199,"line_end":199,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[1], 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599362,"byte_end":599397,"line_start":200,"line_end":200,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[2], 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599402,"byte_end":599437,"line_start":201,"line_end":201,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599442,"byte_end":599449,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599454,"byte_end":599463,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4595},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599853,"byte_end":599859,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"scalar","qualname":"<Quaternion<N>>::scalar","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scalar part `w` of this quaternion.","sig":null,"attributes":[{"value":"/ The scalar part `w` of this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599608,"byte_end":599651,"line_start":208,"line_end":208,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599656,"byte_end":599659,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599664,"byte_end":599677,"line_start":210,"line_end":210,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599682,"byte_end":599689,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599694,"byte_end":599725,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599730,"byte_end":599778,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.scalar(), 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599783,"byte_end":599815,"line_start":214,"line_end":214,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599820,"byte_end":599827,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599832,"byte_end":599841,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4596},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600358,"byte_end":600367,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"as_vector","qualname":"<Quaternion<N>>::as_vector","value":"fn (&self) -> &Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Reinterprets this quaternion as a 4D vector.","sig":null,"attributes":[{"value":"/ Reinterprets this quaternion as a 4D vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599908,"byte_end":599956,"line_start":221,"line_end":221,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599961,"byte_end":599964,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599969,"byte_end":599982,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599987,"byte_end":599994,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector4, Quaternion};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":599999,"byte_end":600041,"line_start":225,"line_end":225,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600046,"byte_end":600094,"line_start":226,"line_end":226,"column_start":5,"column_end":53}},{"value":"/ // Recall that the quaternion is stored internally as (i, j, k, w)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600099,"byte_end":600169,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/ // while the crate::new constructor takes the arguments as (w, i, j, k).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600174,"byte_end":600250,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600255,"byte_end":600320,"line_start":229,"line_end":229,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600325,"byte_end":600332,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600337,"byte_end":600346,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4597},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600734,"byte_end":600738,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"norm","qualname":"<Quaternion<N>>::norm","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The norm of this quaternion.","sig":null,"attributes":[{"value":"/ The norm of this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600424,"byte_end":600456,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600461,"byte_end":600464,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600469,"byte_end":600482,"line_start":238,"line_end":238,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600487,"byte_end":600494,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600499,"byte_end":600538,"line_start":240,"line_end":240,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600543,"byte_end":600574,"line_start":241,"line_end":241,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600579,"byte_end":600627,"line_start":242,"line_end":242,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.norm(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600632,"byte_end":600696,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600701,"byte_end":600708,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600713,"byte_end":600722,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4598},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601190,"byte_end":601199,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Quaternion<N>>::magnitude","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600791,"byte_end":600837,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600842,"byte_end":600845,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600850,"byte_end":600869,"line_start":252,"line_end":252,"column_start":5,"column_end":24}},{"value":"/ This is the same as `.norm()`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600874,"byte_end":600907,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600912,"byte_end":600915,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600920,"byte_end":600933,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600938,"byte_end":600945,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600950,"byte_end":600989,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":600994,"byte_end":601025,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601030,"byte_end":601078,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.magnitude(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601083,"byte_end":601152,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601157,"byte_end":601164,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601169,"byte_end":601178,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4599},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601499,"byte_end":601511,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Quaternion<N>>::norm_squared","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ The squared norm of this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601245,"byte_end":601285,"line_start":267,"line_end":267,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601290,"byte_end":601293,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601298,"byte_end":601311,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601316,"byte_end":601323,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601328,"byte_end":601359,"line_start":271,"line_end":271,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601364,"byte_end":601412,"line_start":272,"line_end":272,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601417,"byte_end":601461,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601466,"byte_end":601473,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601478,"byte_end":601487,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4600},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601926,"byte_end":601943,"line_start":292,"line_end":292,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Quaternion<N>>::magnitude_squared","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601572,"byte_end":601626,"line_start":280,"line_end":280,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601631,"byte_end":601634,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601639,"byte_end":601666,"line_start":282,"line_end":282,"column_start":5,"column_end":32}},{"value":"/ This is the same as `.norm_squared()`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601671,"byte_end":601712,"line_start":283,"line_end":283,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601717,"byte_end":601720,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601725,"byte_end":601738,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601743,"byte_end":601750,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601755,"byte_end":601786,"line_start":287,"line_end":287,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601791,"byte_end":601839,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601844,"byte_end":601888,"line_start":289,"line_end":289,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601893,"byte_end":601900,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601905,"byte_end":601914,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4601},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602295,"byte_end":602298,"line_start":306,"line_end":306,"column_start":12,"column_end":15},"name":"dot","qualname":"<Quaternion<N>>::dot","value":"fn (&self, rhs: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product of two quaternions.","sig":null,"attributes":[{"value":"/ The dot product of two quaternions.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":601997,"byte_end":602036,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602041,"byte_end":602044,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602049,"byte_end":602062,"line_start":298,"line_end":298,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602067,"byte_end":602074,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602079,"byte_end":602110,"line_start":300,"line_end":300,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602115,"byte_end":602164,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(5.0, 6.0, 7.0, 8.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602169,"byte_end":602218,"line_start":302,"line_end":302,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(q1.dot(&q2), 70.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602223,"byte_end":602257,"line_start":303,"line_end":303,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602262,"byte_end":602269,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602274,"byte_end":602283,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4602},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602958,"byte_end":602963,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"inner","qualname":"<Quaternion<N>>::inner","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the inner product (also known as the dot product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the inner product (also known as the dot product).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602373,"byte_end":602438,"line_start":310,"line_end":310,"column_start":5,"column_end":70}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602443,"byte_end":602525,"line_start":311,"line_end":311,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602530,"byte_end":602547,"line_start":312,"line_end":312,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602552,"byte_end":602555,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602560,"byte_end":602573,"line_start":314,"line_end":314,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602578,"byte_end":602585,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602590,"byte_end":602629,"line_start":316,"line_end":316,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602634,"byte_end":602665,"line_start":317,"line_end":317,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602670,"byte_end":602718,"line_start":318,"line_end":318,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602723,"byte_end":602771,"line_start":319,"line_end":319,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(-20.0, 0.0, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602776,"byte_end":602833,"line_start":320,"line_end":320,"column_start":5,"column_end":62}},{"value":"/ let result = a.inner(&b);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602838,"byte_end":602867,"line_start":321,"line_end":321,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602872,"byte_end":602932,"line_start":322,"line_end":322,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":602937,"byte_end":602946,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4603},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603652,"byte_end":603657,"line_start":343,"line_end":343,"column_start":12,"column_end":17},"name":"outer","qualname":"<Quaternion<N>>::outer","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the outer product (also known as the wedge product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the outer product (also known as the wedge product).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603051,"byte_end":603118,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603123,"byte_end":603205,"line_start":329,"line_end":329,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603210,"byte_end":603227,"line_start":330,"line_end":330,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603232,"byte_end":603235,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603240,"byte_end":603253,"line_start":332,"line_end":332,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603258,"byte_end":603265,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603270,"byte_end":603309,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603314,"byte_end":603345,"line_start":335,"line_end":335,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603350,"byte_end":603398,"line_start":336,"line_end":336,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603403,"byte_end":603451,"line_start":337,"line_end":337,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -5.0, 18.0, -11.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603456,"byte_end":603515,"line_start":338,"line_end":338,"column_start":5,"column_end":64}},{"value":"/ let result = a.outer(&b);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603520,"byte_end":603549,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603554,"byte_end":603614,"line_start":340,"line_end":340,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603619,"byte_end":603626,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603631,"byte_end":603640,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4604},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604412,"byte_end":604419,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"project","qualname":"<Quaternion<N>>::project","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the projection of `self` onto `other` (also known as the parallel).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the projection of `self` onto `other` (also known as the parallel).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603745,"byte_end":603827,"line_start":347,"line_end":347,"column_start":5,"column_end":87}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603832,"byte_end":603914,"line_start":348,"line_end":348,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603919,"byte_end":603936,"line_start":349,"line_end":349,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603941,"byte_end":603944,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603949,"byte_end":603962,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603967,"byte_end":603974,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":603979,"byte_end":604018,"line_start":353,"line_end":353,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604023,"byte_end":604054,"line_start":354,"line_end":354,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604059,"byte_end":604107,"line_start":355,"line_end":355,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604112,"byte_end":604160,"line_start":356,"line_end":356,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, 3.333333333333333, 1.3333333333333333, 0.6666666666666666);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604165,"byte_end":604264,"line_start":357,"line_end":357,"column_start":5,"column_end":104}},{"value":"/ let result = a.project(&b).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604269,"byte_end":604309,"line_start":358,"line_end":358,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604314,"byte_end":604374,"line_start":359,"line_end":359,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604379,"byte_end":604386,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604391,"byte_end":604400,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4605},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605185,"byte_end":605191,"line_start":381,"line_end":381,"column_start":12,"column_end":18},"name":"reject","qualname":"<Quaternion<N>>::reject","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the rejection of `self` from `other` (also known as the perpendicular).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the rejection of `self` from `other` (also known as the perpendicular).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604513,"byte_end":604599,"line_start":366,"line_end":366,"column_start":5,"column_end":91}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604604,"byte_end":604686,"line_start":367,"line_end":367,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604691,"byte_end":604708,"line_start":368,"line_end":368,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604713,"byte_end":604716,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604721,"byte_end":604734,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604739,"byte_end":604746,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604751,"byte_end":604790,"line_start":372,"line_end":372,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604795,"byte_end":604826,"line_start":373,"line_end":373,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604831,"byte_end":604879,"line_start":374,"line_end":374,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604884,"byte_end":604932,"line_start":375,"line_end":375,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -1.3333333333333333, 1.6666666666666665, 3.3333333333333335);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":604937,"byte_end":605038,"line_start":376,"line_end":376,"column_start":5,"column_end":106}},{"value":"/ let result = a.reject(&b).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605043,"byte_end":605082,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605087,"byte_end":605147,"line_start":378,"line_end":378,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605152,"byte_end":605159,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605164,"byte_end":605173,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4606},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605901,"byte_end":605920,"line_start":400,"line_end":400,"column_start":12,"column_end":31},"name":"polar_decomposition","qualname":"<Quaternion<N>>::polar_decomposition","value":"fn (&self) -> (N, N, Option<Unit<Vector3<N>>>)","parent":null,"children":[],"decl_id":null,"docs":" The polar decomposition of this quaternion.","sig":null,"attributes":[{"value":"/ The polar decomposition of this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605285,"byte_end":605332,"line_start":385,"line_end":385,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605337,"byte_end":605340,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Returns, from left to right: the quaternion norm, the half rotation angle, the rotation","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605345,"byte_end":605436,"line_start":387,"line_end":387,"column_start":5,"column_end":96}},{"value":"/ axis. If the rotation angle is zero, the rotation axis is set to `None`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605441,"byte_end":605517,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605522,"byte_end":605525,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605530,"byte_end":605543,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605548,"byte_end":605555,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605560,"byte_end":605579,"line_start":392,"line_end":392,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Vector3, Quaternion};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605584,"byte_end":605626,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(0.0, 5.0, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605631,"byte_end":605679,"line_start":394,"line_end":394,"column_start":5,"column_end":53}},{"value":"/ let (norm, half_ang, axis) = q.polar_decomposition();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605684,"byte_end":605741,"line_start":395,"line_end":395,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(norm, 5.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605746,"byte_end":605772,"line_start":396,"line_end":396,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(half_ang, f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605777,"byte_end":605826,"line_start":397,"line_end":397,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(axis, Some(Vector3::x_axis()));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605831,"byte_end":605877,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":605882,"byte_end":605889,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4607},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606741,"byte_end":606743,"line_start":424,"line_end":424,"column_start":12,"column_end":14},"name":"ln","qualname":"<Quaternion<N>>::ln","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606381,"byte_end":606431,"line_start":414,"line_end":414,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606436,"byte_end":606439,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606444,"byte_end":606457,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606462,"byte_end":606469,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606474,"byte_end":606513,"line_start":418,"line_end":418,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606518,"byte_end":606549,"line_start":419,"line_end":419,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(2.0, 5.0, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606554,"byte_end":606602,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.ln(), Quaternion::new(1.683647, 1.190289, 0.0, 0.0), epsilon = 1.0e-6)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606607,"byte_end":606703,"line_start":421,"line_end":421,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606708,"byte_end":606715,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606720,"byte_end":606729,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4608},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607284,"byte_end":607287,"line_start":442,"line_end":442,"column_start":12,"column_end":15},"name":"exp","qualname":"<Quaternion<N>>::exp","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606929,"byte_end":606973,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606978,"byte_end":606981,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":606986,"byte_end":606999,"line_start":434,"line_end":434,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607004,"byte_end":607011,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607016,"byte_end":607055,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607060,"byte_end":607091,"line_start":437,"line_end":437,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607096,"byte_end":607154,"line_start":438,"line_end":438,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp(), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607159,"byte_end":607246,"line_start":439,"line_end":439,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607251,"byte_end":607258,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607263,"byte_end":607272,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4609},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607979,"byte_end":607986,"line_start":461,"line_end":461,"column_start":12,"column_end":19},"name":"exp_eps","qualname":"<Quaternion<N>>::exp_eps","value":"fn (&self, eps: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion\n has a norm smaller than `eps`.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607359,"byte_end":607462,"line_start":446,"line_end":446,"column_start":5,"column_end":108}},{"value":"/ has a norm smaller than `eps`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607467,"byte_end":607501,"line_start":447,"line_end":447,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607506,"byte_end":607509,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607514,"byte_end":607527,"line_start":449,"line_end":449,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607532,"byte_end":607539,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607544,"byte_end":607583,"line_start":451,"line_end":451,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607588,"byte_end":607619,"line_start":452,"line_end":452,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607624,"byte_end":607682,"line_start":453,"line_end":453,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp_eps(1.0e-6), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607687,"byte_end":607785,"line_start":454,"line_end":454,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607790,"byte_end":607793,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ // Singular case.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607798,"byte_end":607819,"line_start":456,"line_end":456,"column_start":5,"column_end":26}},{"value":"/ let q = Quaternion::new(0.0000001, 0.0, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607824,"byte_end":607878,"line_start":457,"line_end":457,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(q.exp_eps(1.0e-6), Quaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607883,"byte_end":607941,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607946,"byte_end":607953,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":607958,"byte_end":607967,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4610},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608733,"byte_end":608737,"line_start":486,"line_end":486,"column_start":12,"column_end":16},"name":"powf","qualname":"<Quaternion<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608350,"byte_end":608401,"line_start":476,"line_end":476,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608406,"byte_end":608409,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608414,"byte_end":608427,"line_start":478,"line_end":478,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608432,"byte_end":608439,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608444,"byte_end":608483,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608488,"byte_end":608519,"line_start":481,"line_end":481,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608524,"byte_end":608572,"line_start":482,"line_end":482,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.powf(1.5), Quaternion::new( -6.2576659, 4.1549037, 6.2323556, 8.3098075), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608577,"byte_end":608695,"line_start":483,"line_end":483,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608700,"byte_end":608707,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608712,"byte_end":608721,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4611},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609185,"byte_end":609198,"line_start":500,"line_end":500,"column_start":12,"column_end":25},"name":"as_vector_mut","qualname":"<Quaternion<N>>::as_vector_mut","value":"fn (&mut self) -> &mut Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","sig":null,"attributes":[{"value":"/ Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608802,"byte_end":608884,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608889,"byte_end":608892,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608897,"byte_end":608910,"line_start":492,"line_end":492,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608915,"byte_end":608922,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608927,"byte_end":608969,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":608974,"byte_end":609013,"line_start":495,"line_end":495,"column_start":5,"column_end":44}},{"value":"/ *q.as_vector_mut() = Vector4::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609018,"byte_end":609076,"line_start":496,"line_end":496,"column_start":5,"column_end":63}},{"value":"/ assert!(q.i == 1.0 && q.j == 2.0 && q.k == 3.0 && q.w == 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609081,"byte_end":609147,"line_start":497,"line_end":497,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609152,"byte_end":609159,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609164,"byte_end":609173,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4612},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609696,"byte_end":609706,"line_start":519,"line_end":519,"column_start":12,"column_end":22},"name":"vector_mut","qualname":"<Quaternion<N>>::vector_mut","value":"fn (&mut self) -> MatrixSliceMut<N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The mutable vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The mutable vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609267,"byte_end":609326,"line_start":504,"line_end":504,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609331,"byte_end":609334,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609339,"byte_end":609352,"line_start":506,"line_end":506,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609357,"byte_end":609364,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609369,"byte_end":609411,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609416,"byte_end":609455,"line_start":509,"line_end":509,"column_start":5,"column_end":44}},{"value":"/ {","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609460,"byte_end":609465,"line_start":510,"line_end":510,"column_start":5,"column_end":10}},{"value":"/     let mut v = q.vector_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609470,"byte_end":609505,"line_start":511,"line_end":511,"column_start":5,"column_end":40}},{"value":"/     v[0] = 2.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609510,"byte_end":609529,"line_start":512,"line_end":512,"column_start":5,"column_end":24}},{"value":"/     v[1] = 3.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609534,"byte_end":609553,"line_start":513,"line_end":513,"column_start":5,"column_end":24}},{"value":"/     v[2] = 4.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609558,"byte_end":609577,"line_start":514,"line_end":514,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609582,"byte_end":609587,"line_start":515,"line_end":515,"column_start":5,"column_end":10}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609592,"byte_end":609658,"line_start":516,"line_end":516,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609663,"byte_end":609670,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609675,"byte_end":609684,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4613},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610175,"byte_end":610188,"line_start":535,"line_end":535,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Quaternion<N>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces this quaternion by its conjugate.","sig":null,"attributes":[{"value":"/ Replaces this quaternion by its conjugate.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609859,"byte_end":609905,"line_start":525,"line_end":525,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609910,"byte_end":609913,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609918,"byte_end":609931,"line_start":527,"line_end":527,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609936,"byte_end":609943,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609948,"byte_end":609979,"line_start":529,"line_end":529,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":609984,"byte_end":610036,"line_start":530,"line_end":530,"column_start":5,"column_end":57}},{"value":"/ q.conjugate_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610041,"byte_end":610063,"line_start":531,"line_end":531,"column_start":5,"column_end":27}},{"value":"/ assert!(q.i == -2.0 && q.j == -3.0 && q.k == -4.0 && q.w == 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610068,"byte_end":610137,"line_start":532,"line_end":532,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610142,"byte_end":610149,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610154,"byte_end":610163,"line_start":534,"line_end":534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4614},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610881,"byte_end":610896,"line_start":557,"line_end":557,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Quaternion<N>>::try_inverse_mut","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion in-place if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion in-place if it is not zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610339,"byte_end":610394,"line_start":541,"line_end":541,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610399,"byte_end":610402,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610407,"byte_end":610420,"line_start":543,"line_end":543,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610425,"byte_end":610432,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610437,"byte_end":610476,"line_start":545,"line_end":545,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610481,"byte_end":610512,"line_start":546,"line_end":546,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610517,"byte_end":610569,"line_start":547,"line_end":547,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610574,"byte_end":610577,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ assert!(q.try_inverse_mut());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610582,"byte_end":610615,"line_start":549,"line_end":549,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * Quaternion::new(1.0, 2.0, 3.0, 4.0), Quaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610620,"byte_end":610709,"line_start":550,"line_end":550,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610714,"byte_end":610717,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610722,"byte_end":610747,"line_start":552,"line_end":552,"column_start":5,"column_end":30}},{"value":"/ let mut q = Quaternion::new(0.0, 0.0, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610752,"byte_end":610804,"line_start":553,"line_end":553,"column_start":5,"column_end":57}},{"value":"/ assert!(!q.try_inverse_mut());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610809,"byte_end":610843,"line_start":554,"line_end":554,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610848,"byte_end":610855,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":610860,"byte_end":610869,"line_start":556,"line_end":556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4615},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611484,"byte_end":611497,"line_start":581,"line_end":581,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Quaternion<N>>::normalize_mut","value":"fn (&mut self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611169,"byte_end":611200,"line_start":570,"line_end":570,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611205,"byte_end":611208,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611213,"byte_end":611226,"line_start":572,"line_end":572,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611231,"byte_end":611238,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611243,"byte_end":611282,"line_start":574,"line_end":574,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611287,"byte_end":611318,"line_start":575,"line_end":575,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611323,"byte_end":611375,"line_start":576,"line_end":576,"column_start":5,"column_end":57}},{"value":"/ q.normalize_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611380,"byte_end":611402,"line_start":577,"line_end":577,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(q.norm(), 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611407,"byte_end":611446,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611451,"byte_end":611458,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611463,"byte_end":611472,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4616},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611627,"byte_end":611634,"line_start":587,"line_end":587,"column_start":12,"column_end":19},"name":"squared","qualname":"<Quaternion<N>>::squared","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square of a quaternion.\n","sig":null,"attributes":[{"value":"/ Calculates square of a quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611563,"byte_end":611601,"line_start":585,"line_end":585,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611606,"byte_end":611615,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4617},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611741,"byte_end":611745,"line_start":593,"line_end":593,"column_start":12,"column_end":16},"name":"half","qualname":"<Quaternion<N>>::half","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Divides quaternion into two.\n","sig":null,"attributes":[{"value":"/ Divides quaternion into two.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611683,"byte_end":611715,"line_start":591,"line_end":591,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611720,"byte_end":611729,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4618},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611865,"byte_end":611869,"line_start":599,"line_end":599,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Quaternion<N>>::sqrt","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square root.\n","sig":null,"attributes":[{"value":"/ Calculates square root.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611812,"byte_end":611839,"line_start":597,"line_end":597,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611844,"byte_end":611853,"line_start":598,"line_end":598,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4619},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611999,"byte_end":612006,"line_start":605,"line_end":605,"column_start":12,"column_end":19},"name":"is_pure","qualname":"<Quaternion<N>>::is_pure","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the quaternion is pure.\n","sig":null,"attributes":[{"value":"/ Check if the quaternion is pure.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611937,"byte_end":611973,"line_start":603,"line_end":603,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":611978,"byte_end":611987,"line_start":604,"line_end":604,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4620},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612128,"byte_end":612132,"line_start":611,"line_end":611,"column_start":12,"column_end":16},"name":"pure","qualname":"<Quaternion<N>>::pure","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert quaternion to pure quaternion.\n","sig":null,"attributes":[{"value":"/ Convert quaternion to pure quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612060,"byte_end":612102,"line_start":609,"line_end":609,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612107,"byte_end":612116,"line_start":610,"line_end":610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4621},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612328,"byte_end":612336,"line_start":619,"line_end":619,"column_start":12,"column_end":20},"name":"left_div","qualname":"<Quaternion<N>>::left_div","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Left quaternionic division.","sig":null,"attributes":[{"value":"/ Left quaternionic division.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612198,"byte_end":612229,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612234,"byte_end":612237,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ Calculates B<sup>-1</sup> * A where A = self, B = other.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612242,"byte_end":612302,"line_start":617,"line_end":617,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612307,"byte_end":612316,"line_start":618,"line_end":618,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4623},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613024,"byte_end":613033,"line_start":638,"line_end":638,"column_start":12,"column_end":21},"name":"right_div","qualname":"<Quaternion<N>>::right_div","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Right quaternionic division.","sig":null,"attributes":[{"value":"/ Right quaternionic division.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612437,"byte_end":612469,"line_start":623,"line_end":623,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612474,"byte_end":612477,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Calculates A * B<sup>-1</sup> where A = self, B = other.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612482,"byte_end":612542,"line_start":625,"line_end":625,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612547,"byte_end":612550,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612555,"byte_end":612568,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612573,"byte_end":612580,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612585,"byte_end":612624,"line_start":629,"line_end":629,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612629,"byte_end":612660,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612665,"byte_end":612713,"line_start":631,"line_end":631,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612718,"byte_end":612766,"line_start":632,"line_end":632,"column_start":5,"column_end":53}},{"value":"/ let result = a.right_div(&b).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612771,"byte_end":612813,"line_start":633,"line_end":633,"column_start":5,"column_end":47}},{"value":"/ let expected = Quaternion::new(0.4, 0.13333333333333336, -0.4666666666666667, 0.26666666666666666);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612818,"byte_end":612921,"line_start":634,"line_end":634,"column_start":5,"column_end":108}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612926,"byte_end":612986,"line_start":635,"line_end":635,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":612991,"byte_end":612998,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613003,"byte_end":613012,"line_start":637,"line_end":637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4625},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613605,"byte_end":613608,"line_start":654,"line_end":654,"column_start":12,"column_end":15},"name":"cos","qualname":"<Quaternion<N>>::cos","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic cosinus.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613134,"byte_end":613174,"line_start":642,"line_end":642,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613179,"byte_end":613182,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613187,"byte_end":613200,"line_start":644,"line_end":644,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613205,"byte_end":613212,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613217,"byte_end":613256,"line_start":646,"line_end":646,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613261,"byte_end":613292,"line_start":647,"line_end":647,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613297,"byte_end":613349,"line_start":648,"line_end":648,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(58.93364616794395, -34.086183690465596, -51.1292755356984, -68.17236738093119);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613354,"byte_end":613468,"line_start":649,"line_end":649,"column_start":5,"column_end":119}},{"value":"/ let result = input.cos();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613473,"byte_end":613502,"line_start":650,"line_end":650,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613507,"byte_end":613567,"line_start":651,"line_end":651,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613572,"byte_end":613579,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613584,"byte_end":613593,"line_start":653,"line_end":653,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4626},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614147,"byte_end":614151,"line_start":671,"line_end":671,"column_start":12,"column_end":16},"name":"acos","qualname":"<Quaternion<N>>::acos","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arccosinus.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613788,"byte_end":613831,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613836,"byte_end":613839,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613844,"byte_end":613857,"line_start":662,"line_end":662,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613862,"byte_end":613869,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613874,"byte_end":613913,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613918,"byte_end":613949,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":613954,"byte_end":614006,"line_start":666,"line_end":666,"column_start":5,"column_end":57}},{"value":"/ let result = input.cos().acos();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614011,"byte_end":614047,"line_start":667,"line_end":667,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614052,"byte_end":614109,"line_start":668,"line_end":668,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614114,"byte_end":614121,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614126,"byte_end":614135,"line_start":670,"line_end":670,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4627},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614831,"byte_end":614834,"line_start":692,"line_end":692,"column_start":12,"column_end":15},"name":"sin","qualname":"<Quaternion<N>>::sin","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic sinus.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614364,"byte_end":614402,"line_start":680,"line_end":680,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614407,"byte_end":614410,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614415,"byte_end":614428,"line_start":682,"line_end":682,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614433,"byte_end":614440,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614445,"byte_end":614484,"line_start":684,"line_end":684,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614489,"byte_end":614520,"line_start":685,"line_end":685,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614525,"byte_end":614577,"line_start":686,"line_end":686,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(91.78371578403467, 21.886486853029176, 32.82973027954377, 43.77297370605835);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614582,"byte_end":614694,"line_start":687,"line_end":687,"column_start":5,"column_end":117}},{"value":"/ let result = input.sin();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614699,"byte_end":614728,"line_start":688,"line_end":688,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614733,"byte_end":614793,"line_start":689,"line_end":689,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614798,"byte_end":614805,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":614810,"byte_end":614819,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4628},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615370,"byte_end":615374,"line_start":709,"line_end":709,"column_start":12,"column_end":16},"name":"asin","qualname":"<Quaternion<N>>::asin","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arcsinus.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615013,"byte_end":615054,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615059,"byte_end":615062,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615067,"byte_end":615080,"line_start":700,"line_end":700,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615085,"byte_end":615092,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615097,"byte_end":615136,"line_start":702,"line_end":702,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615141,"byte_end":615172,"line_start":703,"line_end":703,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615177,"byte_end":615229,"line_start":704,"line_end":704,"column_start":5,"column_end":57}},{"value":"/ let result = input.sin().asin();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615234,"byte_end":615270,"line_start":705,"line_end":705,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615275,"byte_end":615332,"line_start":706,"line_end":706,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615337,"byte_end":615344,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615349,"byte_end":615358,"line_start":708,"line_end":708,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4629},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616069,"byte_end":616072,"line_start":730,"line_end":730,"column_start":12,"column_end":15},"name":"tan","qualname":"<Quaternion<N>>::tan","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic tangent.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615593,"byte_end":615633,"line_start":718,"line_end":718,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615638,"byte_end":615641,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615646,"byte_end":615659,"line_start":720,"line_end":720,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615664,"byte_end":615671,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615676,"byte_end":615715,"line_start":722,"line_end":722,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615720,"byte_end":615751,"line_start":723,"line_end":723,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615756,"byte_end":615808,"line_start":724,"line_end":724,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.00003821631725009489, 0.3713971716439371, 0.5570957574659058, 0.7427943432878743);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615813,"byte_end":615932,"line_start":725,"line_end":725,"column_start":5,"column_end":124}},{"value":"/ let result = input.tan();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615937,"byte_end":615966,"line_start":726,"line_end":726,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":615971,"byte_end":616031,"line_start":727,"line_end":727,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616036,"byte_end":616043,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616048,"byte_end":616057,"line_start":729,"line_end":729,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4630},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616511,"byte_end":616515,"line_start":745,"line_end":745,"column_start":12,"column_end":16},"name":"atan","qualname":"<Quaternion<N>>::atan","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arctangent.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616152,"byte_end":616195,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616200,"byte_end":616203,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616208,"byte_end":616221,"line_start":736,"line_end":736,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616226,"byte_end":616233,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616238,"byte_end":616277,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616282,"byte_end":616313,"line_start":739,"line_end":739,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616318,"byte_end":616370,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/ let result = input.tan().atan();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616375,"byte_end":616411,"line_start":741,"line_end":741,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616416,"byte_end":616473,"line_start":742,"line_end":742,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616478,"byte_end":616485,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616490,"byte_end":616499,"line_start":744,"line_end":744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4631},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617240,"byte_end":617244,"line_start":766,"line_end":766,"column_start":12,"column_end":16},"name":"sinh","qualname":"<Quaternion<N>>::sinh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic sinus.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616755,"byte_end":616804,"line_start":754,"line_end":754,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616809,"byte_end":616812,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616817,"byte_end":616830,"line_start":756,"line_end":756,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616835,"byte_end":616842,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616847,"byte_end":616886,"line_start":758,"line_end":758,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616891,"byte_end":616922,"line_start":759,"line_end":759,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616927,"byte_end":616979,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.7323376060463428, -0.4482074499805421, -0.6723111749708133, -0.8964148999610843);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":616984,"byte_end":617102,"line_start":761,"line_end":761,"column_start":5,"column_end":123}},{"value":"/ let result = input.sinh();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617107,"byte_end":617137,"line_start":762,"line_end":762,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617142,"byte_end":617202,"line_start":763,"line_end":763,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617207,"byte_end":617214,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617219,"byte_end":617228,"line_start":765,"line_end":765,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4632},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617800,"byte_end":617805,"line_start":782,"line_end":782,"column_start":12,"column_end":17},"name":"asinh","qualname":"<Quaternion<N>>::asinh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arcsinus.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617317,"byte_end":617369,"line_start":770,"line_end":770,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617374,"byte_end":617377,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617382,"byte_end":617395,"line_start":772,"line_end":772,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617400,"byte_end":617407,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617412,"byte_end":617451,"line_start":774,"line_end":774,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617456,"byte_end":617487,"line_start":775,"line_end":775,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617492,"byte_end":617544,"line_start":776,"line_end":776,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.385889902585242, 0.514052600662788, 0.7710789009941821, 1.028105201325576);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617549,"byte_end":617661,"line_start":777,"line_end":777,"column_start":5,"column_end":117}},{"value":"/ let result = input.asinh();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617666,"byte_end":617697,"line_start":778,"line_end":778,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617702,"byte_end":617762,"line_start":779,"line_end":779,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617767,"byte_end":617774,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617779,"byte_end":617788,"line_start":781,"line_end":781,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4633},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618419,"byte_end":618423,"line_start":799,"line_end":799,"column_start":12,"column_end":16},"name":"cosh","qualname":"<Quaternion<N>>::cosh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic cosinus.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617932,"byte_end":617983,"line_start":787,"line_end":787,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617988,"byte_end":617991,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":617996,"byte_end":618009,"line_start":789,"line_end":789,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618014,"byte_end":618021,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618026,"byte_end":618065,"line_start":791,"line_end":791,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618070,"byte_end":618101,"line_start":792,"line_end":792,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618106,"byte_end":618158,"line_start":793,"line_end":793,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.9615851176369566, -0.3413521745610167, -0.5120282618415251, -0.6827043491220334);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618163,"byte_end":618281,"line_start":794,"line_end":794,"column_start":5,"column_end":123}},{"value":"/ let result = input.cosh();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618286,"byte_end":618316,"line_start":795,"line_end":795,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618321,"byte_end":618381,"line_start":796,"line_end":796,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618386,"byte_end":618393,"line_start":797,"line_end":797,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618398,"byte_end":618407,"line_start":798,"line_end":798,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4634},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618984,"byte_end":618989,"line_start":815,"line_end":815,"column_start":12,"column_end":17},"name":"acosh","qualname":"<Quaternion<N>>::acosh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arccosinus.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618496,"byte_end":618550,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618555,"byte_end":618558,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618563,"byte_end":618576,"line_start":805,"line_end":805,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618581,"byte_end":618588,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618593,"byte_end":618632,"line_start":807,"line_end":807,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618637,"byte_end":618668,"line_start":808,"line_end":808,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618673,"byte_end":618725,"line_start":809,"line_end":809,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.4014472020074007, 0.5162761016176176, 0.7744141524264264, 1.0325522032352352);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618730,"byte_end":618845,"line_start":810,"line_end":810,"column_start":5,"column_end":120}},{"value":"/ let result = input.acosh();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618850,"byte_end":618881,"line_start":811,"line_end":811,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618886,"byte_end":618946,"line_start":812,"line_end":812,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618951,"byte_end":618958,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":618963,"byte_end":618972,"line_start":814,"line_end":814,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4635},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619622,"byte_end":619626,"line_start":832,"line_end":832,"column_start":12,"column_end":16},"name":"tanh","qualname":"<Quaternion<N>>::tanh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic tangent.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619133,"byte_end":619184,"line_start":820,"line_end":820,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619189,"byte_end":619192,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619197,"byte_end":619210,"line_start":822,"line_end":822,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619215,"byte_end":619222,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619227,"byte_end":619266,"line_start":824,"line_end":824,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619271,"byte_end":619302,"line_start":825,"line_end":825,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619307,"byte_end":619359,"line_start":826,"line_end":826,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(1.0248695360556623, -0.10229568178876419, -0.1534435226831464, -0.20459136357752844);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619364,"byte_end":619484,"line_start":827,"line_end":827,"column_start":5,"column_end":125}},{"value":"/ let result = input.tanh();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619489,"byte_end":619519,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619524,"byte_end":619584,"line_start":829,"line_end":829,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619589,"byte_end":619596,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619601,"byte_end":619610,"line_start":831,"line_end":831,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4636},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":620197,"byte_end":620202,"line_start":848,"line_end":848,"column_start":12,"column_end":17},"name":"atanh","qualname":"<Quaternion<N>>::atanh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arctangent.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619708,"byte_end":619762,"line_start":836,"line_end":836,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619767,"byte_end":619770,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619775,"byte_end":619788,"line_start":838,"line_end":838,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619793,"byte_end":619800,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619805,"byte_end":619844,"line_start":840,"line_end":840,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619849,"byte_end":619880,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619885,"byte_end":619937,"line_start":842,"line_end":842,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.03230293287000163, 0.5173453683196951, 0.7760180524795426, 1.0346907366393903);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":619942,"byte_end":620058,"line_start":843,"line_end":843,"column_start":5,"column_end":121}},{"value":"/ let result = input.atanh();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":620063,"byte_end":620094,"line_start":844,"line_end":844,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":620099,"byte_end":620159,"line_start":845,"line_end":845,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":620164,"byte_end":620171,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":620176,"byte_end":620185,"line_start":847,"line_end":847,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4656},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622322,"byte_end":622336,"line_start":915,"line_end":915,"column_start":10,"column_end":24},"name":"UnitQuaternion","qualname":"::geometry::quaternion::UnitQuaternion","value":"Unit<Quaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A unit quaternions. May be used to represent a rotation.\n","sig":null,"attributes":[{"value":"/ A unit quaternions. May be used to represent a rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622252,"byte_end":622312,"line_start":914,"line_end":914,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4660},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622626,"byte_end":622636,"line_start":923,"line_end":923,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<UnitQuaternion<N>>::into_owned","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Moves this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this unit quaternion into one that owns its data.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622407,"byte_end":622466,"line_start":918,"line_end":918,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622471,"byte_end":622480,"line_start":919,"line_end":919,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is unnecessary and will be removed in a future release. Use `.clone()` instead.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622485,"byte_end":622614,"line_start":920,"line_end":922,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":4661},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622897,"byte_end":622908,"line_start":932,"line_end":932,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<UnitQuaternion<N>>::clone_owned","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clones this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this unit quaternion into one that owns its data.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622677,"byte_end":622737,"line_start":927,"line_end":927,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622742,"byte_end":622751,"line_start":928,"line_end":928,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is unnecessary and will be removed in a future release. Use `.clone()` instead.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622756,"byte_end":622885,"line_start":929,"line_end":931,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":4662},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623314,"byte_end":623319,"line_start":946,"line_end":946,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitQuaternion<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi] of this unit quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622951,"byte_end":623009,"line_start":936,"line_end":936,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623014,"byte_end":623017,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623022,"byte_end":623035,"line_start":938,"line_end":938,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623040,"byte_end":623047,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623052,"byte_end":623104,"line_start":940,"line_end":940,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623109,"byte_end":623173,"line_start":941,"line_end":941,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623178,"byte_end":623237,"line_start":942,"line_end":942,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623242,"byte_end":623276,"line_start":943,"line_end":943,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623281,"byte_end":623288,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623293,"byte_end":623302,"line_start":945,"line_end":945,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4663},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623791,"byte_end":623801,"line_start":962,"line_end":962,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<UnitQuaternion<N>>::quaternion","value":"fn (&self) -> &Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying quaternion.","sig":null,"attributes":[{"value":"/ The underlying quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623466,"byte_end":623496,"line_start":951,"line_end":951,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623501,"byte_end":623504,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623509,"byte_end":623537,"line_start":953,"line_end":953,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623542,"byte_end":623545,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623550,"byte_end":623563,"line_start":955,"line_end":955,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623568,"byte_end":623575,"line_start":956,"line_end":956,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623580,"byte_end":623629,"line_start":957,"line_end":957,"column_start":5,"column_end":54}},{"value":"/ let axis = UnitQuaternion::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623634,"byte_end":623676,"line_start":958,"line_end":958,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*axis.quaternion(), Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623681,"byte_end":623753,"line_start":959,"line_end":959,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623758,"byte_end":623765,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623770,"byte_end":623779,"line_start":961,"line_end":961,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4664},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624287,"byte_end":624296,"line_start":977,"line_end":977,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitQuaternion<N>>::conjugate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623862,"byte_end":623912,"line_start":966,"line_end":966,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623917,"byte_end":623920,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623925,"byte_end":623938,"line_start":968,"line_end":968,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623943,"byte_end":623950,"line_start":969,"line_end":969,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":623955,"byte_end":624007,"line_start":970,"line_end":970,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624012,"byte_end":624076,"line_start":971,"line_end":971,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624081,"byte_end":624140,"line_start":972,"line_end":972,"column_start":5,"column_end":64}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624145,"byte_end":624176,"line_start":973,"line_end":973,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(conj, UnitQuaternion::from_axis_angle(&-axis, 1.78));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624181,"byte_end":624249,"line_start":974,"line_end":974,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624254,"byte_end":624261,"line_start":975,"line_end":975,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624266,"byte_end":624275,"line_start":976,"line_end":976,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4665},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624843,"byte_end":624850,"line_start":993,"line_end":993,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitQuaternion<N>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624380,"byte_end":624426,"line_start":981,"line_end":981,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624431,"byte_end":624434,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624439,"byte_end":624452,"line_start":983,"line_end":983,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624457,"byte_end":624464,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624469,"byte_end":624521,"line_start":985,"line_end":985,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624526,"byte_end":624590,"line_start":986,"line_end":986,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624595,"byte_end":624654,"line_start":987,"line_end":987,"column_start":5,"column_end":64}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624659,"byte_end":624687,"line_start":988,"line_end":988,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(rot * inv, UnitQuaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624692,"byte_end":624746,"line_start":989,"line_end":989,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(inv * rot, UnitQuaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624751,"byte_end":624805,"line_start":990,"line_end":990,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624810,"byte_end":624817,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624822,"byte_end":624831,"line_start":992,"line_end":992,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4666},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625375,"byte_end":625383,"line_start":1008,"line_end":1008,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitQuaternion<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624904,"byte_end":624970,"line_start":997,"line_end":997,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624975,"byte_end":624978,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":624983,"byte_end":624996,"line_start":999,"line_end":999,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625001,"byte_end":625008,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625013,"byte_end":625052,"line_start":1001,"line_end":1001,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625057,"byte_end":625103,"line_start":1002,"line_end":1002,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625108,"byte_end":625180,"line_start":1003,"line_end":1003,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625185,"byte_end":625257,"line_start":1004,"line_end":1004,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625262,"byte_end":625337,"line_start":1005,"line_end":1005,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625342,"byte_end":625349,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625354,"byte_end":625363,"line_start":1007,"line_end":1007,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4667},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626080,"byte_end":626091,"line_start":1027,"line_end":1027,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitQuaternion<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `self` and `other` coincide.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625490,"byte_end":625557,"line_start":1013,"line_end":1013,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625562,"byte_end":625565,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625570,"byte_end":625641,"line_start":1015,"line_end":1015,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625646,"byte_end":625649,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625654,"byte_end":625667,"line_start":1017,"line_end":1017,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625672,"byte_end":625679,"line_start":1018,"line_end":1018,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625684,"byte_end":625723,"line_start":1019,"line_end":1019,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625728,"byte_end":625774,"line_start":1020,"line_end":1020,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625779,"byte_end":625851,"line_start":1021,"line_end":1021,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625856,"byte_end":625928,"line_start":1022,"line_end":1022,"column_start":5,"column_end":77}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625933,"byte_end":625974,"line_start":1023,"line_end":1023,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":625979,"byte_end":626042,"line_start":1024,"line_end":1024,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626047,"byte_end":626054,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626059,"byte_end":626068,"line_start":1026,"line_end":1026,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4668},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626630,"byte_end":626634,"line_start":1043,"line_end":1043,"column_start":12,"column_end":16},"name":"lerp","qualname":"<UnitQuaternion<N>>::lerp","value":"fn (&self, other: &Self, t: N) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Linear interpolation between two unit quaternions.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626154,"byte_end":626208,"line_start":1031,"line_end":1031,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626213,"byte_end":626216,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ The result is not normalized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626221,"byte_end":626254,"line_start":1033,"line_end":1033,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626259,"byte_end":626262,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626267,"byte_end":626280,"line_start":1035,"line_end":1035,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626285,"byte_end":626292,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626297,"byte_end":626346,"line_start":1037,"line_end":1037,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626351,"byte_end":626431,"line_start":1038,"line_end":1038,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626436,"byte_end":626516,"line_start":1039,"line_end":1039,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(0.9, 0.1, 0.0, 0.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626521,"byte_end":626592,"line_start":1040,"line_end":1040,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626597,"byte_end":626604,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626609,"byte_end":626618,"line_start":1042,"line_end":1042,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4669},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627297,"byte_end":627302,"line_start":1059,"line_end":1059,"column_start":12,"column_end":17},"name":"nlerp","qualname":"<UnitQuaternion<N>>::nlerp","value":"fn (&self, other: &Self, t: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalized linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Normalized linear interpolation between two unit quaternions.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626738,"byte_end":626803,"line_start":1047,"line_end":1047,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626808,"byte_end":626811,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.lerp` except that the result is normalized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626816,"byte_end":626889,"line_start":1049,"line_end":1049,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626894,"byte_end":626897,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626902,"byte_end":626915,"line_start":1051,"line_end":1051,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626920,"byte_end":626927,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626932,"byte_end":626981,"line_start":1053,"line_end":1053,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":626986,"byte_end":627066,"line_start":1054,"line_end":1054,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627071,"byte_end":627151,"line_start":1055,"line_end":1055,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.nlerp(&q2, 0.1), UnitQuaternion::new_normalize(Quaternion::new(0.9, 0.1, 0.0, 0.0)));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627156,"byte_end":627259,"line_start":1056,"line_end":1056,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627264,"byte_end":627271,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627276,"byte_end":627285,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4670},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627738,"byte_end":627743,"line_start":1071,"line_end":1071,"column_start":12,"column_end":17},"name":"slerp","qualname":"<UnitQuaternion<N>>::slerp","value":"fn (&self, other: &Self, t: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between two unit quaternions.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627465,"byte_end":627529,"line_start":1066,"line_end":1066,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627534,"byte_end":627537,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ Panics if the angle between both quaternion is 180 degrees (in which case the interpolation","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627542,"byte_end":627637,"line_start":1068,"line_end":1068,"column_start":5,"column_end":100}},{"value":"/ is not well-defined). Use `.try_slerp` instead to avoid the panic.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627642,"byte_end":627712,"line_start":1069,"line_end":1069,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627717,"byte_end":627726,"line_start":1070,"line_end":1070,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4671},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628584,"byte_end":628593,"line_start":1090,"line_end":1090,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<UnitQuaternion<N>>::try_slerp","value":"fn (&self, other: &Self, t: N, epsilon: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit quaternions or returns `None`\n if both quaternions are approximately 180 degrees apart (in which case the interpolation is\n not well-defined).","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit quaternions or returns `None`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":627987,"byte_end":628081,"line_start":1079,"line_end":1079,"column_start":5,"column_end":99}},{"value":"/ if both quaternions are approximately 180 degrees apart (in which case the interpolation is","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628086,"byte_end":628181,"line_start":1080,"line_end":1080,"column_start":5,"column_end":100}},{"value":"/ not well-defined).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628186,"byte_end":628208,"line_start":1081,"line_end":1081,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628213,"byte_end":628216,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628221,"byte_end":628236,"line_start":1083,"line_end":1083,"column_start":5,"column_end":20}},{"value":"/ * `self`: the first quaternion to interpolate from.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628241,"byte_end":628296,"line_start":1084,"line_end":1084,"column_start":5,"column_end":60}},{"value":"/ * `other`: the second quaternion to interpolate toward.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628301,"byte_end":628360,"line_start":1085,"line_end":1085,"column_start":5,"column_end":64}},{"value":"/ * `t`: the interpolation parameter. Should be between 0 and 1.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628365,"byte_end":628431,"line_start":1086,"line_end":1086,"column_start":5,"column_end":71}},{"value":"/ * `epsilon`: the value below which the sinus of the angle separating both quaternion","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628436,"byte_end":628524,"line_start":1087,"line_end":1087,"column_start":5,"column_end":93}},{"value":"/ must be to return `None`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628529,"byte_end":628558,"line_start":1088,"line_end":1088,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628563,"byte_end":628572,"line_start":1089,"line_end":1089,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4673},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628978,"byte_end":628991,"line_start":1104,"line_end":1104,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitQuaternion<N>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion in-place.\n","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628893,"byte_end":628952,"line_start":1102,"line_end":1102,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":628957,"byte_end":628966,"line_start":1103,"line_end":1103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629611,"byte_end":629622,"line_start":1121,"line_end":1121,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitQuaternion<N>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629064,"byte_end":629110,"line_start":1108,"line_end":1108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629115,"byte_end":629118,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629123,"byte_end":629136,"line_start":1110,"line_end":1110,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629141,"byte_end":629148,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629153,"byte_end":629192,"line_start":1112,"line_end":1112,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629197,"byte_end":629249,"line_start":1113,"line_end":1113,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629254,"byte_end":629302,"line_start":1114,"line_end":1114,"column_start":5,"column_end":53}},{"value":"/ let mut rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629307,"byte_end":629356,"line_start":1115,"line_end":1115,"column_start":5,"column_end":54}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629361,"byte_end":629383,"line_start":1116,"line_end":1116,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitQuaternion::new(axisangle), UnitQuaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629388,"byte_end":629478,"line_start":1117,"line_end":1117,"column_start":5,"column_end":95}},{"value":"/ assert_relative_eq!(UnitQuaternion::new(axisangle) * rot, UnitQuaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629483,"byte_end":629573,"line_start":1118,"line_end":1118,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629578,"byte_end":629585,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629590,"byte_end":629599,"line_start":1120,"line_end":1120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4675},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630256,"byte_end":630260,"line_start":1140,"line_end":1140,"column_start":12,"column_end":16},"name":"axis","qualname":"<UnitQuaternion<N>>::axis","value":"fn (&self) -> Option<Unit<Vector3<N>>>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion or `None` if the rotation is zero.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion or `None` if the rotation is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629695,"byte_end":629775,"line_start":1125,"line_end":1125,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629780,"byte_end":629783,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629788,"byte_end":629801,"line_start":1127,"line_end":1127,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629806,"byte_end":629813,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629818,"byte_end":629870,"line_start":1129,"line_end":1129,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629875,"byte_end":629939,"line_start":1130,"line_end":1130,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629944,"byte_end":629964,"line_start":1131,"line_end":1131,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":629969,"byte_end":630029,"line_start":1132,"line_end":1132,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis(), Some(axis));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630034,"byte_end":630073,"line_start":1133,"line_end":1133,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630078,"byte_end":630081,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630086,"byte_end":630116,"line_start":1135,"line_end":1135,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630121,"byte_end":630179,"line_start":1136,"line_end":1136,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630184,"byte_end":630218,"line_start":1137,"line_end":1137,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630223,"byte_end":630230,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630235,"byte_end":630244,"line_start":1139,"line_end":1139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4676},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630956,"byte_end":630967,"line_start":1161,"line_end":1161,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitQuaternion<N>>::scaled_axis","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion multiplied by the rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630520,"byte_end":630599,"line_start":1150,"line_end":1150,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630604,"byte_end":630607,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630612,"byte_end":630625,"line_start":1152,"line_end":1152,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630630,"byte_end":630637,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630642,"byte_end":630681,"line_start":1154,"line_end":1154,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630686,"byte_end":630738,"line_start":1155,"line_end":1155,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630743,"byte_end":630791,"line_start":1156,"line_end":1156,"column_start":5,"column_end":53}},{"value":"/ let rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630796,"byte_end":630841,"line_start":1157,"line_end":1157,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630846,"byte_end":630918,"line_start":1158,"line_end":1158,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630923,"byte_end":630930,"line_start":1159,"line_end":1159,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":630935,"byte_end":630944,"line_start":1160,"line_end":1160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4677},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631766,"byte_end":631776,"line_start":1186,"line_end":1186,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitQuaternion<N>>::axis_angle","value":"fn (&self) -> Option<(Unit<Vector3<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631144,"byte_end":631211,"line_start":1169,"line_end":1169,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631216,"byte_end":631219,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631224,"byte_end":631264,"line_start":1171,"line_end":1171,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631269,"byte_end":631272,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631277,"byte_end":631290,"line_start":1173,"line_end":1173,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631295,"byte_end":631302,"line_start":1174,"line_end":1174,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631307,"byte_end":631359,"line_start":1175,"line_end":1175,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631364,"byte_end":631428,"line_start":1176,"line_end":1176,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631433,"byte_end":631453,"line_start":1177,"line_end":1177,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631458,"byte_end":631518,"line_start":1178,"line_end":1178,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis_angle(), Some((axis, angle)));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631523,"byte_end":631577,"line_start":1179,"line_end":1179,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631582,"byte_end":631585,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631590,"byte_end":631620,"line_start":1181,"line_end":1181,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631625,"byte_end":631683,"line_start":1182,"line_end":1182,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631688,"byte_end":631728,"line_start":1183,"line_end":1183,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631733,"byte_end":631740,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631745,"byte_end":631754,"line_start":1185,"line_end":1185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4679},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632054,"byte_end":632057,"line_start":1194,"line_end":1194,"column_start":12,"column_end":15},"name":"exp","qualname":"<UnitQuaternion<N>>::exp","value":"fn (&self) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631883,"byte_end":631927,"line_start":1190,"line_end":1190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631932,"byte_end":631935,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":631940,"byte_end":632028,"line_start":1192,"line_end":1192,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632033,"byte_end":632042,"line_start":1193,"line_end":1193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4680},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632773,"byte_end":632775,"line_start":1213,"line_end":1213,"column_start":12,"column_end":14},"name":"ln","qualname":"<UnitQuaternion<N>>::ln","value":"fn (&self) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632123,"byte_end":632173,"line_start":1198,"line_end":1198,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632178,"byte_end":632181,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632186,"byte_end":632274,"line_start":1200,"line_end":1200,"column_start":5,"column_end":93}},{"value":"/ The vector part of the return value corresponds to the axis-angle representation (divided","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632279,"byte_end":632372,"line_start":1201,"line_end":1201,"column_start":5,"column_end":98}},{"value":"/ by 2.0) of this unit quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632377,"byte_end":632413,"line_start":1202,"line_end":1202,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632418,"byte_end":632421,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632426,"byte_end":632439,"line_start":1204,"line_end":1204,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632444,"byte_end":632451,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632456,"byte_end":632495,"line_start":1206,"line_end":1206,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632500,"byte_end":632546,"line_start":1207,"line_end":1207,"column_start":5,"column_end":51}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632551,"byte_end":632599,"line_start":1208,"line_end":1208,"column_start":5,"column_end":53}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632604,"byte_end":632647,"line_start":1209,"line_end":1209,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(q.ln().vector().into_owned(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632652,"byte_end":632735,"line_start":1210,"line_end":1210,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632740,"byte_end":632747,"line_start":1211,"line_end":1211,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632752,"byte_end":632761,"line_start":1212,"line_end":1212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4681},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633646,"byte_end":633650,"line_start":1238,"line_end":1238,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitQuaternion<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":632975,"byte_end":633026,"line_start":1221,"line_end":1221,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633031,"byte_end":633034,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ This returns the unit quaternion that identifies a rotation with axis `self.axis()` and","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633039,"byte_end":633130,"line_start":1223,"line_end":1223,"column_start":5,"column_end":96}},{"value":"/ angle `self.angle() × n`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633135,"byte_end":633165,"line_start":1224,"line_end":1224,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633170,"byte_end":633173,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633178,"byte_end":633191,"line_start":1226,"line_end":1226,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633196,"byte_end":633203,"line_start":1227,"line_end":1227,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633208,"byte_end":633247,"line_start":1228,"line_end":1228,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633252,"byte_end":633304,"line_start":1229,"line_end":1229,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633309,"byte_end":633373,"line_start":1230,"line_end":1230,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633378,"byte_end":633398,"line_start":1231,"line_end":1231,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633403,"byte_end":633463,"line_start":1232,"line_end":1232,"column_start":5,"column_end":65}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633468,"byte_end":633496,"line_start":1233,"line_end":1233,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633501,"byte_end":633570,"line_start":1234,"line_end":1234,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633575,"byte_end":633608,"line_start":1235,"line_end":1235,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633613,"byte_end":633620,"line_start":1236,"line_end":1236,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633625,"byte_end":633634,"line_start":1237,"line_end":1237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4682},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":634508,"byte_end":634526,"line_start":1263,"line_end":1263,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitQuaternion<N>>::to_rotation_matrix","value":"fn (&self) -> Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix from this unit quaternion.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix from this unit quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633836,"byte_end":633891,"line_start":1246,"line_end":1246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633896,"byte_end":633899,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633904,"byte_end":633917,"line_start":1248,"line_end":1248,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633922,"byte_end":633925,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633930,"byte_end":633937,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633942,"byte_end":633981,"line_start":1251,"line_end":1251,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":633986,"byte_end":634005,"line_start":1252,"line_end":1252,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":634010,"byte_end":634065,"line_start":1253,"line_end":1253,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":634070,"byte_end":634158,"line_start":1254,"line_end":1254,"column_start":5,"column_end":93}},{"value":"/ let rot = q.to_rotation_matrix();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":634163,"byte_end":634200,"line_start":1255,"line_end":1255,"column_start":5,"column_end":42}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":634205,"byte_end":634263,"line_start":1256,"line_end":1256,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":634268,"byte_end":634326,"line_start":1257,"line_end":1257,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":634331,"byte_end":634390,"line_start":1258,"line_end":1258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":634395,"byte_end":634398,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(*rot.matrix(), expected, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":634403,"byte_end":634470,"line_start":1260,"line_end":1260,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":634475,"byte_end":634482,"line_start":1261,"line_end":1261,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":634487,"byte_end":634496,"line_start":1262,"line_end":1262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4683},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635613,"byte_end":635628,"line_start":1298,"line_end":1298,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<UnitQuaternion<N>>::to_euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent Euler angles.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent Euler angles.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635378,"byte_end":635445,"line_start":1293,"line_end":1293,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635450,"byte_end":635453,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635458,"byte_end":635517,"line_start":1295,"line_end":1295,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635522,"byte_end":635531,"line_start":1296,"line_end":1296,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635536,"byte_end":635601,"line_start":1297,"line_end":1297,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4684},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636282,"byte_end":636294,"line_start":1317,"line_end":1317,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<UnitQuaternion<N>>::euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the euler angles corresponding to this unit quaternion.","sig":null,"attributes":[{"value":"/ Retrieves the euler angles corresponding to this unit quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635690,"byte_end":635759,"line_start":1302,"line_end":1302,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635764,"byte_end":635767,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635772,"byte_end":635831,"line_start":1304,"line_end":1304,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635836,"byte_end":635839,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635844,"byte_end":635857,"line_start":1306,"line_end":1306,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635862,"byte_end":635869,"line_start":1307,"line_end":1307,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635874,"byte_end":635913,"line_start":1308,"line_end":1308,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635918,"byte_end":635953,"line_start":1309,"line_end":1309,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":635958,"byte_end":636021,"line_start":1310,"line_end":1310,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636026,"byte_end":636061,"line_start":1311,"line_end":1311,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636066,"byte_end":636122,"line_start":1312,"line_end":1312,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636127,"byte_end":636183,"line_start":1313,"line_end":1313,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636188,"byte_end":636244,"line_start":1314,"line_end":1314,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636249,"byte_end":636256,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636261,"byte_end":636270,"line_start":1316,"line_end":1316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4685},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637132,"byte_end":637146,"line_start":1338,"line_end":1338,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitQuaternion<N>>::to_homogeneous","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent homogeneous transformation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636377,"byte_end":636465,"line_start":1321,"line_end":1321,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636470,"byte_end":636473,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636478,"byte_end":636491,"line_start":1323,"line_end":1323,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636496,"byte_end":636499,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636504,"byte_end":636511,"line_start":1325,"line_end":1325,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636516,"byte_end":636555,"line_start":1326,"line_end":1326,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636560,"byte_end":636579,"line_start":1327,"line_end":1327,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636584,"byte_end":636639,"line_start":1328,"line_end":1328,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636644,"byte_end":636734,"line_start":1329,"line_end":1329,"column_start":5,"column_end":95}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636739,"byte_end":636802,"line_start":1330,"line_end":1330,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636807,"byte_end":636870,"line_start":1331,"line_end":1331,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636875,"byte_end":636938,"line_start":1332,"line_end":1332,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":636943,"byte_end":637007,"line_start":1333,"line_end":1333,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637012,"byte_end":637015,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637020,"byte_end":637094,"line_start":1335,"line_end":1335,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637099,"byte_end":637106,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637111,"byte_end":637120,"line_start":1337,"line_end":1337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4686},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637834,"byte_end":637849,"line_start":1358,"line_end":1358,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitQuaternion<N>>::transform_point","value":"fn (&self, pt: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a point by this unit quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637232,"byte_end":637275,"line_start":1342,"line_end":1342,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637280,"byte_end":637283,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637288,"byte_end":637343,"line_start":1344,"line_end":1344,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637348,"byte_end":637351,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637356,"byte_end":637369,"line_start":1346,"line_end":1346,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637374,"byte_end":637377,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637382,"byte_end":637389,"line_start":1348,"line_end":1348,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637394,"byte_end":637433,"line_start":1349,"line_end":1349,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637438,"byte_end":637457,"line_start":1350,"line_end":1350,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637462,"byte_end":637516,"line_start":1351,"line_end":1351,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637521,"byte_end":637611,"line_start":1352,"line_end":1352,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637616,"byte_end":637693,"line_start":1353,"line_end":1353,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637698,"byte_end":637701,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637706,"byte_end":637796,"line_start":1355,"line_end":1355,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637801,"byte_end":637808,"line_start":1356,"line_end":1356,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637813,"byte_end":637822,"line_start":1357,"line_end":1357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4687},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638516,"byte_end":638532,"line_start":1378,"line_end":1378,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitQuaternion<N>>::transform_vector","value":"fn (&self, v: &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a vector by this unit quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637917,"byte_end":637961,"line_start":1362,"line_end":1362,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637966,"byte_end":637969,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":637974,"byte_end":638028,"line_start":1364,"line_end":1364,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638033,"byte_end":638036,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638041,"byte_end":638054,"line_start":1366,"line_end":1366,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638059,"byte_end":638062,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638067,"byte_end":638074,"line_start":1368,"line_end":1368,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638079,"byte_end":638118,"line_start":1369,"line_end":1369,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638123,"byte_end":638142,"line_start":1370,"line_end":1370,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638147,"byte_end":638193,"line_start":1371,"line_end":1371,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638198,"byte_end":638288,"line_start":1372,"line_end":1372,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638293,"byte_end":638373,"line_start":1373,"line_end":1373,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638378,"byte_end":638381,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638386,"byte_end":638478,"line_start":1375,"line_end":1375,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638483,"byte_end":638490,"line_start":1376,"line_end":1376,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638495,"byte_end":638504,"line_start":1377,"line_end":1377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4688},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639256,"byte_end":639279,"line_start":1398,"line_end":1398,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitQuaternion<N>>::inverse_transform_point","value":"fn (&self, pt: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n point.","sig":null,"attributes":[{"value":"/ Rotate a point by the inverse of this unit quaternion. This may be","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638600,"byte_end":638670,"line_start":1382,"line_end":1382,"column_start":5,"column_end":75}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638675,"byte_end":638742,"line_start":1383,"line_end":1383,"column_start":5,"column_end":72}},{"value":"/ point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638747,"byte_end":638757,"line_start":1384,"line_end":1384,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638762,"byte_end":638765,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638770,"byte_end":638783,"line_start":1386,"line_end":1386,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638788,"byte_end":638791,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638796,"byte_end":638803,"line_start":1388,"line_end":1388,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638808,"byte_end":638847,"line_start":1389,"line_end":1389,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638852,"byte_end":638871,"line_start":1390,"line_end":1390,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638876,"byte_end":638930,"line_start":1391,"line_end":1391,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":638935,"byte_end":639025,"line_start":1392,"line_end":1392,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639030,"byte_end":639115,"line_start":1393,"line_end":1393,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639120,"byte_end":639123,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639128,"byte_end":639218,"line_start":1395,"line_end":1395,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639223,"byte_end":639230,"line_start":1396,"line_end":1396,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639235,"byte_end":639244,"line_start":1397,"line_end":1397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4689},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":640169,"byte_end":640193,"line_start":1420,"line_end":1420,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitQuaternion<N>>::inverse_transform_vector","value":"fn (&self, v: &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n vector.","sig":null,"attributes":[{"value":"/ Rotate a vector by the inverse of this unit quaternion. This may be","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639514,"byte_end":639585,"line_start":1404,"line_end":1404,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639590,"byte_end":639657,"line_start":1405,"line_end":1405,"column_start":5,"column_end":72}},{"value":"/ vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639662,"byte_end":639673,"line_start":1406,"line_end":1406,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639678,"byte_end":639681,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639686,"byte_end":639699,"line_start":1408,"line_end":1408,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639704,"byte_end":639707,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639712,"byte_end":639719,"line_start":1410,"line_end":1410,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639724,"byte_end":639763,"line_start":1411,"line_end":1411,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639768,"byte_end":639787,"line_start":1412,"line_end":1412,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639792,"byte_end":639838,"line_start":1413,"line_end":1413,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639843,"byte_end":639933,"line_start":1414,"line_end":1414,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":639938,"byte_end":640026,"line_start":1415,"line_end":1415,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":640031,"byte_end":640034,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":640039,"byte_end":640131,"line_start":1417,"line_end":1417,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":640136,"byte_end":640143,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":640148,"byte_end":640157,"line_start":1419,"line_end":1419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4852},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":649714,"byte_end":649725,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Quaternion<N>>::from_vector","value":"fn (vector: Vector4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`\n vector component.\n","sig":null,"attributes":[{"value":"/ Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":649520,"byte_end":649612,"line_start":21,"line_end":21,"column_start":5,"column_end":97}},{"value":"/ vector component.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":649617,"byte_end":649638,"line_start":22,"line_end":22,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":649643,"byte_end":649652,"line_start":23,"line_end":23,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":649657,"byte_end":649702,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4853},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650387,"byte_end":650390,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Quaternion<N>>::new","value":"fn (w: N, i: N, j: N, k: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its individual components. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its individual components. Note that the arguments order does","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":649799,"byte_end":649894,"line_start":29,"line_end":29,"column_start":5,"column_end":100}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":649899,"byte_end":649936,"line_start":30,"line_end":30,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":649941,"byte_end":649944,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The storage order is `[ i, j, k, w ]` while the arguments for this functions are in the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":649949,"byte_end":650040,"line_start":32,"line_end":32,"column_start":5,"column_end":96}},{"value":"/ order `(w, i, j, k)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650045,"byte_end":650070,"line_start":33,"line_end":33,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650075,"byte_end":650078,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650083,"byte_end":650096,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650101,"byte_end":650108,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650113,"byte_end":650155,"line_start":37,"line_end":37,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650160,"byte_end":650208,"line_start":38,"line_end":38,"column_start":5,"column_end":53}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650213,"byte_end":650279,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650284,"byte_end":650349,"line_start":40,"line_end":40,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650354,"byte_end":650361,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650366,"byte_end":650375,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4854},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650540,"byte_end":650549,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"from_imag","qualname":"<Quaternion<N>>::from_imag","value":"fn (vector: Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a pure quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a pure quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650481,"byte_end":650514,"line_start":47,"line_end":47,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650519,"byte_end":650528,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4855},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651264,"byte_end":651274,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Quaternion<N>>::from_parts","value":"fn <SB> (scalar: N, vector: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its scalar and vector parts. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its scalar and vector parts. Note that the arguments order does","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650635,"byte_end":650732,"line_start":53,"line_end":53,"column_start":5,"column_end":102}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650737,"byte_end":650774,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650779,"byte_end":650782,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The storage order is [ vector, scalar ].","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650787,"byte_end":650831,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650836,"byte_end":650839,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650844,"byte_end":650857,"line_start":58,"line_end":58,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650862,"byte_end":650869,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector3, Vector4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650874,"byte_end":650925,"line_start":60,"line_end":60,"column_start":5,"column_end":56}},{"value":"/ let w = 1.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650930,"byte_end":650946,"line_start":61,"line_end":61,"column_start":5,"column_end":21}},{"value":"/ let ijk = Vector3::new(2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650951,"byte_end":650993,"line_start":62,"line_end":62,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::from_parts(w, ijk);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":650998,"byte_end":651041,"line_start":63,"line_end":63,"column_start":5,"column_end":48}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651046,"byte_end":651112,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651117,"byte_end":651182,"line_start":65,"line_end":65,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651187,"byte_end":651194,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651199,"byte_end":651208,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4857},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651485,"byte_end":651494,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"from_real","qualname":"<Quaternion<N>>::from_real","value":"fn (r: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a real quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a real quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651426,"byte_end":651459,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651464,"byte_end":651473,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4858},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651744,"byte_end":651768,"line_start":84,"line_end":84,"column_start":12,"column_end":36},"name":"from_polar_decomposition","qualname":"<Quaternion<N>>::from_polar_decomposition","value":"fn <SB> (scale: N, theta: N, axis: Unit<Vector<N, U3, SB>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its polar decomposition.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its polar decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651567,"byte_end":651625,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651630,"byte_end":651633,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Note that `axis` is assumed to be a unit vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":651638,"byte_end":651690,"line_start":82,"line_end":82,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4860},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652324,"byte_end":652332,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"identity","qualname":"<Quaternion<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The quaternion multiplicative identity.","sig":null,"attributes":[{"value":"/ The quaternion multiplicative identity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652003,"byte_end":652046,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652051,"byte_end":652054,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652059,"byte_end":652072,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652077,"byte_end":652084,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652089,"byte_end":652120,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652125,"byte_end":652160,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/ let q2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652165,"byte_end":652214,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652219,"byte_end":652222,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652227,"byte_end":652254,"line_start":99,"line_end":99,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652259,"byte_end":652286,"line_start":100,"line_end":100,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652291,"byte_end":652298,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652303,"byte_end":652312,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4875},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653823,"byte_end":653831,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitQuaternion<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation identity.","sig":null,"attributes":[{"value":"/ The rotation identity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653347,"byte_end":653373,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653378,"byte_end":653381,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653386,"byte_end":653399,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653404,"byte_end":653411,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653416,"byte_end":653470,"line_start":156,"line_end":156,"column_start":5,"column_end":59}},{"value":"/ let q = UnitQuaternion::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653475,"byte_end":653514,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/ let q2 = UnitQuaternion::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653519,"byte_end":653581,"line_start":158,"line_end":158,"column_start":5,"column_end":67}},{"value":"/ let v = Vector3::new_random();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653586,"byte_end":653620,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/ let p = Point3::from(v);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653625,"byte_end":653653,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653658,"byte_end":653661,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653666,"byte_end":653693,"line_start":162,"line_end":162,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653698,"byte_end":653725,"line_start":163,"line_end":163,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q * v, v);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653730,"byte_end":653755,"line_start":164,"line_end":164,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(q * p, p);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653760,"byte_end":653785,"line_start":165,"line_end":165,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653790,"byte_end":653797,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653802,"byte_end":653811,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4876},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654938,"byte_end":654953,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<UnitQuaternion<N>>::from_axis_angle","value":"fn <SB> (axis: &Unit<Vector<N, U3, SB>>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from a unit vector (the rotation axis) and an angle\n (the rotation angle).","sig":null,"attributes":[{"value":"/ Creates a new quaternion from a unit vector (the rotation axis) and an angle","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653907,"byte_end":653987,"line_start":172,"line_end":172,"column_start":5,"column_end":85}},{"value":"/ (the rotation angle).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653992,"byte_end":654017,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654022,"byte_end":654025,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654030,"byte_end":654043,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654048,"byte_end":654055,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654060,"byte_end":654099,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654104,"byte_end":654123,"line_start":178,"line_end":178,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654128,"byte_end":654182,"line_start":179,"line_end":179,"column_start":5,"column_end":59}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654187,"byte_end":654220,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654225,"byte_end":654264,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654269,"byte_end":654324,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654329,"byte_end":654369,"line_start":183,"line_end":183,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654374,"byte_end":654416,"line_start":184,"line_end":184,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654421,"byte_end":654479,"line_start":185,"line_end":185,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654484,"byte_end":654487,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.axis().unwrap(), axis);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654492,"byte_end":654532,"line_start":187,"line_end":187,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(q.angle(), angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654537,"byte_end":654570,"line_start":188,"line_end":188,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654575,"byte_end":654654,"line_start":189,"line_end":189,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654659,"byte_end":654740,"line_start":190,"line_end":190,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654745,"byte_end":654748,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654753,"byte_end":654793,"line_start":192,"line_end":192,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654798,"byte_end":654900,"line_start":193,"line_end":193,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654905,"byte_end":654912,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":654917,"byte_end":654926,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4878},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655356,"byte_end":655371,"line_start":208,"line_end":208,"column_start":12,"column_end":27},"name":"from_quaternion","qualname":"<UnitQuaternion<N>>::from_quaternion","value":"fn (q: Quaternion<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from a quaternion.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from a quaternion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655221,"byte_end":655273,"line_start":204,"line_end":204,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655278,"byte_end":655281,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ The input quaternion will be normalized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655286,"byte_end":655330,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655335,"byte_end":655344,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4879},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656037,"byte_end":656054,"line_start":227,"line_end":227,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<UnitQuaternion<N>>::from_euler_angles","value":"fn (roll: N, pitch: N, yaw: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from Euler angles.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655442,"byte_end":655494,"line_start":212,"line_end":212,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655499,"byte_end":655502,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655507,"byte_end":655586,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655591,"byte_end":655594,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655599,"byte_end":655612,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655617,"byte_end":655624,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655629,"byte_end":655668,"line_start":218,"line_end":218,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655673,"byte_end":655708,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655713,"byte_end":655776,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655781,"byte_end":655816,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655821,"byte_end":655877,"line_start":222,"line_end":222,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655882,"byte_end":655938,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":655943,"byte_end":655999,"line_start":224,"line_end":224,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656004,"byte_end":656011,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656016,"byte_end":656025,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4880},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":657194,"byte_end":657214,"line_start":257,"line_end":257,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitQuaternion<N>>::from_rotation_matrix","value":"fn (rotmat: &Rotation3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion from a rotation matrix.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion from a rotation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656542,"byte_end":656595,"line_start":242,"line_end":242,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656600,"byte_end":656603,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656608,"byte_end":656621,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656626,"byte_end":656633,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656638,"byte_end":656677,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656682,"byte_end":656739,"line_start":247,"line_end":247,"column_start":5,"column_end":62}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656744,"byte_end":656777,"line_start":248,"line_end":248,"column_start":5,"column_end":38}},{"value":"/ let angle = 0.1;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656782,"byte_end":656802,"line_start":249,"line_end":249,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656807,"byte_end":656862,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_rotation_matrix(&rot);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656867,"byte_end":656922,"line_start":251,"line_end":251,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(q.to_rotation_matrix(), rot, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":656927,"byte_end":656998,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(q.axis().unwrap(), rot.axis().unwrap(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":657003,"byte_end":657085,"line_start":253,"line_end":253,"column_start":5,"column_end":87}},{"value":"/ assert_relative_eq!(q.angle(), rot.angle(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":657090,"byte_end":657156,"line_start":254,"line_end":254,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":657161,"byte_end":657168,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":657173,"byte_end":657182,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4881},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659625,"byte_end":659636,"line_start":310,"line_end":310,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitQuaternion<N>>::from_matrix","value":"fn (m: &Matrix3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659273,"byte_end":659367,"line_start":305,"line_end":305,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659372,"byte_end":659375,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659380,"byte_end":659452,"line_start":307,"line_end":307,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659457,"byte_end":659506,"line_start":308,"line_end":308,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659511,"byte_end":659613,"line_start":309,"line_end":309,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4882},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660521,"byte_end":660536,"line_start":326,"line_end":326,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitQuaternion<N>>::from_matrix_eps","value":"fn (m: &Matrix3<N>, eps: N, max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659715,"byte_end":659809,"line_start":314,"line_end":314,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659814,"byte_end":659817,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659822,"byte_end":659924,"line_start":316,"line_end":316,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659929,"byte_end":659932,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659937,"byte_end":659953,"line_start":318,"line_end":318,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659958,"byte_end":659961,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":659966,"byte_end":660038,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660043,"byte_end":660134,"line_start":321,"line_end":321,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660139,"byte_end":660242,"line_start":322,"line_end":322,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660247,"byte_end":660360,"line_start":323,"line_end":323,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660365,"byte_end":660469,"line_start":324,"line_end":324,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660474,"byte_end":660509,"line_start":325,"line_end":325,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4883},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661247,"byte_end":661263,"line_start":345,"line_end":345,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitQuaternion<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660723,"byte_end":660812,"line_start":331,"line_end":331,"column_start":5,"column_end":94}},{"value":"/ direction.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660817,"byte_end":660831,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660836,"byte_end":660839,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660844,"byte_end":660857,"line_start":334,"line_end":334,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660862,"byte_end":660869,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660874,"byte_end":660913,"line_start":336,"line_end":336,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660918,"byte_end":660964,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":660969,"byte_end":661009,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661014,"byte_end":661054,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661059,"byte_end":661121,"line_start":340,"line_end":340,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661126,"byte_end":661160,"line_start":341,"line_end":341,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661165,"byte_end":661209,"line_start":342,"line_end":342,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661214,"byte_end":661221,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661226,"byte_end":661235,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4886},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662165,"byte_end":662188,"line_start":368,"line_end":368,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitQuaternion<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>, s: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661471,"byte_end":661559,"line_start":353,"line_end":353,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661564,"byte_end":661603,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661608,"byte_end":661611,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661616,"byte_end":661629,"line_start":356,"line_end":356,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661634,"byte_end":661641,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661646,"byte_end":661685,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661690,"byte_end":661736,"line_start":359,"line_end":359,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661741,"byte_end":661781,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661786,"byte_end":661826,"line_start":361,"line_end":361,"column_start":5,"column_end":45}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661831,"byte_end":661906,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661911,"byte_end":661986,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":661991,"byte_end":662064,"line_start":364,"line_end":364,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662069,"byte_end":662127,"line_start":365,"line_end":365,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662132,"byte_end":662139,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662144,"byte_end":662153,"line_start":367,"line_end":367,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4889},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663285,"byte_end":663306,"line_start":402,"line_end":402,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitQuaternion<N>>::rotation_between_axis","value":"fn <SB, SC> (a: &Unit<Vector<N, U3, SB>>, b: &Unit<Vector<N, U3, SC>>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662713,"byte_end":662802,"line_start":388,"line_end":388,"column_start":5,"column_end":94}},{"value":"/ direction.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662807,"byte_end":662821,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662826,"byte_end":662829,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662834,"byte_end":662847,"line_start":391,"line_end":391,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662852,"byte_end":662859,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662864,"byte_end":662903,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662908,"byte_end":662960,"line_start":394,"line_end":394,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":662965,"byte_end":663026,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663031,"byte_end":663092,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663097,"byte_end":663159,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663164,"byte_end":663198,"line_start":398,"line_end":398,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663203,"byte_end":663247,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663252,"byte_end":663259,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663264,"byte_end":663273,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4892},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":664296,"byte_end":664324,"line_start":428,"line_end":428,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitQuaternion<N>>::scaled_rotation_between_axis","value":"fn <SB, SC> (na: &Unit<Vector<N, U3, SB>>, nb: &Unit<Vector<N, U3, SC>>, s: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663554,"byte_end":663642,"line_start":413,"line_end":413,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663647,"byte_end":663686,"line_start":414,"line_end":414,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663691,"byte_end":663694,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663699,"byte_end":663712,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663717,"byte_end":663724,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663729,"byte_end":663768,"line_start":418,"line_end":418,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663773,"byte_end":663825,"line_start":419,"line_end":419,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663830,"byte_end":663891,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663896,"byte_end":663957,"line_start":421,"line_end":421,"column_start":5,"column_end":66}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":663962,"byte_end":664037,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":664042,"byte_end":664117,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":664122,"byte_end":664195,"line_start":424,"line_end":424,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":664200,"byte_end":664258,"line_start":425,"line_end":425,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":664263,"byte_end":664270,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":664275,"byte_end":664284,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4895},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666253,"byte_end":666265,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<UnitQuaternion<N>>::face_towards","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an unit quaternion that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates an unit quaternion that corresponds to the local frame of an observer standing at the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665350,"byte_end":665447,"line_start":463,"line_end":463,"column_start":5,"column_end":102}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665452,"byte_end":665488,"line_start":464,"line_end":464,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665493,"byte_end":665496,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665501,"byte_end":665549,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665554,"byte_end":665557,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665562,"byte_end":665577,"line_start":468,"line_end":468,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction. It does not need to be normalized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665582,"byte_end":665650,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/   * up - The vertical direction. It does not need to be normalized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665655,"byte_end":665726,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/   The only requirement of this parameter is to not be collinear to `dir`. Non-collinearity","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665731,"byte_end":665825,"line_start":471,"line_end":471,"column_start":5,"column_end":99}},{"value":"/   is not checked.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665830,"byte_end":665851,"line_start":472,"line_end":472,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665856,"byte_end":665859,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665864,"byte_end":665877,"line_start":474,"line_end":474,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665882,"byte_end":665889,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665894,"byte_end":665933,"line_start":476,"line_end":476,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665938,"byte_end":665957,"line_start":477,"line_end":477,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":665962,"byte_end":666008,"line_start":478,"line_end":478,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666013,"byte_end":666055,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666060,"byte_end":666086,"line_start":480,"line_end":480,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666091,"byte_end":666094,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::face_towards(&dir, &up);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666099,"byte_end":666151,"line_start":482,"line_end":482,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(q * Vector3::z(), dir.normalize());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666156,"byte_end":666215,"line_start":483,"line_end":483,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666220,"byte_end":666227,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666232,"byte_end":666241,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4898},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666607,"byte_end":666626,"line_start":496,"line_end":496,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<UnitQuaternion<N>>::new_observer_frames","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [UnitQuaternion::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [UnitQuaternion::face_towards] instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666484,"byte_end":666543,"line_start":494,"line_end":494,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666548,"byte_end":666595,"line_start":495,"line_end":495,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4901},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667778,"byte_end":667788,"line_start":527,"line_end":527,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<UnitQuaternion<N>>::look_at_rh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666811,"byte_end":666877,"line_start":504,"line_end":504,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666882,"byte_end":666885,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666890,"byte_end":666956,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":666961,"byte_end":667048,"line_start":507,"line_end":507,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667053,"byte_end":667076,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667081,"byte_end":667084,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667089,"byte_end":667104,"line_start":510,"line_end":510,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667109,"byte_end":667179,"line_start":511,"line_end":511,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. It does not need","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667184,"byte_end":667277,"line_start":512,"line_end":512,"column_start":5,"column_end":98}},{"value":"/   to be normalized. The only requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667282,"byte_end":667377,"line_start":513,"line_end":513,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667382,"byte_end":667385,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667390,"byte_end":667403,"line_start":515,"line_end":515,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667408,"byte_end":667415,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667420,"byte_end":667459,"line_start":517,"line_end":517,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667464,"byte_end":667483,"line_start":518,"line_end":518,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667488,"byte_end":667534,"line_start":519,"line_end":519,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667539,"byte_end":667581,"line_start":520,"line_end":520,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667586,"byte_end":667612,"line_start":521,"line_end":521,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667617,"byte_end":667620,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_rh(&dir, &up);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667625,"byte_end":667675,"line_start":523,"line_end":523,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), -Vector3::z());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667680,"byte_end":667740,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667745,"byte_end":667752,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667757,"byte_end":667766,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4904},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668914,"byte_end":668924,"line_start":558,"line_end":558,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<UnitQuaternion<N>>::look_at_lh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":667985,"byte_end":668050,"line_start":535,"line_end":535,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668055,"byte_end":668058,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668063,"byte_end":668129,"line_start":537,"line_end":537,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668134,"byte_end":668220,"line_start":538,"line_end":538,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668225,"byte_end":668248,"line_start":539,"line_end":539,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668253,"byte_end":668256,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668261,"byte_end":668276,"line_start":541,"line_end":541,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668281,"byte_end":668351,"line_start":542,"line_end":542,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668356,"byte_end":668441,"line_start":543,"line_end":543,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668446,"byte_end":668514,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668519,"byte_end":668522,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668527,"byte_end":668540,"line_start":546,"line_end":546,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668545,"byte_end":668552,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668557,"byte_end":668596,"line_start":548,"line_end":548,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668601,"byte_end":668620,"line_start":549,"line_end":549,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668625,"byte_end":668671,"line_start":550,"line_end":550,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668676,"byte_end":668718,"line_start":551,"line_end":551,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668723,"byte_end":668749,"line_start":552,"line_end":552,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668754,"byte_end":668757,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_lh(&dir, &up);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668762,"byte_end":668812,"line_start":554,"line_end":554,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), Vector3::z());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668817,"byte_end":668876,"line_start":555,"line_end":555,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668881,"byte_end":668888,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":668893,"byte_end":668902,"line_start":557,"line_end":557,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4907},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670123,"byte_end":670126,"line_start":588,"line_end":588,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitQuaternion<N>>::new","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669119,"byte_end":669212,"line_start":566,"line_end":566,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669217,"byte_end":669220,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669225,"byte_end":669332,"line_start":568,"line_end":568,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669337,"byte_end":669340,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669345,"byte_end":669358,"line_start":570,"line_end":570,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669363,"byte_end":669370,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669375,"byte_end":669414,"line_start":572,"line_end":572,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669419,"byte_end":669438,"line_start":573,"line_end":573,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669443,"byte_end":669497,"line_start":574,"line_end":574,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669502,"byte_end":669560,"line_start":575,"line_end":575,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669565,"byte_end":669620,"line_start":576,"line_end":576,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669625,"byte_end":669665,"line_start":577,"line_end":577,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669670,"byte_end":669712,"line_start":578,"line_end":578,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669717,"byte_end":669760,"line_start":579,"line_end":579,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669765,"byte_end":669768,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669773,"byte_end":669852,"line_start":581,"line_end":581,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669857,"byte_end":669938,"line_start":582,"line_end":582,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669943,"byte_end":669946,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669951,"byte_end":669991,"line_start":584,"line_end":584,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::new(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":669996,"byte_end":670085,"line_start":585,"line_end":585,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670090,"byte_end":670097,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670102,"byte_end":670111,"line_start":587,"line_end":587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4909},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671386,"byte_end":671393,"line_start":617,"line_end":617,"column_start":12,"column_end":19},"name":"new_eps","qualname":"<UnitQuaternion<N>>::new_eps","value":"fn <SB> (axisangle: Vector<N, U3, SB>, eps: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670354,"byte_end":670447,"line_start":595,"line_end":595,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670452,"byte_end":670455,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670460,"byte_end":670550,"line_start":597,"line_end":597,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670555,"byte_end":670558,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670563,"byte_end":670576,"line_start":599,"line_end":599,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670581,"byte_end":670588,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670593,"byte_end":670632,"line_start":601,"line_end":601,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670637,"byte_end":670656,"line_start":602,"line_end":602,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670661,"byte_end":670715,"line_start":603,"line_end":603,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670720,"byte_end":670778,"line_start":604,"line_end":604,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670783,"byte_end":670838,"line_start":605,"line_end":605,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670843,"byte_end":670883,"line_start":606,"line_end":606,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670888,"byte_end":670930,"line_start":607,"line_end":607,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new_eps(axisangle, 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670935,"byte_end":670990,"line_start":608,"line_end":608,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":670995,"byte_end":670998,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671003,"byte_end":671082,"line_start":610,"line_end":610,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671087,"byte_end":671168,"line_start":611,"line_end":611,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671173,"byte_end":671176,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671181,"byte_end":671229,"line_start":613,"line_end":613,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::new_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671234,"byte_end":671348,"line_start":614,"line_end":614,"column_start":5,"column_end":119}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671353,"byte_end":671360,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671365,"byte_end":671374,"line_start":616,"line_end":616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4911},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672706,"byte_end":672722,"line_start":647,"line_end":647,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitQuaternion<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671636,"byte_end":671729,"line_start":624,"line_end":624,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671734,"byte_end":671737,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671742,"byte_end":671849,"line_start":626,"line_end":626,"column_start":5,"column_end":112}},{"value":"/ Same as `Self::new(axisangle)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671854,"byte_end":671889,"line_start":627,"line_end":627,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671894,"byte_end":671897,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671902,"byte_end":671915,"line_start":629,"line_end":629,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671920,"byte_end":671927,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671932,"byte_end":671971,"line_start":631,"line_end":631,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":671976,"byte_end":671995,"line_start":632,"line_end":632,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672000,"byte_end":672054,"line_start":633,"line_end":633,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672059,"byte_end":672117,"line_start":634,"line_end":634,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672122,"byte_end":672177,"line_start":635,"line_end":635,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672182,"byte_end":672222,"line_start":636,"line_end":636,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672227,"byte_end":672269,"line_start":637,"line_end":637,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis(axisangle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672274,"byte_end":672330,"line_start":638,"line_end":638,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672335,"byte_end":672338,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672343,"byte_end":672422,"line_start":640,"line_end":640,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672427,"byte_end":672508,"line_start":641,"line_end":641,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672513,"byte_end":672516,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672521,"byte_end":672561,"line_start":643,"line_end":643,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672566,"byte_end":672668,"line_start":644,"line_end":644,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672673,"byte_end":672680,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672685,"byte_end":672694,"line_start":646,"line_end":646,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4913},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673943,"byte_end":673963,"line_start":675,"line_end":675,"column_start":12,"column_end":32},"name":"from_scaled_axis_eps","qualname":"<UnitQuaternion<N>>::from_scaled_axis_eps","value":"fn <SB> (axisangle: Vector<N, U3, SB>, eps: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672836,"byte_end":672929,"line_start":652,"line_end":652,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672934,"byte_end":672937,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":672942,"byte_end":673032,"line_start":654,"line_end":654,"column_start":5,"column_end":95}},{"value":"/ Same as `Self::new_eps(axisangle, eps)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673037,"byte_end":673081,"line_start":655,"line_end":655,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673086,"byte_end":673089,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673094,"byte_end":673107,"line_start":657,"line_end":657,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673112,"byte_end":673119,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673124,"byte_end":673163,"line_start":659,"line_end":659,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673168,"byte_end":673187,"line_start":660,"line_end":660,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673192,"byte_end":673246,"line_start":661,"line_end":661,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673251,"byte_end":673309,"line_start":662,"line_end":662,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673314,"byte_end":673369,"line_start":663,"line_end":663,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673374,"byte_end":673414,"line_start":664,"line_end":664,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673419,"byte_end":673461,"line_start":665,"line_end":665,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis_eps(axisangle, 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673466,"byte_end":673534,"line_start":666,"line_end":666,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673539,"byte_end":673542,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673547,"byte_end":673626,"line_start":668,"line_end":668,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673631,"byte_end":673712,"line_start":669,"line_end":669,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673717,"byte_end":673720,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673725,"byte_end":673773,"line_start":671,"line_end":671,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673778,"byte_end":673905,"line_start":672,"line_end":672,"column_start":5,"column_end":132}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673910,"byte_end":673917,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":673922,"byte_end":673931,"line_start":674,"line_end":674,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5089},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702237,"byte_end":702248,"line_start":10,"line_end":10,"column_start":10,"column_end":21},"name":"UnitComplex","qualname":"::geometry::unit_complex::UnitComplex","value":"Unit<Complex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A complex number with a norm equal to 1.\n","sig":null,"attributes":[{"value":"/ A complex number with a norm equal to 1.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702183,"byte_end":702227,"line_start":9,"line_end":9,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5093},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702573,"byte_end":702578,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitComplex<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in `]-pi; pi]` of this unit complex number.","sig":null,"attributes":[{"value":"/ The rotation angle in `]-pi; pi]` of this unit complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702313,"byte_end":702379,"line_start":13,"line_end":13,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702384,"byte_end":702387,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702392,"byte_end":702405,"line_start":15,"line_end":15,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702410,"byte_end":702417,"line_start":16,"line_end":16,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702422,"byte_end":702454,"line_start":17,"line_end":17,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702459,"byte_end":702496,"line_start":18,"line_end":18,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702501,"byte_end":702535,"line_start":19,"line_end":19,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702540,"byte_end":702547,"line_start":20,"line_end":20,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702552,"byte_end":702561,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5094},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702905,"byte_end":702914,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"sin_angle","qualname":"<UnitComplex<N>>::sin_angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sine of the rotation angle.","sig":null,"attributes":[{"value":"/ The sine of the rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702635,"byte_end":702670,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702675,"byte_end":702678,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702683,"byte_end":702696,"line_start":28,"line_end":28,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702701,"byte_end":702708,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702713,"byte_end":702745,"line_start":30,"line_end":30,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702750,"byte_end":702774,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702779,"byte_end":702817,"line_start":32,"line_end":32,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.sin_angle(), angle.sin());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702822,"byte_end":702867,"line_start":33,"line_end":33,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702872,"byte_end":702879,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702884,"byte_end":702893,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5095},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703227,"byte_end":703236,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"cos_angle","qualname":"<UnitComplex<N>>::cos_angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The cosine of the rotation angle.","sig":null,"attributes":[{"value":"/ The cosine of the rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702956,"byte_end":702993,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702998,"byte_end":703001,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703006,"byte_end":703019,"line_start":42,"line_end":42,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703024,"byte_end":703031,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703036,"byte_end":703068,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703073,"byte_end":703097,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703102,"byte_end":703140,"line_start":46,"line_end":46,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.cos_angle(),angle.cos());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703145,"byte_end":703189,"line_start":47,"line_end":47,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703194,"byte_end":703201,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703206,"byte_end":703215,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5096},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703500,"byte_end":703511,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitComplex<N>>::scaled_axis","value":"fn (&self) -> Vector1<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703278,"byte_end":703336,"line_start":54,"line_end":54,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703341,"byte_end":703344,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703349,"byte_end":703420,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703425,"byte_end":703474,"line_start":57,"line_end":57,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703479,"byte_end":703488,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5097},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703856,"byte_end":703866,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitComplex<N>>::axis_angle","value":"fn (&self) -> Option<(Unit<Vector1<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this complex number.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703581,"byte_end":703647,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703652,"byte_end":703655,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703660,"byte_end":703731,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703736,"byte_end":703785,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703790,"byte_end":703830,"line_start":67,"line_end":67,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":703835,"byte_end":703844,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5098},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704600,"byte_end":704607,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"complex","qualname":"<UnitComplex<N>>::complex","value":"fn (&self) -> &Complex<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying complex number.","sig":null,"attributes":[{"value":"/ The underlying complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704192,"byte_end":704226,"line_start":81,"line_end":81,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704231,"byte_end":704234,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704239,"byte_end":704267,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704272,"byte_end":704275,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704280,"byte_end":704293,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704298,"byte_end":704305,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704310,"byte_end":704341,"line_start":87,"line_end":87,"column_start":5,"column_end":36}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704346,"byte_end":704377,"line_start":88,"line_end":88,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704382,"byte_end":704414,"line_start":89,"line_end":89,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704419,"byte_end":704443,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704448,"byte_end":704486,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(*rot.complex(), Complex::new(angle.cos(), angle.sin()));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704491,"byte_end":704562,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704567,"byte_end":704574,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704579,"byte_end":704588,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5099},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705025,"byte_end":705034,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitComplex<N>>::conjugate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704665,"byte_end":704719,"line_start":99,"line_end":99,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704724,"byte_end":704727,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704732,"byte_end":704745,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704750,"byte_end":704757,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704762,"byte_end":704794,"line_start":103,"line_end":103,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704799,"byte_end":704836,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704841,"byte_end":704872,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704877,"byte_end":704930,"line_start":106,"line_end":106,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704935,"byte_end":704987,"line_start":107,"line_end":107,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":704992,"byte_end":704999,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705004,"byte_end":705013,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5100},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705551,"byte_end":705558,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitComplex<N>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this complex number if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this complex number if it is not zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705104,"byte_end":705154,"line_start":114,"line_end":114,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705159,"byte_end":705162,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705167,"byte_end":705180,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705185,"byte_end":705192,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705197,"byte_end":705236,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705241,"byte_end":705273,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705278,"byte_end":705314,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705319,"byte_end":705347,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705352,"byte_end":705430,"line_start":122,"line_end":122,"column_start":5,"column_end":83}},{"value":"/ assert_relative_eq!(inv * rot, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705435,"byte_end":705513,"line_start":123,"line_end":123,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705518,"byte_end":705525,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705530,"byte_end":705539,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5101},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705975,"byte_end":705983,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitComplex<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705612,"byte_end":705678,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705683,"byte_end":705686,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705691,"byte_end":705704,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705709,"byte_end":705716,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705721,"byte_end":705760,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705765,"byte_end":705797,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705802,"byte_end":705839,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705844,"byte_end":705881,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705886,"byte_end":705937,"line_start":138,"line_end":138,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705942,"byte_end":705949,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":705954,"byte_end":705963,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5102},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706650,"byte_end":706661,"line_start":162,"line_end":162,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitComplex<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit complex number needed to make `self` and `other` coincide.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706090,"byte_end":706161,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706166,"byte_end":706169,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706174,"byte_end":706245,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706250,"byte_end":706253,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706258,"byte_end":706271,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706276,"byte_end":706283,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706288,"byte_end":706327,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706332,"byte_end":706364,"line_start":153,"line_end":153,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706369,"byte_end":706406,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706411,"byte_end":706448,"line_start":155,"line_end":155,"column_start":5,"column_end":42}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706453,"byte_end":706494,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706499,"byte_end":706502,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706507,"byte_end":706552,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706557,"byte_end":706612,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706617,"byte_end":706624,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706629,"byte_end":706638,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5103},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707206,"byte_end":707219,"line_start":180,"line_end":180,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitComplex<N>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute in-place the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute in-place the conjugate of this unit complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706725,"byte_end":706788,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706793,"byte_end":706796,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706801,"byte_end":706814,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706819,"byte_end":706826,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706831,"byte_end":706870,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706875,"byte_end":706907,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706912,"byte_end":706932,"line_start":172,"line_end":172,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706937,"byte_end":706975,"line_start":173,"line_end":173,"column_start":5,"column_end":43}},{"value":"/ let mut conj = UnitComplex::new(angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":706980,"byte_end":707023,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/ conj.conjugate_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707028,"byte_end":707053,"line_start":175,"line_end":175,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707058,"byte_end":707111,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707116,"byte_end":707168,"line_start":177,"line_end":177,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707173,"byte_end":707180,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707185,"byte_end":707194,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5104},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707782,"byte_end":707793,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitComplex<N>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts in-place this unit complex number.","sig":null,"attributes":[{"value":"/ Inverts in-place this unit complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707310,"byte_end":707356,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707361,"byte_end":707364,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707369,"byte_end":707382,"line_start":187,"line_end":187,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707387,"byte_end":707394,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707399,"byte_end":707438,"line_start":189,"line_end":189,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707443,"byte_end":707475,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707480,"byte_end":707500,"line_start":191,"line_end":191,"column_start":5,"column_end":25}},{"value":"/ let mut rot = UnitComplex::new(angle);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707505,"byte_end":707547,"line_start":192,"line_end":192,"column_start":5,"column_end":47}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707552,"byte_end":707574,"line_start":193,"line_end":193,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitComplex::new(angle), UnitComplex::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707579,"byte_end":707659,"line_start":194,"line_end":194,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(UnitComplex::new(angle) * rot, UnitComplex::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707664,"byte_end":707744,"line_start":195,"line_end":195,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707749,"byte_end":707756,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707761,"byte_end":707770,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5105},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708318,"byte_end":708322,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitComplex<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise this unit complex number to a given floating power.","sig":null,"attributes":[{"value":"/ Raise this unit complex number to a given floating power.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707847,"byte_end":707908,"line_start":202,"line_end":202,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707913,"byte_end":707916,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This returns the unit complex number that identifies a rotation angle equal to","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":707921,"byte_end":708003,"line_start":204,"line_end":204,"column_start":5,"column_end":87}},{"value":"/ `self.angle() × n`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708008,"byte_end":708032,"line_start":205,"line_end":205,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708037,"byte_end":708040,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708045,"byte_end":708058,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708063,"byte_end":708070,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708075,"byte_end":708114,"line_start":209,"line_end":209,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708119,"byte_end":708151,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(0.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708156,"byte_end":708193,"line_start":211,"line_end":211,"column_start":5,"column_end":42}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708198,"byte_end":708226,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708231,"byte_end":708280,"line_start":213,"line_end":213,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708285,"byte_end":708292,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708297,"byte_end":708306,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5106},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708802,"byte_end":708820,"line_start":231,"line_end":231,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitComplex<N>>::to_rotation_matrix","value":"fn (&self) -> Rotation2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds the rotation matrix corresponding to this unit complex number.","sig":null,"attributes":[{"value":"/ Builds the rotation matrix corresponding to this unit complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708400,"byte_end":708473,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708478,"byte_end":708481,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708486,"byte_end":708499,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708504,"byte_end":708511,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Rotation2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708516,"byte_end":708561,"line_start":224,"line_end":224,"column_start":5,"column_end":50}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708566,"byte_end":708585,"line_start":225,"line_end":225,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708590,"byte_end":708645,"line_start":226,"line_end":226,"column_start":5,"column_end":60}},{"value":"/ let expected = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708650,"byte_end":708708,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(rot.to_rotation_matrix(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708713,"byte_end":708764,"line_start":228,"line_end":228,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708769,"byte_end":708776,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708781,"byte_end":708790,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5107},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709518,"byte_end":709532,"line_start":251,"line_end":251,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitComplex<N>>::to_homogeneous","value":"fn (&self) -> Matrix3<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit complex number into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit complex number into its equivalent homogeneous transformation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":708976,"byte_end":709068,"line_start":238,"line_end":238,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709073,"byte_end":709076,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709081,"byte_end":709094,"line_start":240,"line_end":240,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709099,"byte_end":709106,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Matrix3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709111,"byte_end":709154,"line_start":242,"line_end":242,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709159,"byte_end":709178,"line_start":243,"line_end":243,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709183,"byte_end":709238,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709243,"byte_end":709301,"line_start":245,"line_end":245,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709306,"byte_end":709364,"line_start":246,"line_end":246,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709369,"byte_end":709428,"line_start":247,"line_end":247,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709433,"byte_end":709480,"line_start":248,"line_end":248,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709485,"byte_end":709492,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709497,"byte_end":709506,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5108},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710159,"byte_end":710174,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitComplex<N>>::transform_point","value":"fn (&self, pt: &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by this unit complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709618,"byte_end":709673,"line_start":255,"line_end":255,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709678,"byte_end":709681,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709686,"byte_end":709741,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709746,"byte_end":709749,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709754,"byte_end":709767,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709772,"byte_end":709779,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709784,"byte_end":709823,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709828,"byte_end":709870,"line_start":262,"line_end":262,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709875,"byte_end":709894,"line_start":263,"line_end":263,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709899,"byte_end":709954,"line_start":264,"line_end":264,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":709959,"byte_end":710031,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710036,"byte_end":710121,"line_start":266,"line_end":266,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710126,"byte_end":710133,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710138,"byte_end":710147,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5109},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710789,"byte_end":710805,"line_start":287,"line_end":287,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitComplex<N>>::transform_vector","value":"fn (&self, v: &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by this unit complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710242,"byte_end":710298,"line_start":273,"line_end":273,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710303,"byte_end":710306,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710311,"byte_end":710365,"line_start":275,"line_end":275,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710370,"byte_end":710373,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710378,"byte_end":710391,"line_start":277,"line_end":277,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710396,"byte_end":710403,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710408,"byte_end":710447,"line_start":279,"line_end":279,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710452,"byte_end":710495,"line_start":280,"line_end":280,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710500,"byte_end":710519,"line_start":281,"line_end":281,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710524,"byte_end":710579,"line_start":282,"line_end":282,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710584,"byte_end":710659,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710664,"byte_end":710751,"line_start":284,"line_end":284,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710756,"byte_end":710763,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710768,"byte_end":710777,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5110},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711369,"byte_end":711392,"line_start":303,"line_end":303,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitComplex<N>>::inverse_transform_point","value":"fn (&self, pt: &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this unit complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710873,"byte_end":710943,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710948,"byte_end":710951,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710956,"byte_end":710969,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710974,"byte_end":710981,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":710986,"byte_end":711025,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711030,"byte_end":711072,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711077,"byte_end":711096,"line_start":297,"line_end":297,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711101,"byte_end":711156,"line_start":298,"line_end":298,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711161,"byte_end":711241,"line_start":299,"line_end":299,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711246,"byte_end":711331,"line_start":300,"line_end":300,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711336,"byte_end":711343,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711348,"byte_end":711357,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5111},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":712130,"byte_end":712154,"line_start":321,"line_end":321,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitComplex<N>>::inverse_transform_vector","value":"fn (&self, v: &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this unit complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711627,"byte_end":711698,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711703,"byte_end":711706,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711711,"byte_end":711724,"line_start":311,"line_end":311,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711729,"byte_end":711736,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711741,"byte_end":711780,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711785,"byte_end":711828,"line_start":314,"line_end":314,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711833,"byte_end":711852,"line_start":315,"line_end":315,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711857,"byte_end":711912,"line_start":316,"line_end":316,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":711917,"byte_end":712000,"line_start":317,"line_end":317,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":712005,"byte_end":712092,"line_start":318,"line_end":318,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":712097,"byte_end":712104,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":712109,"byte_end":712118,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5223},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718630,"byte_end":718638,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitComplex<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number multiplicative identity.","sig":null,"attributes":[{"value":"/ The unit complex number multiplicative identity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718293,"byte_end":718345,"line_start":16,"line_end":16,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718350,"byte_end":718353,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718358,"byte_end":718371,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718376,"byte_end":718383,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718388,"byte_end":718420,"line_start":20,"line_end":20,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718425,"byte_end":718464,"line_start":21,"line_end":21,"column_start":5,"column_end":44}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718469,"byte_end":718506,"line_start":22,"line_end":22,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718511,"byte_end":718514,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718519,"byte_end":718553,"line_start":24,"line_end":24,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718558,"byte_end":718592,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718597,"byte_end":718604,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718609,"byte_end":718618,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5224},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719160,"byte_end":719163,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitComplex<N>>::new","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the given angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the given angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718725,"byte_end":718811,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718816,"byte_end":718819,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718824,"byte_end":718837,"line_start":34,"line_end":34,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718842,"byte_end":718845,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718850,"byte_end":718857,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718862,"byte_end":718901,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718906,"byte_end":718925,"line_start":38,"line_end":38,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718930,"byte_end":718972,"line_start":39,"line_end":39,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718977,"byte_end":719032,"line_start":40,"line_end":40,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719037,"byte_end":719040,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719045,"byte_end":719122,"line_start":42,"line_end":42,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719127,"byte_end":719134,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719139,"byte_end":719148,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5225},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719794,"byte_end":719804,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"from_angle","qualname":"<UnitComplex<N>>::from_angle","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719284,"byte_end":719364,"line_start":50,"line_end":50,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719369,"byte_end":719372,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Same as `Self::new(angle)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719377,"byte_end":719408,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719413,"byte_end":719416,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719421,"byte_end":719434,"line_start":54,"line_end":54,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719439,"byte_end":719442,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719447,"byte_end":719454,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719459,"byte_end":719498,"line_start":57,"line_end":57,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719503,"byte_end":719522,"line_start":58,"line_end":58,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719527,"byte_end":719569,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::from_angle(f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719574,"byte_end":719636,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719641,"byte_end":719644,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719649,"byte_end":719726,"line_start":62,"line_end":62,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719731,"byte_end":719738,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719773,"byte_end":719782,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5226},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720550,"byte_end":720572,"line_start":87,"line_end":87,"column_start":12,"column_end":34},"name":"from_cos_sin_unchecked","qualname":"<UnitComplex<N>>::from_cos_sin_unchecked","value":"fn (cos: N, sin: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the sinus and cosinus of the rotation angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the sinus and cosinus of the rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719861,"byte_end":719945,"line_start":70,"line_end":70,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719950,"byte_end":719953,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The input values are not checked to actually be cosines and sine of the same value.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":719958,"byte_end":720045,"line_start":72,"line_end":72,"column_start":5,"column_end":92}},{"value":"/ Is is generally preferable to use the `::new(angle)` constructor instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720050,"byte_end":720127,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720132,"byte_end":720135,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720140,"byte_end":720153,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720158,"byte_end":720161,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720166,"byte_end":720173,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720178,"byte_end":720217,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720222,"byte_end":720241,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Vector2, Point2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720246,"byte_end":720297,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720302,"byte_end":720341,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/ let rot = UnitComplex::from_cos_sin_unchecked(angle.cos(), angle.sin());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720346,"byte_end":720422,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720427,"byte_end":720430,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720435,"byte_end":720512,"line_start":84,"line_end":84,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720517,"byte_end":720524,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720529,"byte_end":720538,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5227},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720923,"byte_end":720939,"line_start":96,"line_end":96,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitComplex<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720662,"byte_end":720755,"line_start":91,"line_end":91,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720760,"byte_end":720763,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720768,"byte_end":720839,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720844,"byte_end":720897,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":720902,"byte_end":720911,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5229},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721197,"byte_end":721209,"line_start":104,"line_end":104,"column_start":12,"column_end":24},"name":"from_complex","qualname":"<UnitComplex<N>>::from_complex","value":"fn (q: Complex<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721050,"byte_end":721110,"line_start":100,"line_end":100,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721115,"byte_end":721118,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721123,"byte_end":721171,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721176,"byte_end":721185,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5230},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721481,"byte_end":721501,"line_start":112,"line_end":112,"column_start":12,"column_end":32},"name":"from_complex_and_get","qualname":"<UnitComplex<N>>::from_complex_and_get","value":"fn (q: Complex<N>) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721286,"byte_end":721346,"line_start":108,"line_end":108,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721351,"byte_end":721354,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized. Returns the norm of the complex number as well.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721359,"byte_end":721455,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721460,"byte_end":721469,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5231},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722051,"byte_end":722071,"line_start":128,"line_end":128,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitComplex<N>>::from_rotation_matrix","value":"fn (rotmat: &Rotation2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the corresponding 2D rotation matrix.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the corresponding 2D rotation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721644,"byte_end":721721,"line_start":117,"line_end":117,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721726,"byte_end":721729,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721734,"byte_end":721747,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721752,"byte_end":721759,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, UnitComplex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721764,"byte_end":721809,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/ let rot = Rotation2::new(1.7);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721814,"byte_end":721848,"line_start":122,"line_end":122,"column_start":5,"column_end":39}},{"value":"/ let complex = UnitComplex::from_rotation_matrix(&rot);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721853,"byte_end":721911,"line_start":123,"line_end":123,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(complex, UnitComplex::new(1.7));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721916,"byte_end":721963,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":721968,"byte_end":721975,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722030,"byte_end":722039,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5232},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722539,"byte_end":722550,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitComplex<N>>::from_matrix","value":"fn (m: &Matrix2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722190,"byte_end":722281,"line_start":132,"line_end":132,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722286,"byte_end":722289,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722294,"byte_end":722366,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722371,"byte_end":722420,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722425,"byte_end":722527,"line_start":136,"line_end":136,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":5233},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723432,"byte_end":723447,"line_start":153,"line_end":153,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitComplex<N>>::from_matrix_eps","value":"fn (m: &Matrix2<N>, eps: N, max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722629,"byte_end":722720,"line_start":141,"line_end":141,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722725,"byte_end":722728,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722733,"byte_end":722835,"line_start":143,"line_end":143,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722840,"byte_end":722843,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722848,"byte_end":722864,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722869,"byte_end":722872,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722877,"byte_end":722949,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":722954,"byte_end":723045,"line_start":148,"line_end":148,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723050,"byte_end":723153,"line_start":149,"line_end":149,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723158,"byte_end":723271,"line_start":150,"line_end":150,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723276,"byte_end":723380,"line_start":151,"line_end":151,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723385,"byte_end":723420,"line_start":152,"line_end":152,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5234},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724136,"byte_end":724152,"line_start":172,"line_end":172,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitComplex<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723634,"byte_end":723720,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723725,"byte_end":723739,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723744,"byte_end":723747,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723752,"byte_end":723765,"line_start":161,"line_end":161,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723770,"byte_end":723777,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723782,"byte_end":723821,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723826,"byte_end":723869,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723874,"byte_end":723909,"line_start":165,"line_end":165,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723914,"byte_end":723949,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitComplex::rotation_between(&a, &b);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":723954,"byte_end":724006,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724011,"byte_end":724047,"line_start":168,"line_end":168,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724052,"byte_end":724098,"line_start":169,"line_end":169,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724103,"byte_end":724110,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724115,"byte_end":724124,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5237},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725027,"byte_end":725050,"line_start":195,"line_end":195,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitComplex<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724352,"byte_end":724440,"line_start":180,"line_end":180,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724445,"byte_end":724484,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724489,"byte_end":724492,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724497,"byte_end":724510,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724515,"byte_end":724522,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724527,"byte_end":724566,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724571,"byte_end":724614,"line_start":186,"line_end":186,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724619,"byte_end":724654,"line_start":187,"line_end":187,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724659,"byte_end":724694,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724699,"byte_end":724764,"line_start":189,"line_end":189,"column_start":5,"column_end":70}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724769,"byte_end":724834,"line_start":190,"line_end":190,"column_start":5,"column_end":70}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724839,"byte_end":724922,"line_start":191,"line_end":191,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724927,"byte_end":724989,"line_start":192,"line_end":192,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":724994,"byte_end":725001,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725006,"byte_end":725015,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5240},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726116,"byte_end":726137,"line_start":229,"line_end":229,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitComplex<N>>::rotation_between_axis","value":"fn <SB, SC> (a: &Unit<Vector<N, U2, SB>>, b: &Unit<Vector<N, U2, SC>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725561,"byte_end":725647,"line_start":215,"line_end":215,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725652,"byte_end":725666,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725671,"byte_end":725674,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725679,"byte_end":725692,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725697,"byte_end":725704,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725709,"byte_end":725748,"line_start":220,"line_end":220,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725753,"byte_end":725802,"line_start":221,"line_end":221,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725807,"byte_end":725863,"line_start":222,"line_end":222,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725868,"byte_end":725924,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/ let rot = UnitComplex::rotation_between_axis(&a, &b);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725929,"byte_end":725986,"line_start":224,"line_end":224,"column_start":5,"column_end":62}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":725991,"byte_end":726027,"line_start":225,"line_end":225,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726032,"byte_end":726078,"line_start":226,"line_end":226,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726083,"byte_end":726090,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726095,"byte_end":726104,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5243},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":727110,"byte_end":727138,"line_start":255,"line_end":255,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitComplex<N>>::scaled_rotation_between_axis","value":"fn <SB, SC> (na: &Unit<Vector<N, U2, SB>>, nb: &Unit<Vector<N, U2, SC>>, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726377,"byte_end":726465,"line_start":240,"line_end":240,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726470,"byte_end":726509,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726514,"byte_end":726517,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726522,"byte_end":726535,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726540,"byte_end":726547,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726552,"byte_end":726591,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726596,"byte_end":726645,"line_start":246,"line_end":246,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726650,"byte_end":726706,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726711,"byte_end":726767,"line_start":248,"line_end":248,"column_start":5,"column_end":61}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726772,"byte_end":726842,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726847,"byte_end":726917,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":726922,"byte_end":727005,"line_start":251,"line_end":251,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":727010,"byte_end":727072,"line_start":252,"line_end":252,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":727077,"byte_end":727084,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":727089,"byte_end":727098,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":18452},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":745689,"byte_end":745700,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"Translation","qualname":"::geometry::translation::Translation","value":"Translation { vector }","parent":null,"children":[{"krate":0,"index":18455}],"decl_id":null,"docs":" A translation.\n","sig":null,"attributes":[{"value":"/ A translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":745631,"byte_end":745649,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":745650,"byte_end":745660,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":18455},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":745891,"byte_end":745897,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"vector","qualname":"::geometry::translation::Translation::vector","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":18452},"children":[],"decl_id":null,"docs":" The translation coordinates, i.e., how much is added to a point's coordinates when it is\n translated.\n","sig":null,"attributes":[{"value":"/ The translation coordinates, i.e., how much is added to a point's coordinates when it is","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":745770,"byte_end":745862,"line_start":29,"line_end":29,"column_start":5,"column_end":97}},{"value":"/ translated.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":745867,"byte_end":745882,"line_start":30,"line_end":30,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5478},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":747983,"byte_end":747994,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Translation<N, D>>::from_vector","value":"fn (vector: VectorN<N, D>) -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new translation from the given vector.\n","sig":null,"attributes":[{"value":"/ Creates a new translation from the given vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":747855,"byte_end":747907,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":747912,"byte_end":747921,"line_start":112,"line_end":112,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":747926,"byte_end":747971,"line_start":113,"line_end":113,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5479},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748630,"byte_end":748637,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation<N, D>>::inverse","value":"fn (&self) -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748091,"byte_end":748110,"line_start":118,"line_end":118,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748115,"byte_end":748118,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748123,"byte_end":748136,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748141,"byte_end":748148,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748153,"byte_end":748202,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748207,"byte_end":748252,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(t * t.inverse(), Translation3::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748257,"byte_end":748315,"line_start":124,"line_end":124,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation3::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748320,"byte_end":748378,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748383,"byte_end":748386,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748391,"byte_end":748421,"line_start":127,"line_end":127,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748426,"byte_end":748466,"line_start":128,"line_end":128,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(t * t.inverse(), Translation2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748471,"byte_end":748529,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748534,"byte_end":748592,"line_start":130,"line_end":130,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748597,"byte_end":748604,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748609,"byte_end":748618,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5480},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749567,"byte_end":749581,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Translation<N, D>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this translation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this translation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748743,"byte_end":748827,"line_start":138,"line_end":138,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748832,"byte_end":748835,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748840,"byte_end":748853,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748858,"byte_end":748865,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3, Matrix3, Matrix4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748870,"byte_end":748937,"line_start":142,"line_end":142,"column_start":5,"column_end":72}},{"value":"/ let t = Translation3::new(10.0, 20.0, 30.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748942,"byte_end":748990,"line_start":143,"line_end":143,"column_start":5,"column_end":53}},{"value":"/ let expected = Matrix4::new(1.0, 0.0, 0.0, 10.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":748995,"byte_end":749047,"line_start":144,"line_end":144,"column_start":5,"column_end":57}},{"value":"/                             0.0, 1.0, 0.0, 20.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749052,"byte_end":749104,"line_start":145,"line_end":145,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 1.0, 30.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749109,"byte_end":749161,"line_start":146,"line_end":146,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749166,"byte_end":749218,"line_start":147,"line_end":147,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749223,"byte_end":749268,"line_start":148,"line_end":148,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749273,"byte_end":749276,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let t = Translation2::new(10.0, 20.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749281,"byte_end":749323,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/ let expected = Matrix3::new(1.0, 0.0, 10.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749328,"byte_end":749375,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/                             0.0, 1.0, 20.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749380,"byte_end":749427,"line_start":152,"line_end":152,"column_start":5,"column_end":52}},{"value":"/                             0.0, 0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749432,"byte_end":749479,"line_start":153,"line_end":153,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749484,"byte_end":749529,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749534,"byte_end":749541,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749546,"byte_end":749555,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5481},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750638,"byte_end":750649,"line_start":189,"line_end":189,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Translation<N, D>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749945,"byte_end":749973,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749978,"byte_end":749981,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":749986,"byte_end":749999,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750004,"byte_end":750011,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750016,"byte_end":750065,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750070,"byte_end":750115,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ let mut inv_t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750120,"byte_end":750173,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750178,"byte_end":750202,"line_start":177,"line_end":177,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation3::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750207,"byte_end":750259,"line_start":178,"line_end":178,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation3::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750264,"byte_end":750316,"line_start":179,"line_end":179,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750321,"byte_end":750324,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750329,"byte_end":750359,"line_start":181,"line_end":181,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750364,"byte_end":750404,"line_start":182,"line_end":182,"column_start":5,"column_end":45}},{"value":"/ let mut inv_t = Translation2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750409,"byte_end":750457,"line_start":183,"line_end":183,"column_start":5,"column_end":53}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750462,"byte_end":750486,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750491,"byte_end":750543,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750548,"byte_end":750600,"line_start":186,"line_end":186,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750605,"byte_end":750612,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750617,"byte_end":750626,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5485},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751236,"byte_end":751251,"line_start":209,"line_end":209,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Translation<N, D>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point.","sig":null,"attributes":[{"value":"/ Translate the given point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750829,"byte_end":750859,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750864,"byte_end":750867,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750872,"byte_end":750927,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750932,"byte_end":750935,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750940,"byte_end":750953,"line_start":202,"line_end":202,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750958,"byte_end":750965,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750970,"byte_end":751013,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751018,"byte_end":751063,"line_start":205,"line_end":205,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751068,"byte_end":751143,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(transformed_point, Point3::new(5.0, 7.0, 9.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751148,"byte_end":751210,"line_start":207,"line_end":207,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751215,"byte_end":751224,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5489},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751815,"byte_end":751838,"line_start":226,"line_end":226,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Translation<N, D>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point by the inverse of this translation.","sig":null,"attributes":[{"value":"/ Translate the given point by the inverse of this translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751433,"byte_end":751498,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751503,"byte_end":751506,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751511,"byte_end":751524,"line_start":219,"line_end":219,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751529,"byte_end":751536,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751541,"byte_end":751584,"line_start":221,"line_end":221,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751589,"byte_end":751634,"line_start":222,"line_end":222,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751639,"byte_end":751722,"line_start":223,"line_end":223,"column_start":5,"column_end":88}},{"value":"/ assert_eq!(transformed_point, Point3::new(3.0, 3.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751727,"byte_end":751789,"line_start":224,"line_end":224,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751794,"byte_end":751803,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5607},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":758843,"byte_end":758855,"line_start":6,"line_end":6,"column_start":10,"column_end":22},"name":"Translation1","qualname":"::geometry::translation_alias::Translation1","value":"Translation<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A 1-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 1-dimensional translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":758801,"byte_end":758833,"line_start":5,"line_end":5,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5609},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":758924,"byte_end":758936,"line_start":9,"line_end":9,"column_start":10,"column_end":22},"name":"Translation2","qualname":"::geometry::translation_alias::Translation2","value":"Translation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":758882,"byte_end":758914,"line_start":8,"line_end":8,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5611},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":759005,"byte_end":759017,"line_start":12,"line_end":12,"column_start":10,"column_end":22},"name":"Translation3","qualname":"::geometry::translation_alias::Translation3","value":"Translation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":758963,"byte_end":758995,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5613},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":759086,"byte_end":759098,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"Translation4","qualname":"::geometry::translation_alias::Translation4","value":"Translation<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A 4-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 4-dimensional translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":759044,"byte_end":759076,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5615},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":759167,"byte_end":759179,"line_start":18,"line_end":18,"column_start":10,"column_end":22},"name":"Translation5","qualname":"::geometry::translation_alias::Translation5","value":"Translation<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A 5-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 5-dimensional translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":759125,"byte_end":759157,"line_start":17,"line_end":17,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5617},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":759248,"byte_end":759260,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"Translation6","qualname":"::geometry::translation_alias::Translation6","value":"Translation<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A 6-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 6-dimensional translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alias.rs","byte_start":759206,"byte_end":759238,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5645},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760282,"byte_end":760290,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation<N, D>>::identity","value":"fn () -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity translation.","sig":null,"attributes":[{"value":"/ Creates a new identity translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":759826,"byte_end":759865,"line_start":21,"line_end":21,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":759870,"byte_end":759873,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":759878,"byte_end":759891,"line_start":23,"line_end":23,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":759896,"byte_end":759903,"line_start":24,"line_end":24,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Translation2, Translation3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":759908,"byte_end":759973,"line_start":25,"line_end":25,"column_start":5,"column_end":70}},{"value":"/ let t = Translation2::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":759978,"byte_end":760015,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760020,"byte_end":760054,"line_start":27,"line_end":27,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760059,"byte_end":760084,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760089,"byte_end":760092,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ // Works in all dimensions.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760097,"byte_end":760128,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/ let t = Translation3::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760133,"byte_end":760170,"line_start":31,"line_end":31,"column_start":5,"column_end":42}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760175,"byte_end":760214,"line_start":32,"line_end":32,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760219,"byte_end":760244,"line_start":33,"line_end":33,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760249,"byte_end":760256,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760261,"byte_end":760270,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":18631},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":777129,"byte_end":777137,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Isometry","qualname":"::geometry::isometry::Isometry","value":"Isometry { rotation, translation }","parent":null,"children":[{"krate":0,"index":18635},{"krate":0,"index":18636},{"krate":0,"index":18637}],"decl_id":null,"docs":" A direct isometry, i.e., a rotation followed by a translation, aka. a rigid-body motion, aka. an element of a Special Euclidean (SE) group.\n","sig":null,"attributes":[{"value":"/ A direct isometry, i.e., a rotation followed by a translation, aka. a rigid-body motion, aka. an element of a Special Euclidean (SE) group.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":776465,"byte_end":776608,"line_start":23,"line_end":23,"column_start":1,"column_end":144}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":776609,"byte_end":776619,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":18635},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":777268,"byte_end":777276,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"rotation","qualname":"::geometry::isometry::Isometry::rotation","value":"R","parent":{"krate":0,"index":18631},"children":[],"decl_id":null,"docs":" The pure rotational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure rotational part of this isometry.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":777213,"byte_end":777259,"line_start":42,"line_end":42,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":18636},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":777343,"byte_end":777354,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"name":"translation","qualname":"::geometry::isometry::Isometry::translation","value":"geometry::translation::Translation<N, D>","parent":{"krate":0,"index":18631},"children":[],"decl_id":null,"docs":" The pure translational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure translational part of this isometry.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":777285,"byte_end":777334,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5827},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779770,"byte_end":779780,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Isometry<N, D, R>>::from_parts","value":"fn (translation: Translation<N, D>, rotation: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from its rotational and translational parts.","sig":null,"attributes":[{"value":"/ Creates a new isometry from its rotational and translational parts.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779158,"byte_end":779229,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779234,"byte_end":779237,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779242,"byte_end":779255,"line_start":112,"line_end":112,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779260,"byte_end":779263,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779268,"byte_end":779275,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779280,"byte_end":779319,"line_start":115,"line_end":115,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779324,"byte_end":779343,"line_start":116,"line_end":116,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779348,"byte_end":779427,"line_start":117,"line_end":117,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779432,"byte_end":779479,"line_start":118,"line_end":118,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::PI);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779484,"byte_end":779563,"line_start":119,"line_end":119,"column_start":5,"column_end":84}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779568,"byte_end":779614,"line_start":120,"line_end":120,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779619,"byte_end":779622,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * Point3::new(1.0, 2.0, 3.0), Point3::new(-1.0, 2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779627,"byte_end":779732,"line_start":122,"line_end":122,"column_start":5,"column_end":110}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779737,"byte_end":779744,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779749,"byte_end":779758,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5828},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780367,"byte_end":780374,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Isometry<N, D, R>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779981,"byte_end":780000,"line_start":133,"line_end":133,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780005,"byte_end":780008,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780013,"byte_end":780026,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780031,"byte_end":780034,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780039,"byte_end":780046,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780051,"byte_end":780070,"line_start":138,"line_end":138,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780075,"byte_end":780124,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780129,"byte_end":780206,"line_start":140,"line_end":140,"column_start":5,"column_end":82}},{"value":"/ let inv = iso.inverse();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780211,"byte_end":780239,"line_start":141,"line_end":141,"column_start":5,"column_end":33}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780244,"byte_end":780279,"line_start":142,"line_end":142,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780284,"byte_end":780287,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(inv * (iso * pt), pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780292,"byte_end":780329,"line_start":144,"line_end":144,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780334,"byte_end":780341,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780346,"byte_end":780355,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5829},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780914,"byte_end":780925,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Isometry<N, D, R>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780478,"byte_end":780506,"line_start":153,"line_end":153,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780511,"byte_end":780514,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780519,"byte_end":780532,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780537,"byte_end":780540,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780545,"byte_end":780552,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780557,"byte_end":780576,"line_start":158,"line_end":158,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780581,"byte_end":780630,"line_start":159,"line_end":159,"column_start":5,"column_end":54}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780635,"byte_end":780716,"line_start":160,"line_end":160,"column_start":5,"column_end":86}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780721,"byte_end":780756,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/ let transformed_pt = iso * pt;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780761,"byte_end":780795,"line_start":162,"line_end":162,"column_start":5,"column_end":39}},{"value":"/ iso.inverse_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780800,"byte_end":780822,"line_start":163,"line_end":163,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780827,"byte_end":780830,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * transformed_pt, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780835,"byte_end":780876,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780881,"byte_end":780888,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":780893,"byte_end":780902,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5830},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781637,"byte_end":781659,"line_start":189,"line_end":189,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Isometry<N, D, R>>::append_translation_mut","value":"fn (&mut self, t: &Translation<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781129,"byte_end":781182,"line_start":174,"line_end":174,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781187,"byte_end":781190,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781195,"byte_end":781208,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781213,"byte_end":781216,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781221,"byte_end":781228,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781233,"byte_end":781252,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781257,"byte_end":781312,"line_start":180,"line_end":180,"column_start":5,"column_end":60}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781317,"byte_end":781398,"line_start":181,"line_end":181,"column_start":5,"column_end":86}},{"value":"/ let tra = Translation2::new(3.0, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781403,"byte_end":781445,"line_start":182,"line_end":182,"column_start":5,"column_end":47}},{"value":"/ // Same as `iso = tra * iso`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781450,"byte_end":781483,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/ iso.append_translation_mut(&tra);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781488,"byte_end":781525,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781530,"byte_end":781533,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso.translation, Translation2::new(4.0, 6.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781538,"byte_end":781599,"line_start":186,"line_end":186,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781604,"byte_end":781611,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781616,"byte_end":781625,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5831},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782378,"byte_end":782397,"line_start":209,"line_end":209,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Isometry<N, D, R>>::append_rotation_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781752,"byte_end":781802,"line_start":193,"line_end":193,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781807,"byte_end":781810,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781815,"byte_end":781828,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781833,"byte_end":781836,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781841,"byte_end":781848,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781853,"byte_end":781892,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781897,"byte_end":781916,"line_start":199,"line_end":199,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781921,"byte_end":781989,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::PI / 6.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":781994,"byte_end":782074,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI / 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782079,"byte_end":782133,"line_start":202,"line_end":202,"column_start":5,"column_end":59}},{"value":"/ // Same as `iso = rot * iso`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782138,"byte_end":782171,"line_start":203,"line_end":203,"column_start":5,"column_end":38}},{"value":"/ iso.append_rotation_mut(&rot);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782176,"byte_end":782210,"line_start":204,"line_end":204,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782215,"byte_end":782218,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso, Isometry2::new(Vector2::new(-2.0, 1.0), f32::consts::PI * 2.0 / 3.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782223,"byte_end":782340,"line_start":206,"line_end":206,"column_start":5,"column_end":122}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782345,"byte_end":782352,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782357,"byte_end":782366,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5832},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783250,"byte_end":783279,"line_start":231,"line_end":231,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_point_mut","value":"fn (&mut self, r: &R, p: &Point<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782568,"byte_end":782660,"line_start":214,"line_end":214,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782665,"byte_end":782688,"line_start":215,"line_end":215,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782693,"byte_end":782696,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782701,"byte_end":782714,"line_start":217,"line_end":217,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782719,"byte_end":782722,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782727,"byte_end":782734,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782739,"byte_end":782778,"line_start":220,"line_end":220,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782783,"byte_end":782802,"line_start":221,"line_end":221,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782807,"byte_end":782883,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782888,"byte_end":782969,"line_start":223,"line_end":223,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":782974,"byte_end":783029,"line_start":224,"line_end":224,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783034,"byte_end":783069,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"/ iso.append_rotation_wrt_point_mut(&rot, &pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783074,"byte_end":783123,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783128,"byte_end":783131,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * pt, Point2::new(-2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783136,"byte_end":783212,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783217,"byte_end":783224,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783229,"byte_end":783238,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5833},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784152,"byte_end":784182,"line_start":254,"line_end":254,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_center_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783457,"byte_end":783537,"line_start":237,"line_end":237,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783542,"byte_end":783565,"line_start":238,"line_end":238,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783570,"byte_end":783573,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783578,"byte_end":783591,"line_start":240,"line_end":240,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783596,"byte_end":783599,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783604,"byte_end":783611,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783616,"byte_end":783635,"line_start":243,"line_end":243,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783640,"byte_end":783716,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783721,"byte_end":783802,"line_start":245,"line_end":245,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783807,"byte_end":783862,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/ iso.append_rotation_wrt_center_mut(&rot);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783867,"byte_end":783912,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783917,"byte_end":783920,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ // The translation part should not have changed.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783925,"byte_end":783977,"line_start":249,"line_end":249,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(iso.translation.vector, Vector2::new(1.0, 2.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":783982,"byte_end":784045,"line_start":250,"line_end":250,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(iso.rotation, UnitComplex::new(f32::consts::PI));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784050,"byte_end":784114,"line_start":251,"line_end":251,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784119,"byte_end":784126,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784131,"byte_end":784140,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5834},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785001,"byte_end":785016,"line_start":276,"line_end":276,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Isometry<N, D, R>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this isometry.","sig":null,"attributes":[{"value":"/ Transform the given point by this isometry.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784272,"byte_end":784319,"line_start":258,"line_end":258,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784324,"byte_end":784327,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784332,"byte_end":784387,"line_start":260,"line_end":260,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784392,"byte_end":784395,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784400,"byte_end":784413,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784418,"byte_end":784421,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784426,"byte_end":784433,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784438,"byte_end":784477,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784482,"byte_end":784501,"line_start":266,"line_end":266,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784506,"byte_end":784585,"line_start":267,"line_end":267,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784590,"byte_end":784637,"line_start":268,"line_end":268,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784642,"byte_end":784728,"line_start":269,"line_end":269,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784733,"byte_end":784779,"line_start":270,"line_end":270,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784784,"byte_end":784787,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784792,"byte_end":784869,"line_start":272,"line_end":272,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, 2.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784874,"byte_end":784963,"line_start":273,"line_end":273,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784968,"byte_end":784975,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":784980,"byte_end":784989,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5835},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785873,"byte_end":785889,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Isometry<N, D, R>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this isometry, ignoring the translation\n component of the isometry.","sig":null,"attributes":[{"value":"/ Transform the given vector by this isometry, ignoring the translation","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785088,"byte_end":785161,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ component of the isometry.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785166,"byte_end":785196,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785201,"byte_end":785204,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785209,"byte_end":785263,"line_start":283,"line_end":283,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785268,"byte_end":785271,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785276,"byte_end":785289,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785294,"byte_end":785297,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785302,"byte_end":785309,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785314,"byte_end":785353,"line_start":288,"line_end":288,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785358,"byte_end":785377,"line_start":289,"line_end":289,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785382,"byte_end":785453,"line_start":290,"line_end":290,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785458,"byte_end":785505,"line_start":291,"line_end":291,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785510,"byte_end":785596,"line_start":292,"line_end":292,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785601,"byte_end":785647,"line_start":293,"line_end":293,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785652,"byte_end":785655,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785660,"byte_end":785739,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785744,"byte_end":785835,"line_start":296,"line_end":296,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785840,"byte_end":785847,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785852,"byte_end":785861,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5836},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786766,"byte_end":786789,"line_start":321,"line_end":321,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Isometry<N, D, R>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this isometry. This may be","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":785963,"byte_end":786037,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786042,"byte_end":786112,"line_start":304,"line_end":304,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786117,"byte_end":786144,"line_start":305,"line_end":305,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786149,"byte_end":786152,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786157,"byte_end":786170,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786175,"byte_end":786178,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786183,"byte_end":786190,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786195,"byte_end":786234,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786239,"byte_end":786258,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786263,"byte_end":786342,"line_start":312,"line_end":312,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786347,"byte_end":786394,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786399,"byte_end":786485,"line_start":314,"line_end":314,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786490,"byte_end":786536,"line_start":315,"line_end":315,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786541,"byte_end":786544,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786549,"byte_end":786634,"line_start":317,"line_end":317,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(0.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786639,"byte_end":786728,"line_start":318,"line_end":318,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786733,"byte_end":786740,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786745,"byte_end":786754,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5837},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787796,"byte_end":787820,"line_start":345,"line_end":345,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Isometry<N, D, R>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this isometry, ignoring the\n translation component of the isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this isometry, ignoring the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":786936,"byte_end":787012,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ translation component of the isometry. This may be","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787017,"byte_end":787071,"line_start":327,"line_end":327,"column_start":5,"column_end":59}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787076,"byte_end":787146,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787151,"byte_end":787178,"line_start":329,"line_end":329,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787183,"byte_end":787186,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787191,"byte_end":787204,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787209,"byte_end":787212,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787217,"byte_end":787224,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787229,"byte_end":787268,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787273,"byte_end":787292,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787297,"byte_end":787368,"line_start":336,"line_end":336,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787373,"byte_end":787420,"line_start":337,"line_end":337,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787425,"byte_end":787511,"line_start":338,"line_end":338,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787516,"byte_end":787562,"line_start":339,"line_end":339,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787567,"byte_end":787570,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787575,"byte_end":787662,"line_start":341,"line_end":341,"column_start":5,"column_end":92}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787667,"byte_end":787758,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787763,"byte_end":787770,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":787775,"byte_end":787784,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5842},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":789017,"byte_end":789031,"line_start":373,"line_end":373,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Isometry<N, D, R>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this isometry into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this isometry into its equivalent homogeneous transformation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788366,"byte_end":788447,"line_start":357,"line_end":357,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788452,"byte_end":788455,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788460,"byte_end":788473,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788478,"byte_end":788481,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788486,"byte_end":788493,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788498,"byte_end":788537,"line_start":362,"line_end":362,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788542,"byte_end":788561,"line_start":363,"line_end":363,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Matrix3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788566,"byte_end":788616,"line_start":364,"line_end":364,"column_start":5,"column_end":55}},{"value":"/ let iso = Isometry2::new(Vector2::new(10.0, 20.0), f32::consts::FRAC_PI_6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788621,"byte_end":788700,"line_start":365,"line_end":365,"column_start":5,"column_end":84}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      10.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788705,"byte_end":788764,"line_start":366,"line_end":366,"column_start":5,"column_end":64}},{"value":"/                             0.5,       0.8660254, 20.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788769,"byte_end":788828,"line_start":367,"line_end":367,"column_start":5,"column_end":64}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788833,"byte_end":788892,"line_start":368,"line_end":368,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788897,"byte_end":788900,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788905,"byte_end":788979,"line_start":370,"line_end":370,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788984,"byte_end":788991,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788996,"byte_end":789005,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5969},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alias.rs","byte_start":797464,"byte_end":797473,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"Isometry2","qualname":"::geometry::isometry_alias::Isometry2","value":"Isometry<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a unit complex number for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).\n","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a unit complex number for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alias.rs","byte_start":797304,"byte_end":797454,"line_start":5,"line_end":5,"column_start":1,"column_end":151}}]},{"kind":"Type","id":{"krate":0,"index":5971},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alias.rs","byte_start":797669,"byte_end":797678,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Isometry3","qualname":"::geometry::isometry_alias::Isometry3","value":"Isometry<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a unit quaternion for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).\n","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a unit quaternion for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alias.rs","byte_start":797513,"byte_end":797659,"line_start":8,"line_end":8,"column_start":1,"column_end":147}}]},{"kind":"Type","id":{"krate":0,"index":5973},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alias.rs","byte_start":797877,"byte_end":797892,"line_start":12,"line_end":12,"column_start":10,"column_end":25},"name":"IsometryMatrix2","qualname":"::geometry::isometry_alias::IsometryMatrix2","value":"Isometry<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).\n","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alias.rs","byte_start":797721,"byte_end":797867,"line_start":11,"line_end":11,"column_start":1,"column_end":147}}]},{"kind":"Type","id":{"krate":0,"index":5975},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alias.rs","byte_start":798086,"byte_end":798101,"line_start":15,"line_end":15,"column_start":10,"column_end":25},"name":"IsometryMatrix3","qualname":"::geometry::isometry_alias::IsometryMatrix3","value":"Isometry<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).\n","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alias.rs","byte_start":797930,"byte_end":798076,"line_start":14,"line_end":14,"column_start":1,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":6010},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799286,"byte_end":799294,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"identity","qualname":"<Isometry<N, D, R>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity isometry.","sig":null,"attributes":[{"value":"/ Creates a new identity isometry.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":798851,"byte_end":798887,"line_start":25,"line_end":25,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":798892,"byte_end":798895,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":798900,"byte_end":798913,"line_start":27,"line_end":27,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":798918,"byte_end":798921,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":798926,"byte_end":798933,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Isometry2, Point2, Isometry3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":798938,"byte_end":798997,"line_start":30,"line_end":30,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799002,"byte_end":799005,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry2::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799010,"byte_end":799046,"line_start":32,"line_end":32,"column_start":5,"column_end":41}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799051,"byte_end":799086,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799091,"byte_end":799120,"line_start":34,"line_end":34,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799125,"byte_end":799128,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry3::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799133,"byte_end":799169,"line_start":36,"line_end":36,"column_start":5,"column_end":41}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799174,"byte_end":799214,"line_start":37,"line_end":37,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799219,"byte_end":799248,"line_start":38,"line_end":38,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799253,"byte_end":799260,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799265,"byte_end":799274,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6011},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":800062,"byte_end":800080,"line_start":62,"line_end":62,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Isometry<N, D, R>>::rotation_wrt_point","value":"fn (r: R, p: Point<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The isometry that applies the rotation `r` with its axis passing through the point `p`.\n This effectively lets `p` invariant.","sig":null,"attributes":[{"value":"/ The isometry that applies the rotation `r` with its axis passing through the point `p`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799383,"byte_end":799474,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ This effectively lets `p` invariant.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799479,"byte_end":799519,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799524,"byte_end":799527,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799532,"byte_end":799545,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799550,"byte_end":799553,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799558,"byte_end":799565,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799570,"byte_end":799609,"line_start":51,"line_end":51,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799614,"byte_end":799633,"line_start":52,"line_end":52,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, UnitComplex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799638,"byte_end":799691,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799696,"byte_end":799744,"line_start":54,"line_end":54,"column_start":5,"column_end":53}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799749,"byte_end":799784,"line_start":55,"line_end":55,"column_start":5,"column_end":40}},{"value":"/ let iso = Isometry2::rotation_wrt_point(rot, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799789,"byte_end":799842,"line_start":56,"line_end":56,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799847,"byte_end":799850,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * pt, pt); // The rotation center is not affected.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799855,"byte_end":799924,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(iso * Point2::new(1.0, 2.0), Point2::new(1.0, -2.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":799929,"byte_end":800024,"line_start":59,"line_end":59,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":800029,"byte_end":800036,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":800041,"byte_end":800050,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6026},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801844,"byte_end":801847,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<Isometry<N, U2, Rotation2<N>>>::new","value":"fn (translation: Vector2<N>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801372,"byte_end":801442,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801447,"byte_end":801450,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as a 2x2 rotation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801455,"byte_end":801519,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801524,"byte_end":801527,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801532,"byte_end":801545,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801550,"byte_end":801553,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801558,"byte_end":801565,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801570,"byte_end":801589,"line_start":119,"line_end":119,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Point2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801594,"byte_end":801643,"line_start":120,"line_end":120,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801648,"byte_end":801725,"line_start":121,"line_end":121,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801730,"byte_end":801733,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801738,"byte_end":801806,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801811,"byte_end":801818,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801823,"byte_end":801832,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6027},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802119,"byte_end":802130,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"translation","qualname":"<Isometry<N, U2, Rotation2<N>>>::translation","value":"fn (x: N, y: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802027,"byte_end":802093,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802098,"byte_end":802107,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6028},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802296,"byte_end":802304,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Isometry<N, U2, Rotation2<N>>>::rotation","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802213,"byte_end":802270,"line_start":139,"line_end":139,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802275,"byte_end":802284,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6031},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802919,"byte_end":802922,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"new","qualname":"<Isometry<N, U2, UnitComplex<N>>>::new","value":"fn (translation: Vector2<N>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802434,"byte_end":802504,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802509,"byte_end":802512,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as an unit complex number.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802517,"byte_end":802582,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802587,"byte_end":802590,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802595,"byte_end":802608,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802613,"byte_end":802616,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802621,"byte_end":802628,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802633,"byte_end":802652,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{IsometryMatrix2, Point2, Vector2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802657,"byte_end":802712,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/ let iso = IsometryMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802717,"byte_end":802800,"line_start":156,"line_end":156,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802805,"byte_end":802808,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802813,"byte_end":802881,"line_start":158,"line_end":158,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802886,"byte_end":802893,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802898,"byte_end":802907,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6032},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":803195,"byte_end":803206,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"translation","qualname":"<Isometry<N, U2, UnitComplex<N>>>::translation","value":"fn (x: N, y: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":803103,"byte_end":803169,"line_start":168,"line_end":168,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":803174,"byte_end":803183,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6033},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":803398,"byte_end":803406,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Isometry<N, U2, UnitComplex<N>>>::rotation","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":803315,"byte_end":803372,"line_start":174,"line_end":174,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":803377,"byte_end":803386,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":19172},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":834906,"byte_end":834916,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"Similarity","qualname":"::geometry::similarity::Similarity","value":"Similarity { isometry }","parent":null,"children":[{"krate":0,"index":19176},{"krate":0,"index":19177}],"decl_id":null,"docs":" A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.\n","sig":null,"attributes":[{"value":"/ A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":834184,"byte_end":834278,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":834279,"byte_end":834289,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":19176},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":835074,"byte_end":835082,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"name":"isometry","qualname":"::geometry::similarity::Similarity::isometry","value":"geometry::isometry::Isometry<N, D, R>","parent":{"krate":0,"index":19172},"children":[],"decl_id":null,"docs":" The part of this similarity that does not include the scaling factor.\n","sig":null,"attributes":[{"value":"/ The part of this similarity that does not include the scaling factor.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":834992,"byte_end":835065,"line_start":47,"line_end":47,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6175},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836623,"byte_end":836633,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Similarity<N, D, R>>::from_parts","value":"fn (translation: Translation<N, D>, rotation: R, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836524,"byte_end":836597,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836602,"byte_end":836611,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6176},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836928,"byte_end":836941,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"from_isometry","qualname":"<Similarity<N, D, R>>::from_isometry","value":"fn (isometry: Isometry<N, D, R>, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836829,"byte_end":836902,"line_start":114,"line_end":114,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836907,"byte_end":836916,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6177},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837308,"byte_end":837320,"line_start":130,"line_end":130,"column_start":12,"column_end":24},"name":"from_scaling","qualname":"<Similarity<N, D, R>>::from_scaling","value":"fn (scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity that applies only a scaling factor.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity that applies only a scaling factor.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837218,"byte_end":837282,"line_start":128,"line_end":128,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837287,"byte_end":837296,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6178},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837458,"byte_end":837465,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Similarity<N, D, R>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.\n","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837413,"byte_end":837432,"line_start":134,"line_end":134,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837437,"byte_end":837446,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6179},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837623,"byte_end":837634,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Similarity<N, D, R>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.\n","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837569,"byte_end":837597,"line_start":142,"line_end":142,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837602,"byte_end":837611,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6180},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837885,"byte_end":837896,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"set_scaling","qualname":"<Similarity<N, D, R>>::set_scaling","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837802,"byte_end":837859,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":837864,"byte_end":837873,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6181},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":838186,"byte_end":838193,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"scaling","qualname":"<Similarity<N, D, R>>::scaling","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":838103,"byte_end":838160,"line_start":161,"line_end":161,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":838165,"byte_end":838174,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6182},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":838354,"byte_end":838369,"line_start":169,"line_end":169,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<Similarity<N, D, R>>::prepend_scaling","value":"fn (&self, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":838240,"byte_end":838328,"line_start":167,"line_end":167,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":838333,"byte_end":838342,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6183},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":838736,"byte_end":838750,"line_start":180,"line_end":180,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<Similarity<N, D, R>>::append_scaling","value":"fn (&self, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":838623,"byte_end":838710,"line_start":178,"line_end":178,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":838715,"byte_end":838724,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6184},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":839250,"byte_end":839269,"line_start":195,"line_end":195,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<Similarity<N, D, R>>::prepend_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":839121,"byte_end":839224,"line_start":193,"line_end":193,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":839229,"byte_end":839238,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6185},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":839604,"byte_end":839622,"line_start":206,"line_end":206,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<Similarity<N, D, R>>::append_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":839476,"byte_end":839578,"line_start":204,"line_end":204,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":839583,"byte_end":839592,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6186},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":839962,"byte_end":839984,"line_start":218,"line_end":218,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Similarity<N, D, R>>::append_translation_mut","value":"fn (&mut self, t: &Translation<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":839883,"byte_end":839936,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":839941,"byte_end":839950,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6187},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840156,"byte_end":840175,"line_start":224,"line_end":224,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Similarity<N, D, R>>::append_rotation_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840080,"byte_end":840130,"line_start":222,"line_end":222,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840135,"byte_end":840144,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6188},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840398,"byte_end":840427,"line_start":231,"line_end":231,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_point_mut","value":"fn (&mut self, r: &R, p: &Point<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840252,"byte_end":840344,"line_start":228,"line_end":228,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840349,"byte_end":840372,"line_start":229,"line_end":229,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840377,"byte_end":840386,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6189},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840668,"byte_end":840698,"line_start":238,"line_end":238,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_center_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840534,"byte_end":840614,"line_start":235,"line_end":235,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840619,"byte_end":840642,"line_start":236,"line_end":236,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840647,"byte_end":840656,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6190},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841465,"byte_end":841480,"line_start":258,"line_end":258,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Similarity<N, D, R>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this similarity.","sig":null,"attributes":[{"value":"/ Transform the given point by this similarity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840786,"byte_end":840835,"line_start":242,"line_end":242,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840840,"byte_end":840843,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840848,"byte_end":840903,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840908,"byte_end":840911,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840916,"byte_end":840929,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840934,"byte_end":840941,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840946,"byte_end":840985,"line_start":248,"line_end":248,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":840990,"byte_end":841009,"line_start":249,"line_end":249,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841014,"byte_end":841065,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841070,"byte_end":841128,"line_start":251,"line_end":251,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841133,"byte_end":841183,"line_start":252,"line_end":252,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841188,"byte_end":841248,"line_start":253,"line_end":253,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841253,"byte_end":841330,"line_start":254,"line_end":254,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(19.0, 17.0, -9.0), epsilon = 1.0e-5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841335,"byte_end":841427,"line_start":255,"line_end":255,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841432,"byte_end":841439,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841444,"byte_end":841453,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6191},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842275,"byte_end":842291,"line_start":279,"line_end":279,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Similarity<N, D, R>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this similarity, ignoring the translational\n component.","sig":null,"attributes":[{"value":"/ Transform the given vector by this similarity, ignoring the translational","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841552,"byte_end":841629,"line_start":262,"line_end":262,"column_start":5,"column_end":82}},{"value":"/ component.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841634,"byte_end":841648,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841653,"byte_end":841656,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * t`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841661,"byte_end":841715,"line_start":265,"line_end":265,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841720,"byte_end":841723,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841728,"byte_end":841741,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841746,"byte_end":841753,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841758,"byte_end":841797,"line_start":269,"line_end":269,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841802,"byte_end":841821,"line_start":270,"line_end":270,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841826,"byte_end":841869,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841874,"byte_end":841932,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841937,"byte_end":841987,"line_start":273,"line_end":273,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":841992,"byte_end":842052,"line_start":274,"line_end":274,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842057,"byte_end":842137,"line_start":275,"line_end":275,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(18.0, 15.0, -12.0), epsilon = 1.0e-5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842142,"byte_end":842237,"line_start":276,"line_end":276,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842242,"byte_end":842249,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842254,"byte_end":842263,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6192},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843102,"byte_end":843125,"line_start":299,"line_end":299,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Similarity<N, D, R>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this similarity. This may\n be cheaper than inverting the similarity and then transforming the\n given point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this similarity. This may","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842365,"byte_end":842438,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ be cheaper than inverting the similarity and then transforming the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842443,"byte_end":842513,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/ given point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842518,"byte_end":842534,"line_start":285,"line_end":285,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842539,"byte_end":842542,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842547,"byte_end":842560,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842565,"byte_end":842572,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842577,"byte_end":842616,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842621,"byte_end":842640,"line_start":290,"line_end":290,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842645,"byte_end":842696,"line_start":291,"line_end":291,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842701,"byte_end":842759,"line_start":292,"line_end":292,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842764,"byte_end":842814,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842819,"byte_end":842879,"line_start":294,"line_end":294,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842884,"byte_end":842969,"line_start":295,"line_end":295,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-1.5, 1.5, 1.5), epsilon = 1.0e-5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":842974,"byte_end":843064,"line_start":296,"line_end":296,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843069,"byte_end":843076,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843081,"byte_end":843090,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6193},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":844020,"byte_end":844044,"line_start":319,"line_end":319,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Similarity<N, D, R>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this similarity,\n ignoring the translational component. This may be cheaper than\n inverting the similarity and then transforming the given vector.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this similarity,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843246,"byte_end":843311,"line_start":303,"line_end":303,"column_start":5,"column_end":70}},{"value":"/ ignoring the translational component. This may be cheaper than","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843316,"byte_end":843382,"line_start":304,"line_end":304,"column_start":5,"column_end":71}},{"value":"/ inverting the similarity and then transforming the given vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843387,"byte_end":843455,"line_start":305,"line_end":305,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843460,"byte_end":843463,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843468,"byte_end":843481,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843486,"byte_end":843493,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843498,"byte_end":843537,"line_start":309,"line_end":309,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843542,"byte_end":843561,"line_start":310,"line_end":310,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843566,"byte_end":843609,"line_start":311,"line_end":311,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843614,"byte_end":843672,"line_start":312,"line_end":312,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843677,"byte_end":843727,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843732,"byte_end":843792,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.inverse_transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843797,"byte_end":843885,"line_start":315,"line_end":315,"column_start":5,"column_end":93}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.5, 2.0), epsilon = 1.0e-5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843890,"byte_end":843982,"line_start":316,"line_end":316,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843987,"byte_end":843994,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":843999,"byte_end":844008,"line_start":318,"line_end":318,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6198},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":844727,"byte_end":844741,"line_start":333,"line_end":333,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Similarity<N, D, R>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this similarity into its equivalent homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ Converts this similarity into its equivalent homogeneous transformation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":844618,"byte_end":844701,"line_start":331,"line_end":331,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":844706,"byte_end":844715,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6321},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alias.rs","byte_start":852721,"byte_end":852732,"line_start":6,"line_end":6,"column_start":10,"column_end":21},"name":"Similarity2","qualname":"::geometry::similarity_alias::Similarity2","value":"Similarity<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alias.rs","byte_start":852680,"byte_end":852711,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":6323},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alias.rs","byte_start":852815,"byte_end":852826,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"Similarity3","qualname":"::geometry::similarity_alias::Similarity3","value":"Similarity<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alias.rs","byte_start":852774,"byte_end":852805,"line_start":8,"line_end":8,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":6325},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alias.rs","byte_start":852958,"byte_end":852975,"line_start":12,"line_end":12,"column_start":10,"column_end":27},"name":"SimilarityMatrix2","qualname":"::geometry::similarity_alias::SimilarityMatrix2","value":"Similarity<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alias.rs","byte_start":852871,"byte_end":852948,"line_start":11,"line_end":11,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":6327},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alias.rs","byte_start":853102,"byte_end":853119,"line_start":15,"line_end":15,"column_start":10,"column_end":27},"name":"SimilarityMatrix3","qualname":"::geometry::similarity_alias::SimilarityMatrix3","value":"Similarity<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alias.rs","byte_start":853015,"byte_end":853092,"line_start":14,"line_end":14,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6360},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854305,"byte_end":854313,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"identity","qualname":"<Similarity<N, D, R>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity similarity.","sig":null,"attributes":[{"value":"/ Creates a new identity similarity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":853860,"byte_end":853898,"line_start":27,"line_end":27,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":853903,"byte_end":853906,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":853911,"byte_end":853924,"line_start":29,"line_end":29,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":853929,"byte_end":853932,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":853937,"byte_end":853944,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Similarity2, Point2, Similarity3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":853949,"byte_end":854012,"line_start":32,"line_end":32,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854017,"byte_end":854020,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity2::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854025,"byte_end":854063,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854068,"byte_end":854103,"line_start":35,"line_end":35,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854108,"byte_end":854137,"line_start":36,"line_end":36,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854142,"byte_end":854145,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity3::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854150,"byte_end":854188,"line_start":38,"line_end":38,"column_start":5,"column_end":43}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854193,"byte_end":854233,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854238,"byte_end":854267,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854272,"byte_end":854279,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854284,"byte_end":854293,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6377},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855892,"byte_end":855910,"line_start":98,"line_end":98,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Similarity<N, D, R>>::rotation_wrt_point","value":"fn (r: R, p: Point<N, D>, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with\n its axis passing through the point `p`.","sig":null,"attributes":[{"value":"/ The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855264,"byte_end":855359,"line_start":82,"line_end":82,"column_start":5,"column_end":100}},{"value":"/ its axis passing through the point `p`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855364,"byte_end":855407,"line_start":83,"line_end":83,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855412,"byte_end":855415,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855420,"byte_end":855433,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855438,"byte_end":855441,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855446,"byte_end":855453,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855458,"byte_end":855497,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855502,"byte_end":855521,"line_start":89,"line_end":89,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Point2, UnitComplex};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855526,"byte_end":855581,"line_start":90,"line_end":90,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855586,"byte_end":855641,"line_start":91,"line_end":91,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(3.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855646,"byte_end":855681,"line_start":92,"line_end":92,"column_start":5,"column_end":40}},{"value":"/ let sim = Similarity2::rotation_wrt_point(rot, pt, 4.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855686,"byte_end":855746,"line_start":93,"line_end":93,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855751,"byte_end":855754,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(1.0, 2.0), Point2::new(-3.0, 3.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855759,"byte_end":855854,"line_start":95,"line_end":95,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855859,"byte_end":855866,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855871,"byte_end":855880,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6380},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857253,"byte_end":857256,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, Rotation2<N>>>::new","value":"fn (translation: Vector2<N>, angle: N, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":856744,"byte_end":856835,"line_start":131,"line_end":131,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":856840,"byte_end":856843,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":856848,"byte_end":856861,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":856866,"byte_end":856869,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":856874,"byte_end":856881,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":856886,"byte_end":856925,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":856930,"byte_end":856949,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{SimilarityMatrix2, Vector2, Point2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":856954,"byte_end":857011,"line_start":138,"line_end":138,"column_start":5,"column_end":62}},{"value":"/ let sim = SimilarityMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857016,"byte_end":857106,"line_start":139,"line_end":139,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857111,"byte_end":857114,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857119,"byte_end":857215,"line_start":141,"line_end":141,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857220,"byte_end":857227,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857232,"byte_end":857241,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6383},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857993,"byte_end":857996,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, UnitComplex<N>>>::new","value":"fn (translation: Vector2<N>, angle: N, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation and a rotation angle.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857518,"byte_end":857587,"line_start":154,"line_end":154,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857592,"byte_end":857595,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857600,"byte_end":857613,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857618,"byte_end":857621,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857626,"byte_end":857633,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857638,"byte_end":857677,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857682,"byte_end":857701,"line_start":160,"line_end":160,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Vector2, Point2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857706,"byte_end":857757,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/ let sim = Similarity2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857762,"byte_end":857846,"line_start":162,"line_end":162,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857851,"byte_end":857854,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857859,"byte_end":857955,"line_start":164,"line_end":164,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857960,"byte_end":857967,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857972,"byte_end":857981,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":19721},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889349,"byte_end":889351,"line_start":27,"line_end":27,"column_start":15,"column_end":17},"name":"xx","qualname":"<Point<N, D>>::xx","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19722},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889386,"byte_end":889389,"line_start":28,"line_end":28,"column_start":15,"column_end":18},"name":"xxx","qualname":"<Point<N, D>>::xxx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19726},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889427,"byte_end":889429,"line_start":30,"line_end":30,"column_start":15,"column_end":17},"name":"xy","qualname":"<Point<N, D>>::xy","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19727},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889464,"byte_end":889466,"line_start":31,"line_end":31,"column_start":15,"column_end":17},"name":"yx","qualname":"<Point<N, D>>::yx","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19728},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889501,"byte_end":889503,"line_start":32,"line_end":32,"column_start":15,"column_end":17},"name":"yy","qualname":"<Point<N, D>>::yy","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19729},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889538,"byte_end":889541,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"xxy","qualname":"<Point<N, D>>::xxy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19730},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889578,"byte_end":889581,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"xyx","qualname":"<Point<N, D>>::xyx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19731},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889618,"byte_end":889621,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"xyy","qualname":"<Point<N, D>>::xyy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19732},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889658,"byte_end":889661,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"name":"yxx","qualname":"<Point<N, D>>::yxx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19733},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889698,"byte_end":889701,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"yxy","qualname":"<Point<N, D>>::yxy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19734},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889738,"byte_end":889741,"line_start":38,"line_end":38,"column_start":15,"column_end":18},"name":"yyx","qualname":"<Point<N, D>>::yyx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19735},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889778,"byte_end":889781,"line_start":39,"line_end":39,"column_start":15,"column_end":18},"name":"yyy","qualname":"<Point<N, D>>::yyy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19739},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889819,"byte_end":889821,"line_start":41,"line_end":41,"column_start":15,"column_end":17},"name":"xz","qualname":"<Point<N, D>>::xz","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19740},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889856,"byte_end":889858,"line_start":42,"line_end":42,"column_start":15,"column_end":17},"name":"yz","qualname":"<Point<N, D>>::yz","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19741},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889893,"byte_end":889895,"line_start":43,"line_end":43,"column_start":15,"column_end":17},"name":"zx","qualname":"<Point<N, D>>::zx","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19742},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889930,"byte_end":889932,"line_start":44,"line_end":44,"column_start":15,"column_end":17},"name":"zy","qualname":"<Point<N, D>>::zy","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19743},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889967,"byte_end":889969,"line_start":45,"line_end":45,"column_start":15,"column_end":17},"name":"zz","qualname":"<Point<N, D>>::zz","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19744},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890004,"byte_end":890007,"line_start":46,"line_end":46,"column_start":15,"column_end":18},"name":"xxz","qualname":"<Point<N, D>>::xxz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19745},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890044,"byte_end":890047,"line_start":47,"line_end":47,"column_start":15,"column_end":18},"name":"xyz","qualname":"<Point<N, D>>::xyz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19746},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890084,"byte_end":890087,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"name":"xzx","qualname":"<Point<N, D>>::xzx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19747},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890124,"byte_end":890127,"line_start":49,"line_end":49,"column_start":15,"column_end":18},"name":"xzy","qualname":"<Point<N, D>>::xzy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19748},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890164,"byte_end":890167,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"xzz","qualname":"<Point<N, D>>::xzz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19749},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890204,"byte_end":890207,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"yxz","qualname":"<Point<N, D>>::yxz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19750},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890244,"byte_end":890247,"line_start":52,"line_end":52,"column_start":15,"column_end":18},"name":"yyz","qualname":"<Point<N, D>>::yyz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19751},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890284,"byte_end":890287,"line_start":53,"line_end":53,"column_start":15,"column_end":18},"name":"yzx","qualname":"<Point<N, D>>::yzx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19752},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890324,"byte_end":890327,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"yzy","qualname":"<Point<N, D>>::yzy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19753},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890364,"byte_end":890367,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"yzz","qualname":"<Point<N, D>>::yzz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19754},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890404,"byte_end":890407,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"zxx","qualname":"<Point<N, D>>::zxx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19755},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890444,"byte_end":890447,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"zxy","qualname":"<Point<N, D>>::zxy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19756},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890484,"byte_end":890487,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"zxz","qualname":"<Point<N, D>>::zxz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19757},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890524,"byte_end":890527,"line_start":59,"line_end":59,"column_start":15,"column_end":18},"name":"zyx","qualname":"<Point<N, D>>::zyx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19758},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890564,"byte_end":890567,"line_start":60,"line_end":60,"column_start":15,"column_end":18},"name":"zyy","qualname":"<Point<N, D>>::zyy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19759},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890604,"byte_end":890607,"line_start":61,"line_end":61,"column_start":15,"column_end":18},"name":"zyz","qualname":"<Point<N, D>>::zyz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19760},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890644,"byte_end":890647,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"zzx","qualname":"<Point<N, D>>::zzx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19761},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890684,"byte_end":890687,"line_start":63,"line_end":63,"column_start":15,"column_end":18},"name":"zzy","qualname":"<Point<N, D>>::zzy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19762},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":890724,"byte_end":890727,"line_start":64,"line_end":64,"column_start":15,"column_end":18},"name":"zzz","qualname":"<Point<N, D>>::zzz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889057,"byte_end":889106,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/swizzle.rs","byte_start":889127,"byte_end":889136,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6509},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891433,"byte_end":891442,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"name":"TCategory","qualname":"::geometry::transform::TCategory","value":"TCategory: Any + Debug + Copy + PartialEq + Send","parent":null,"children":[{"krate":0,"index":6510},{"krate":0,"index":6511}],"decl_id":null,"docs":" Trait implemented by phantom types identifying the projective transformation type.","sig":null,"attributes":[{"value":"/ Trait implemented by phantom types identifying the projective transformation type.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891244,"byte_end":891330,"line_start":18,"line_end":18,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891331,"byte_end":891334,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ NOTE: this trait is not intended to be implemented outside of the `nalgebra` crate.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891335,"byte_end":891422,"line_start":20,"line_end":20,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":6510},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891622,"byte_end":891636,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"has_normalizer","qualname":"::geometry::transform::TCategory::has_normalizer","value":"fn () -> bool","parent":{"krate":0,"index":6509},"children":[],"decl_id":null,"docs":" Indicates whether a `Transform` with the category `Self` has a bottom-row different from\n `0 0 .. 1`.\n","sig":null,"attributes":[{"value":"/ Indicates whether a `Transform` with the category `Self` has a bottom-row different from","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891488,"byte_end":891580,"line_start":22,"line_end":22,"column_start":5,"column_end":97}},{"value":"/ `0 0 .. 1`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891585,"byte_end":891600,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891605,"byte_end":891614,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6511},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891797,"byte_end":891825,"line_start":31,"line_end":31,"column_start":8,"column_end":36},"name":"check_homogeneous_invariants","qualname":"::geometry::transform::TCategory::check_homogeneous_invariants","value":"fn <N, D> (mat: &MatrixN<N, D>) -> bool","parent":{"krate":0,"index":6509},"children":[],"decl_id":null,"docs":" Checks that the given matrix is a valid homogeneous representation of an element of the\n category `Self`.\n","sig":null,"attributes":[{"value":"/ Checks that the given matrix is a valid homogeneous representation of an element of the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891673,"byte_end":891764,"line_start":29,"line_end":29,"column_start":5,"column_end":96}},{"value":"/ category `Self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891769,"byte_end":891789,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":6514},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892139,"byte_end":892151,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"TCategoryMul","qualname":"::geometry::transform::TCategoryMul","value":"TCategoryMul<Other: TCategory>: TCategory","parent":null,"children":[{"krate":0,"index":6516}],"decl_id":null,"docs":" Traits that gives the `Transform` category that is compatible with the result of the\n multiplication of transformations with categories `Self` and `Other`.\n","sig":null,"attributes":[{"value":"/ Traits that gives the `Transform` category that is compatible with the result of the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891966,"byte_end":892054,"line_start":37,"line_end":37,"column_start":1,"column_end":89}},{"value":"/ multiplication of transformations with categories `Self` and `Other`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892055,"byte_end":892128,"line_start":38,"line_end":38,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":6516},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892408,"byte_end":892422,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"name":"Representative","qualname":"::geometry::transform::TCategoryMul::Representative","value":"type Representative: TCategory;","parent":{"krate":0,"index":6514},"children":[],"decl_id":null,"docs":" The transform category that results from the multiplication of a `Transform<Self>` to a\n `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most\n general category.\n","sig":null,"attributes":[{"value":"/ The transform category that results from the multiplication of a `Transform<Self>` to a","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892187,"byte_end":892278,"line_start":40,"line_end":40,"column_start":5,"column_end":96}},{"value":"/ `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892283,"byte_end":892372,"line_start":41,"line_end":41,"column_start":5,"column_end":94}},{"value":"/ general category.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892377,"byte_end":892398,"line_start":42,"line_end":42,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":6517},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892527,"byte_end":892543,"line_start":47,"line_end":47,"column_start":11,"column_end":27},"name":"SuperTCategoryOf","qualname":"::geometry::transform::SuperTCategoryOf","value":"SuperTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more general `Transform` category than `Other`.\n","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more general `Transform` category than `Other`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892438,"byte_end":892516,"line_start":46,"line_end":46,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":6519},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892730,"byte_end":892744,"line_start":52,"line_end":52,"column_start":11,"column_end":25},"name":"SubTCategoryOf","qualname":"::geometry::transform::SubTCategoryOf","value":"SubTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more specific `Transform` category than `Other`.","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more specific `Transform` category than `Other`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892577,"byte_end":892656,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892657,"byte_end":892660,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Automatically implemented based on `SuperTCategoryOf`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892661,"byte_end":892719,"line_start":51,"line_end":51,"column_start":1,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":19763},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":893021,"byte_end":893029,"line_start":62,"line_end":62,"column_start":10,"column_end":18},"name":"TGeneral","qualname":"::geometry::transform::TGeneral","value":"TGeneral::{}","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general (not necessarily inversible) `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general (not necessarily inversible) `Transform` type.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892876,"byte_end":892960,"line_start":60,"line_end":60,"column_start":1,"column_end":85}}]},{"kind":"Enum","id":{"krate":0,"index":19778},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":893161,"byte_end":893172,"line_start":66,"line_end":66,"column_start":10,"column_end":21},"name":"TProjective","qualname":"::geometry::transform::TProjective","value":"TProjective::{}","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general inversible `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general inversible `Transform` type.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":893034,"byte_end":893100,"line_start":64,"line_end":64,"column_start":1,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":19793},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":893327,"byte_end":893334,"line_start":70,"line_end":70,"column_start":10,"column_end":17},"name":"TAffine","qualname":"::geometry::transform::TAffine","value":"TAffine::{}","parent":null,"children":[],"decl_id":null,"docs":" Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.\n","sig":null,"attributes":[{"value":"/ Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":893177,"byte_end":893266,"line_start":68,"line_end":68,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":19823},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":895541,"byte_end":895550,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"Transform","qualname":"::geometry::transform::Transform","value":"Transform {  }","parent":null,"children":[{"krate":0,"index":19827},{"krate":0,"index":19828}],"decl_id":null,"docs":" A transformation matrix in homogeneous coordinates.","sig":null,"attributes":[{"value":"/ A transformation matrix in homogeneous coordinates.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":895321,"byte_end":895376,"line_start":154,"line_end":154,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":895377,"byte_end":895380,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ It is stored as a matrix with dimensions `(D + 1, D + 1)`, e.g., it stores a 4x4 matrix for a","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":895381,"byte_end":895478,"line_start":156,"line_end":156,"column_start":1,"column_end":98}},{"value":"/ 3D transformation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":895479,"byte_end":895501,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":895502,"byte_end":895512,"line_start":158,"line_end":158,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":6567},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898352,"byte_end":898373,"line_start":236,"line_end":236,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Transform<N, D, C>>::from_matrix_unchecked","value":"fn (matrix: MatrixN<N, DimNameSum<D, U1>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new transformation from the given homogeneous matrix. The transformation category\n of `Self` is not checked to be verified by the given matrix.\n","sig":null,"attributes":[{"value":"/ Creates a new transformation from the given homogeneous matrix. The transformation category","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898162,"byte_end":898257,"line_start":233,"line_end":233,"column_start":5,"column_end":100}},{"value":"/ of `Self` is not checked to be verified by the given matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898262,"byte_end":898326,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898331,"byte_end":898340,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6568},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898921,"byte_end":898931,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Transform<N, D, C>>::into_inner","value":"fn (self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898527,"byte_end":898563,"line_start":243,"line_end":243,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898568,"byte_end":898571,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898576,"byte_end":898590,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898595,"byte_end":898602,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898607,"byte_end":898649,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898654,"byte_end":898657,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898662,"byte_end":898701,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898706,"byte_end":898745,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898750,"byte_end":898790,"line_start":251,"line_end":251,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898795,"byte_end":898844,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898849,"byte_end":898883,"line_start":253,"line_end":253,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898888,"byte_end":898895,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898900,"byte_end":898909,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6569},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899177,"byte_end":899183,"line_start":264,"line_end":264,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Transform<N, D, C>>::unwrap","value":"fn (self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.\n Deprecated: Use [Transform::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899004,"byte_end":899040,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/ Deprecated: Use [Transform::into_inner] instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899045,"byte_end":899097,"line_start":261,"line_end":261,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899102,"byte_end":899151,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899156,"byte_end":899165,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6570},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899652,"byte_end":899658,"line_start":281,"line_end":281,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Transform<N, D, C>>::matrix","value":"fn (&self) -> &MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899256,"byte_end":899297,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899302,"byte_end":899305,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899310,"byte_end":899324,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899329,"byte_end":899336,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899341,"byte_end":899383,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899388,"byte_end":899391,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899396,"byte_end":899435,"line_start":274,"line_end":274,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899440,"byte_end":899479,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899484,"byte_end":899524,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899529,"byte_end":899578,"line_start":277,"line_end":277,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(*t.matrix(), m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899583,"byte_end":899614,"line_start":278,"line_end":278,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899619,"byte_end":899626,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899631,"byte_end":899640,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6571},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900565,"byte_end":900585,"line_start":308,"line_end":308,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Transform<N, D, C>>::matrix_mut_unchecked","value":"fn (&mut self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899734,"byte_end":899783,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899788,"byte_end":899791,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ It is `_unchecked` because direct modifications of this matrix may break invariants","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899796,"byte_end":899883,"line_start":287,"line_end":287,"column_start":5,"column_end":92}},{"value":"/ identified by this transformation category.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899888,"byte_end":899935,"line_start":288,"line_end":288,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899940,"byte_end":899943,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899948,"byte_end":899962,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899967,"byte_end":899974,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":899979,"byte_end":900021,"line_start":292,"line_end":292,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900026,"byte_end":900029,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900034,"byte_end":900073,"line_start":294,"line_end":294,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900078,"byte_end":900117,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900122,"byte_end":900162,"line_start":296,"line_end":296,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900167,"byte_end":900220,"line_start":297,"line_end":297,"column_start":5,"column_end":58}},{"value":"/ t.matrix_mut_unchecked().m12 = 42.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900225,"byte_end":900265,"line_start":298,"line_end":298,"column_start":5,"column_end":45}},{"value":"/ t.matrix_mut_unchecked().m23 = 90.0;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900270,"byte_end":900310,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900315,"byte_end":900318,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900323,"byte_end":900326,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix3::new(1.0, 42.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900331,"byte_end":900378,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/                             3.0, 4.0,  90.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900383,"byte_end":900431,"line_start":303,"line_end":303,"column_start":5,"column_end":53}},{"value":"/                             0.0, 0.0,  1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900436,"byte_end":900484,"line_start":304,"line_end":304,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(*t.matrix(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900489,"byte_end":900527,"line_start":305,"line_end":305,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900532,"byte_end":900539,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900544,"byte_end":900553,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6572},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901057,"byte_end":901069,"line_start":319,"line_end":319,"column_start":12,"column_end":24},"name":"set_category","qualname":"<Transform<N, D, C>>::set_category","value":"fn <CNew> (self) -> Transform<N, D, CNew>","parent":null,"children":[],"decl_id":null,"docs":" Sets the category of this transform.","sig":null,"attributes":[{"value":"/ Sets the category of this transform.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900673,"byte_end":900713,"line_start":312,"line_end":312,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900718,"byte_end":900721,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This can be done only if the new category is more general than the current one, e.g., a","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900726,"byte_end":900817,"line_start":314,"line_end":314,"column_start":5,"column_end":96}},{"value":"/ transform with category `TProjective` cannot be converted to a transform with category","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900822,"byte_end":900912,"line_start":315,"line_end":315,"column_start":5,"column_end":95}},{"value":"/ `TAffine` because not all projective transformations are affine (the other way-round is","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":900917,"byte_end":901008,"line_start":316,"line_end":316,"column_start":5,"column_end":96}},{"value":"/ valid though).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901013,"byte_end":901031,"line_start":317,"line_end":317,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901036,"byte_end":901045,"line_start":318,"line_end":318,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6574},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901431,"byte_end":901442,"line_start":328,"line_end":328,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Transform<N, D, C>>::clone_owned","value":"fn (&self) -> Transform<N, D, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this transform into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this transform into one that owns its data.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901195,"byte_end":901249,"line_start":323,"line_end":323,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901254,"byte_end":901263,"line_start":324,"line_end":324,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is redundant with automatic `Copy` and the `.clone()` method and will be removed in a future release.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901268,"byte_end":901419,"line_start":325,"line_end":327,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":6575},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901993,"byte_end":902007,"line_start":345,"line_end":345,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Transform<N, D, C>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this transform into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this transform into its equivalent homogeneous transformation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901553,"byte_end":901635,"line_start":332,"line_end":332,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901640,"byte_end":901643,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901648,"byte_end":901662,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901667,"byte_end":901674,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901679,"byte_end":901721,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901726,"byte_end":901729,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901734,"byte_end":901773,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901778,"byte_end":901817,"line_start":339,"line_end":339,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901822,"byte_end":901862,"line_start":340,"line_end":340,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901867,"byte_end":901916,"line_start":341,"line_end":341,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901921,"byte_end":901955,"line_start":342,"line_end":342,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901960,"byte_end":901967,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":901972,"byte_end":901981,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6576},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903100,"byte_end":903111,"line_start":373,"line_end":373,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Transform<N, D, C>>::try_inverse","value":"fn (self) -> Option<Transform<N, D, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation. You may use `.inverse` instead of this\n transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation. You may use `.inverse` instead of this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902097,"byte_end":902179,"line_start":349,"line_end":349,"column_start":5,"column_end":87}},{"value":"/ transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902184,"byte_end":902291,"line_start":350,"line_end":350,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902296,"byte_end":902299,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902304,"byte_end":902318,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902323,"byte_end":902330,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902335,"byte_end":902374,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902379,"byte_end":902421,"line_start":355,"line_end":355,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902426,"byte_end":902429,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902434,"byte_end":902474,"line_start":357,"line_end":357,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902479,"byte_end":902518,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902523,"byte_end":902563,"line_start":359,"line_end":359,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902568,"byte_end":902617,"line_start":360,"line_end":360,"column_start":5,"column_end":54}},{"value":"/ let inv_t = t.try_inverse().unwrap();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902622,"byte_end":902663,"line_start":361,"line_end":361,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902668,"byte_end":902727,"line_start":362,"line_end":362,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902732,"byte_end":902791,"line_start":363,"line_end":363,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902796,"byte_end":902799,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902804,"byte_end":902831,"line_start":365,"line_end":365,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902836,"byte_end":902875,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902880,"byte_end":902919,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902924,"byte_end":902964,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":902969,"byte_end":903018,"line_start":369,"line_end":369,"column_start":5,"column_end":54}},{"value":"/ assert!(t.try_inverse().is_none());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903023,"byte_end":903062,"line_start":370,"line_end":370,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903067,"byte_end":903074,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903079,"byte_end":903088,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6577},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904008,"byte_end":904015,"line_start":398,"line_end":398,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform<N, D, C>>::inverse","value":"fn (self) -> Transform<N, D, C>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`\n category (i.e., a `Transform{2,3}` may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903312,"byte_end":903400,"line_start":381,"line_end":381,"column_start":5,"column_end":93}},{"value":"/ category (i.e., a `Transform{2,3}` may not be invertible).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903405,"byte_end":903467,"line_start":382,"line_end":382,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903472,"byte_end":903475,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903480,"byte_end":903494,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903499,"byte_end":903506,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903511,"byte_end":903550,"line_start":386,"line_end":386,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903555,"byte_end":903598,"line_start":387,"line_end":387,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903603,"byte_end":903606,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903611,"byte_end":903651,"line_start":389,"line_end":389,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903656,"byte_end":903695,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903700,"byte_end":903740,"line_start":391,"line_end":391,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903745,"byte_end":903798,"line_start":392,"line_end":392,"column_start":5,"column_end":58}},{"value":"/ let inv_t = proj.inverse();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903803,"byte_end":903834,"line_start":393,"line_end":393,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903839,"byte_end":903902,"line_start":394,"line_end":394,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903907,"byte_end":903970,"line_start":395,"line_end":395,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903975,"byte_end":903982,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":903987,"byte_end":903996,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6578},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905202,"byte_end":905217,"line_start":429,"line_end":429,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Transform<N, D, C>>::try_inverse_mut","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this\n transformation has a subcategory of `TProjective`.","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904217,"byte_end":904312,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ transformation has a subcategory of `TProjective`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904317,"byte_end":904371,"line_start":405,"line_end":405,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904376,"byte_end":904379,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904384,"byte_end":904398,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904403,"byte_end":904410,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904415,"byte_end":904454,"line_start":409,"line_end":409,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904459,"byte_end":904501,"line_start":410,"line_end":410,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904506,"byte_end":904509,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904514,"byte_end":904554,"line_start":412,"line_end":412,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904559,"byte_end":904598,"line_start":413,"line_end":413,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904603,"byte_end":904643,"line_start":414,"line_end":414,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904648,"byte_end":904697,"line_start":415,"line_end":415,"column_start":5,"column_end":54}},{"value":"/ let mut inv_t = t;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904702,"byte_end":904724,"line_start":416,"line_end":416,"column_start":5,"column_end":27}},{"value":"/ assert!(inv_t.try_inverse_mut());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904729,"byte_end":904766,"line_start":417,"line_end":417,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904771,"byte_end":904830,"line_start":418,"line_end":418,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904835,"byte_end":904894,"line_start":419,"line_end":419,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904899,"byte_end":904902,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904907,"byte_end":904934,"line_start":421,"line_end":421,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904939,"byte_end":904978,"line_start":422,"line_end":422,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":904983,"byte_end":905022,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905027,"byte_end":905067,"line_start":424,"line_end":424,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905072,"byte_end":905125,"line_start":425,"line_end":425,"column_start":5,"column_end":58}},{"value":"/ assert!(!t.try_inverse_mut());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905130,"byte_end":905164,"line_start":426,"line_end":426,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905169,"byte_end":905176,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905181,"byte_end":905190,"line_start":428,"line_end":428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6579},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905998,"byte_end":906009,"line_start":451,"line_end":451,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Transform<N, D, C>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the\n `TGeneral` category (it may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905288,"byte_end":905378,"line_start":433,"line_end":433,"column_start":5,"column_end":95}},{"value":"/ `TGeneral` category (it may not be invertible).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905383,"byte_end":905434,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905439,"byte_end":905442,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905447,"byte_end":905461,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905466,"byte_end":905473,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905478,"byte_end":905517,"line_start":438,"line_end":438,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905522,"byte_end":905565,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905570,"byte_end":905573,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905578,"byte_end":905618,"line_start":441,"line_end":441,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905623,"byte_end":905662,"line_start":442,"line_end":442,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905667,"byte_end":905707,"line_start":443,"line_end":443,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905712,"byte_end":905765,"line_start":444,"line_end":444,"column_start":5,"column_end":58}},{"value":"/ let mut inv_t = proj;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905770,"byte_end":905795,"line_start":445,"line_end":445,"column_start":5,"column_end":30}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905800,"byte_end":905824,"line_start":446,"line_end":446,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905829,"byte_end":905892,"line_start":447,"line_end":447,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905897,"byte_end":905960,"line_start":448,"line_end":448,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905965,"byte_end":905972,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":905977,"byte_end":905986,"line_start":450,"line_end":450,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6584},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906535,"byte_end":906550,"line_start":470,"line_end":470,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Transform<N, D, C>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this transformation.","sig":null,"attributes":[{"value":"/ Transform the given point by this transformation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906388,"byte_end":906441,"line_start":466,"line_end":466,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906446,"byte_end":906449,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906454,"byte_end":906509,"line_start":468,"line_end":468,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906514,"byte_end":906523,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6585},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906837,"byte_end":906853,"line_start":479,"line_end":479,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Transform<N, D, C>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this transformation, ignoring the\n translational component of the transformation.","sig":null,"attributes":[{"value":"/ Transform the given vector by this transformation, ignoring the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906622,"byte_end":906689,"line_start":474,"line_end":474,"column_start":5,"column_end":72}},{"value":"/ translational component of the transformation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906694,"byte_end":906744,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906749,"byte_end":906752,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906757,"byte_end":906811,"line_start":477,"line_end":477,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906816,"byte_end":906825,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6590},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907405,"byte_end":907428,"line_start":495,"line_end":495,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Transform<N, D, C>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the point.\n","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this transformation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907213,"byte_end":907281,"line_start":491,"line_end":491,"column_start":5,"column_end":73}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907286,"byte_end":907360,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/ the point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907365,"byte_end":907379,"line_start":493,"line_end":493,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907384,"byte_end":907393,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6591},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907714,"byte_end":907738,"line_start":503,"line_end":503,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Transform<N, D, C>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the vector.\n","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this transformation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907520,"byte_end":907589,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907594,"byte_end":907668,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/ the vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907673,"byte_end":907688,"line_start":501,"line_end":501,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907693,"byte_end":907702,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6595},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":908141,"byte_end":908151,"line_start":514,"line_end":514,"column_start":12,"column_end":22},"name":"matrix_mut","qualname":"<Transform<N, D, TGeneral>>::matrix_mut","value":"fn (&mut self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this\n transformation category is not `TGeneral`.\n","sig":null,"attributes":[{"value":"/ A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907975,"byte_end":908064,"line_start":511,"line_end":511,"column_start":5,"column_end":94}},{"value":"/ transformation category is not `TGeneral`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":908069,"byte_end":908115,"line_start":512,"line_end":512,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":908120,"byte_end":908129,"line_start":513,"line_end":513,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6683},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":914542,"byte_end":914552,"line_start":6,"line_end":6,"column_start":10,"column_end":20},"name":"Transform2","qualname":"::geometry::transform_alias::Transform2","value":"Transform<N, U2, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 2D general transformation that may not be invertible. Stored as an homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D general transformation that may not be invertible. Stored as an homogeneous 3x3 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":914436,"byte_end":914532,"line_start":5,"line_end":5,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":6685},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":914677,"byte_end":914688,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"Projective2","qualname":"::geometry::transform_alias::Projective2","value":"Transform<N, U2, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 2D general transformation. Stored as an homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 2D general transformation. Stored as an homogeneous 3x3 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":914586,"byte_end":914667,"line_start":7,"line_end":7,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":6687},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":914803,"byte_end":914810,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Affine2","qualname":"::geometry::transform_alias::Affine2","value":"Transform<N, U2, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 2D affine transformation. Stored as an homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D affine transformation. Stored as an homogeneous 3x3 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":914725,"byte_end":914793,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":6689},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":914950,"byte_end":914960,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"Transform3","qualname":"::geometry::transform_alias::Transform3","value":"Transform<N, U3, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 3D general transformation that may not be inversible. Stored as an homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D general transformation that may not be inversible. Stored as an homogeneous 4x4 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":914844,"byte_end":914940,"line_start":12,"line_end":12,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":6691},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":915085,"byte_end":915096,"line_start":15,"line_end":15,"column_start":10,"column_end":21},"name":"Projective3","qualname":"::geometry::transform_alias::Projective3","value":"Transform<N, U3, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 3D general transformation. Stored as an homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 3D general transformation. Stored as an homogeneous 4x4 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":914994,"byte_end":915075,"line_start":14,"line_end":14,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":6693},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":915211,"byte_end":915218,"line_start":17,"line_end":17,"column_start":10,"column_end":17},"name":"Affine3","qualname":"::geometry::transform_alias::Affine3","value":"Transform<N, U3, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 3D affine transformation. Stored as an homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D affine transformation. Stored as an homogeneous 4x4 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alias.rs","byte_start":915133,"byte_end":915201,"line_start":16,"line_end":16,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6713},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916477,"byte_end":916485,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform<N, D, C>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity transform.","sig":null,"attributes":[{"value":"/ Creates a new identity transform.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915640,"byte_end":915677,"line_start":14,"line_end":14,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915682,"byte_end":915685,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915690,"byte_end":915703,"line_start":16,"line_end":16,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915708,"byte_end":915711,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915716,"byte_end":915723,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Transform2, Projective2, Affine2, Transform3, Projective3, Affine3, Point2, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915728,"byte_end":915833,"line_start":19,"line_end":19,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915838,"byte_end":915841,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915846,"byte_end":915881,"line_start":21,"line_end":21,"column_start":5,"column_end":40}},{"value":"/ let t = Projective2::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915886,"byte_end":915922,"line_start":22,"line_end":22,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915927,"byte_end":915954,"line_start":23,"line_end":23,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915959,"byte_end":915962,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine2::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915967,"byte_end":916001,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916006,"byte_end":916035,"line_start":26,"line_end":26,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916040,"byte_end":916043,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform2::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916048,"byte_end":916085,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916090,"byte_end":916119,"line_start":29,"line_end":29,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916124,"byte_end":916127,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ // Also works in 3D.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916132,"byte_end":916156,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916161,"byte_end":916201,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/ let t = Projective3::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916206,"byte_end":916242,"line_start":33,"line_end":33,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916247,"byte_end":916274,"line_start":34,"line_end":34,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916279,"byte_end":916282,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine3::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916287,"byte_end":916321,"line_start":36,"line_end":36,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916326,"byte_end":916355,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916360,"byte_end":916363,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform3::identity();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916368,"byte_end":916405,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916410,"byte_end":916439,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916444,"byte_end":916451,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916456,"byte_end":916465,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6834},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":942863,"byte_end":942873,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"Reflection","qualname":"::geometry::reflection::Reflection","value":"Reflection {  }","parent":null,"children":[{"krate":0,"index":6838},{"krate":0,"index":6839}],"decl_id":null,"docs":" A reflection wrt. a plane.\n","sig":null,"attributes":[{"value":"/ A reflection wrt. a plane.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":942821,"byte_end":942851,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":6844},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943285,"byte_end":943288,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Reflection<N, D, S>>::new","value":"fn (axis: Unit<Vector<N, D, S>>, bias: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt the plane orthogonal to the given axis and bias.","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt the plane orthogonal to the given axis and bias.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943030,"byte_end":943111,"line_start":17,"line_end":17,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943116,"byte_end":943119,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The bias is the position of the plane on the axis. In particular, a bias equal to zero","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943124,"byte_end":943214,"line_start":19,"line_end":19,"column_start":5,"column_end":95}},{"value":"/ represents a plane that passes through the origin.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943219,"byte_end":943273,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6845},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943554,"byte_end":943574,"line_start":30,"line_end":30,"column_start":12,"column_end":32},"name":"new_containing_point","qualname":"<Reflection<N, D, S>>::new_containing_point","value":"fn (axis: Unit<Vector<N, D, S>>, pt: &Point<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the\n point `pt`.\n","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943428,"byte_end":943522,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ point `pt`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943527,"byte_end":943542,"line_start":29,"line_end":29,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6846},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943850,"byte_end":943854,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"axis","qualname":"<Reflection<N, D, S>>::axis","value":"fn (&self) -> &Vector<N, D, S>","parent":null,"children":[],"decl_id":null,"docs":" The reflexion axis.\n","sig":null,"attributes":[{"value":"/ The reflexion axis.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943815,"byte_end":943838,"line_start":42,"line_end":42,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6847},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":944039,"byte_end":944046,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Reflection<N, D, S>>::reflect","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943976,"byte_end":944027,"line_start":48,"line_end":48,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6851},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":944835,"byte_end":944852,"line_start":66,"line_end":66,"column_start":12,"column_end":29},"name":"reflect_with_sign","qualname":"<Reflection<N, D, S>>::reflect_with_sign","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>, sign: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":944772,"byte_end":944823,"line_start":65,"line_end":65,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6855},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":945602,"byte_end":945614,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"reflect_rows","qualname":"<Reflection<N, D, S>>::reflect_rows","value":"fn <R2, C2, S2, S3> (&self, lhs: &mut Matrix<N, R2, C2, S2>, work: &mut Vector<N, R2, S3>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":945542,"byte_end":945590,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6860},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":946194,"byte_end":946216,"line_start":102,"line_end":102,"column_start":12,"column_end":34},"name":"reflect_rows_with_sign","qualname":"<Reflection<N, D, S>>::reflect_rows_with_sign","value":"fn <R2, C2, S2, S3> (&self, lhs: &mut Matrix<N, R2, C2, S2>, work: &mut Vector<N, R2, S3>, sign: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":946134,"byte_end":946182,"line_start":101,"line_end":101,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":6883},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":947309,"byte_end":947322,"line_start":20,"line_end":20,"column_start":12,"column_end":25},"name":"Orthographic3","qualname":"::geometry::orthographic::Orthographic3","value":"Orthographic3 {  }","parent":null,"children":[{"krate":0,"index":6885}],"decl_id":null,"docs":" A 3D orthographic projection stored as an homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D orthographic projection stored as an homogeneous 4x4 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":947228,"byte_end":947297,"line_start":19,"line_end":19,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6899},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951069,"byte_end":951072,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<Orthographic3<N>>::new","value":"fn (left: N, right: N, bottom: N, top: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix.","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948514,"byte_end":948563,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948568,"byte_end":948571,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This follows the OpenGL convention, so this will flip the `z` axis.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948576,"byte_end":948647,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948652,"byte_end":948655,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948660,"byte_end":948673,"line_start":69,"line_end":69,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948678,"byte_end":948685,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948690,"byte_end":948729,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948734,"byte_end":948778,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948783,"byte_end":948852,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ // Check this projection actually transforms the view cuboid into the double-unit cube.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948857,"byte_end":948948,"line_start":74,"line_end":74,"column_start":5,"column_end":96}},{"value":"/ // See https://www.nalgebra.org/projections/#orthographic-projection for more details.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948953,"byte_end":949043,"line_start":75,"line_end":75,"column_start":5,"column_end":95}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949048,"byte_end":949089,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949094,"byte_end":949138,"line_start":77,"line_end":77,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949143,"byte_end":949185,"line_start":78,"line_end":78,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949190,"byte_end":949235,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949240,"byte_end":949282,"line_start":80,"line_end":80,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949287,"byte_end":949332,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949337,"byte_end":949380,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949385,"byte_end":949431,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949436,"byte_end":949439,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949444,"byte_end":949524,"line_start":85,"line_end":85,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949529,"byte_end":949609,"line_start":86,"line_end":86,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949614,"byte_end":949694,"line_start":87,"line_end":87,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949699,"byte_end":949779,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949784,"byte_end":949864,"line_start":89,"line_end":89,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949869,"byte_end":949949,"line_start":90,"line_end":90,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":949954,"byte_end":950034,"line_start":91,"line_end":91,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950039,"byte_end":950119,"line_start":92,"line_end":92,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950124,"byte_end":950127,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // This also works with flipped axis. In other words, we allow that","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950132,"byte_end":950203,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ // `left > right`, `bottom > top`, and/or `znear > zfar`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950208,"byte_end":950269,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950274,"byte_end":950343,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950348,"byte_end":950351,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950356,"byte_end":950436,"line_start":98,"line_end":98,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950441,"byte_end":950521,"line_start":99,"line_end":99,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950526,"byte_end":950606,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950611,"byte_end":950691,"line_start":101,"line_end":101,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950696,"byte_end":950776,"line_start":102,"line_end":102,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950781,"byte_end":950861,"line_start":103,"line_end":103,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950866,"byte_end":950946,"line_start":104,"line_end":104,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":950951,"byte_end":951031,"line_start":105,"line_end":105,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951036,"byte_end":951043,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951048,"byte_end":951057,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6900},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":952159,"byte_end":952180,"line_start":137,"line_end":137,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Orthographic3<N>>::from_matrix_unchecked","value":"fn (matrix: Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D orthographic matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D orthographic matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951406,"byte_end":951477,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951482,"byte_end":951485,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents an orthographic","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951490,"byte_end":951579,"line_start":121,"line_end":121,"column_start":5,"column_end":94}},{"value":"/ projection.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951584,"byte_end":951599,"line_start":122,"line_end":122,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951604,"byte_end":951607,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951612,"byte_end":951625,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951630,"byte_end":951637,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951642,"byte_end":951695,"line_start":126,"line_end":126,"column_start":5,"column_end":58}},{"value":"/ let mat = Matrix4::new(","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951700,"byte_end":951727,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951732,"byte_end":951788,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951793,"byte_end":951850,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951855,"byte_end":951915,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951920,"byte_end":951967,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951972,"byte_end":951978,"line_start":132,"line_end":132,"column_start":5,"column_end":11}},{"value":"/ let proj = Orthographic3::from_matrix_unchecked(mat);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":951983,"byte_end":952040,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(proj, Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":952045,"byte_end":952121,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":952126,"byte_end":952133,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":952138,"byte_end":952147,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6901},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":952381,"byte_end":952389,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"from_fov","qualname":"<Orthographic3<N>>::from_fov","value":"fn (aspect: N, vfov: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.\n","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":952254,"byte_end":952355,"line_start":141,"line_end":141,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":952360,"byte_end":952369,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6902},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953766,"byte_end":953773,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Orthographic3<N>>::inverse","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":952997,"byte_end":953060,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953065,"byte_end":953068,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953073,"byte_end":953086,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953091,"byte_end":953098,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953103,"byte_end":953142,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953147,"byte_end":953200,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953205,"byte_end":953274,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953279,"byte_end":953308,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953313,"byte_end":953316,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953321,"byte_end":953390,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953395,"byte_end":953464,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953469,"byte_end":953472,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953477,"byte_end":953546,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953551,"byte_end":953580,"line_start":180,"line_end":180,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953585,"byte_end":953654,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953659,"byte_end":953728,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953733,"byte_end":953740,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":953745,"byte_end":953754,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6903},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954885,"byte_end":954899,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Orthographic3<N>>::to_homogeneous","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954286,"byte_end":954336,"line_start":203,"line_end":203,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954341,"byte_end":954344,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954349,"byte_end":954362,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954367,"byte_end":954374,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954379,"byte_end":954432,"line_start":207,"line_end":207,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954437,"byte_end":954506,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954511,"byte_end":954543,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954548,"byte_end":954604,"line_start":210,"line_end":210,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954609,"byte_end":954666,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954671,"byte_end":954731,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954736,"byte_end":954783,"line_start":213,"line_end":213,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954788,"byte_end":954794,"line_start":214,"line_end":214,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.to_homogeneous(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954799,"byte_end":954847,"line_start":215,"line_end":215,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954852,"byte_end":954859,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954864,"byte_end":954873,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6904},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955567,"byte_end":955576,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Orthographic3<N>>::as_matrix","value":"fn (&self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":954954,"byte_end":955022,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955027,"byte_end":955030,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955035,"byte_end":955048,"line_start":224,"line_end":224,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955053,"byte_end":955060,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955065,"byte_end":955118,"line_start":226,"line_end":226,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955123,"byte_end":955192,"line_start":227,"line_end":227,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955197,"byte_end":955229,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955234,"byte_end":955290,"line_start":229,"line_end":229,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955295,"byte_end":955352,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955357,"byte_end":955417,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955422,"byte_end":955469,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955474,"byte_end":955480,"line_start":233,"line_end":233,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(*proj.as_matrix(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955485,"byte_end":955529,"line_start":234,"line_end":234,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955534,"byte_end":955541,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955546,"byte_end":955555,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6905},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955967,"byte_end":955980,"line_start":250,"line_end":250,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Orthographic3<N>>::as_projective","value":"fn (&self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955633,"byte_end":955696,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955701,"byte_end":955704,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955709,"byte_end":955722,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955727,"byte_end":955734,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955739,"byte_end":955773,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955778,"byte_end":955847,"line_start":246,"line_end":246,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.as_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955852,"byte_end":955929,"line_start":247,"line_end":247,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955934,"byte_end":955941,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":955946,"byte_end":955955,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6906},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956379,"byte_end":956392,"line_start":263,"line_end":263,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Orthographic3<N>>::to_projective","value":"fn (&self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956060,"byte_end":956108,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956113,"byte_end":956116,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956121,"byte_end":956134,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956139,"byte_end":956146,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956151,"byte_end":956185,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956190,"byte_end":956259,"line_start":259,"line_end":259,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.to_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956264,"byte_end":956341,"line_start":260,"line_end":260,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956346,"byte_end":956353,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956358,"byte_end":956367,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6907},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957124,"byte_end":957134,"line_start":283,"line_end":283,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Orthographic3<N>>::into_inner","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956487,"byte_end":956535,"line_start":267,"line_end":267,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956540,"byte_end":956543,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956548,"byte_end":956561,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956566,"byte_end":956573,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956578,"byte_end":956617,"line_start":271,"line_end":271,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956622,"byte_end":956675,"line_start":272,"line_end":272,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956680,"byte_end":956749,"line_start":273,"line_end":273,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956754,"byte_end":956786,"line_start":274,"line_end":274,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956791,"byte_end":956847,"line_start":275,"line_end":275,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956852,"byte_end":956909,"line_start":276,"line_end":276,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956914,"byte_end":956974,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":956979,"byte_end":957026,"line_start":278,"line_end":278,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957031,"byte_end":957037,"line_start":279,"line_end":279,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.into_inner(), expected);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957042,"byte_end":957086,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957091,"byte_end":957098,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957103,"byte_end":957112,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6908},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957377,"byte_end":957383,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Orthographic3<N>>::unwrap","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Orthographic3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957188,"byte_end":957236,"line_start":287,"line_end":287,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Orthographic3::into_inner] instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957241,"byte_end":957297,"line_start":288,"line_end":288,"column_start":5,"column_end":61}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957302,"byte_end":957351,"line_start":289,"line_end":289,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957356,"byte_end":957365,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6909},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957904,"byte_end":957908,"line_start":307,"line_end":307,"column_start":12,"column_end":16},"name":"left","qualname":"<Orthographic3<N>>::left","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The left offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957437,"byte_end":957476,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957481,"byte_end":957484,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957489,"byte_end":957496,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957501,"byte_end":957540,"line_start":298,"line_end":298,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957545,"byte_end":957579,"line_start":299,"line_end":299,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957584,"byte_end":957653,"line_start":300,"line_end":300,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957658,"byte_end":957718,"line_start":301,"line_end":301,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957723,"byte_end":957726,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957731,"byte_end":957800,"line_start":303,"line_end":303,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957805,"byte_end":957866,"line_start":304,"line_end":304,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957871,"byte_end":957878,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957883,"byte_end":957892,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6910},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958468,"byte_end":958473,"line_start":323,"line_end":323,"column_start":12,"column_end":17},"name":"right","qualname":"<Orthographic3<N>>::right","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The right offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":957998,"byte_end":958038,"line_start":311,"line_end":311,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958043,"byte_end":958046,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958051,"byte_end":958058,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958063,"byte_end":958102,"line_start":314,"line_end":314,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958107,"byte_end":958141,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958146,"byte_end":958215,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958220,"byte_end":958282,"line_start":317,"line_end":317,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958287,"byte_end":958290,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958295,"byte_end":958364,"line_start":319,"line_end":319,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958369,"byte_end":958430,"line_start":320,"line_end":320,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958435,"byte_end":958442,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958447,"byte_end":958456,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6911},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959035,"byte_end":959041,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Orthographic3<N>>::bottom","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The bottom offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958562,"byte_end":958603,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958608,"byte_end":958611,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958616,"byte_end":958623,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958628,"byte_end":958667,"line_start":330,"line_end":330,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958672,"byte_end":958706,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958711,"byte_end":958780,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958785,"byte_end":958847,"line_start":333,"line_end":333,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958852,"byte_end":958855,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958860,"byte_end":958929,"line_start":335,"line_end":335,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":958934,"byte_end":958997,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959002,"byte_end":959009,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959014,"byte_end":959023,"line_start":338,"line_end":338,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6912},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959595,"byte_end":959598,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"top","qualname":"<Orthographic3<N>>::top","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The top offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959131,"byte_end":959169,"line_start":343,"line_end":343,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959174,"byte_end":959177,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959182,"byte_end":959189,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959194,"byte_end":959233,"line_start":346,"line_end":346,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959238,"byte_end":959272,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959277,"byte_end":959346,"line_start":348,"line_end":348,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959351,"byte_end":959411,"line_start":349,"line_end":349,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959416,"byte_end":959419,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959424,"byte_end":959493,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959498,"byte_end":959557,"line_start":352,"line_end":352,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959562,"byte_end":959569,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959574,"byte_end":959583,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6913},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960164,"byte_end":960169,"line_start":371,"line_end":371,"column_start":12,"column_end":17},"name":"znear","qualname":"<Orthographic3<N>>::znear","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The near plane offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959687,"byte_end":959732,"line_start":359,"line_end":359,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959737,"byte_end":959740,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959745,"byte_end":959752,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959757,"byte_end":959796,"line_start":362,"line_end":362,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959801,"byte_end":959835,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959840,"byte_end":959909,"line_start":364,"line_end":364,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959914,"byte_end":959975,"line_start":365,"line_end":365,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959980,"byte_end":959983,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":959988,"byte_end":960057,"line_start":367,"line_end":367,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960062,"byte_end":960126,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960131,"byte_end":960138,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960143,"byte_end":960152,"line_start":370,"line_end":370,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6914},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960732,"byte_end":960736,"line_start":387,"line_end":387,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Orthographic3<N>>::zfar","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The far plane offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960258,"byte_end":960302,"line_start":375,"line_end":375,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960307,"byte_end":960310,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960315,"byte_end":960322,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960327,"byte_end":960366,"line_start":378,"line_end":378,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960371,"byte_end":960405,"line_start":379,"line_end":379,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960410,"byte_end":960479,"line_start":380,"line_end":380,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960484,"byte_end":960547,"line_start":381,"line_end":381,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960552,"byte_end":960555,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960560,"byte_end":960629,"line_start":383,"line_end":383,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960634,"byte_end":960694,"line_start":384,"line_end":384,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960699,"byte_end":960706,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960711,"byte_end":960720,"line_start":386,"line_end":386,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6915},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962284,"byte_end":962297,"line_start":419,"line_end":419,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Orthographic3<N>>::project_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960901,"byte_end":960957,"line_start":392,"line_end":392,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960962,"byte_end":960965,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960970,"byte_end":960983,"line_start":394,"line_end":394,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":960988,"byte_end":960995,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961000,"byte_end":961039,"line_start":396,"line_end":396,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961044,"byte_end":961088,"line_start":397,"line_end":397,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961093,"byte_end":961162,"line_start":398,"line_end":398,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961167,"byte_end":961170,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961175,"byte_end":961216,"line_start":400,"line_end":400,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961221,"byte_end":961265,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961270,"byte_end":961312,"line_start":402,"line_end":402,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961317,"byte_end":961362,"line_start":403,"line_end":403,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961367,"byte_end":961409,"line_start":404,"line_end":404,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961414,"byte_end":961459,"line_start":405,"line_end":405,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961464,"byte_end":961507,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961512,"byte_end":961558,"line_start":407,"line_end":407,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961563,"byte_end":961566,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961571,"byte_end":961651,"line_start":409,"line_end":409,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961656,"byte_end":961736,"line_start":410,"line_end":410,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961741,"byte_end":961821,"line_start":411,"line_end":411,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961826,"byte_end":961906,"line_start":412,"line_end":412,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961911,"byte_end":961991,"line_start":413,"line_end":413,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":961996,"byte_end":962076,"line_start":414,"line_end":414,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962081,"byte_end":962161,"line_start":415,"line_end":415,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962166,"byte_end":962246,"line_start":416,"line_end":416,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962251,"byte_end":962258,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962263,"byte_end":962272,"line_start":418,"line_end":418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6916},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964135,"byte_end":964150,"line_start":454,"line_end":454,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Orthographic3<N>>::unproject_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the underlying matrix inverse.","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the underlying matrix inverse.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962563,"byte_end":962648,"line_start":427,"line_end":427,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962653,"byte_end":962656,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962661,"byte_end":962674,"line_start":429,"line_end":429,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962679,"byte_end":962686,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962691,"byte_end":962730,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962735,"byte_end":962779,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962784,"byte_end":962853,"line_start":433,"line_end":433,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962858,"byte_end":962861,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(-1.0, -1.0, -1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962866,"byte_end":962909,"line_start":435,"line_end":435,"column_start":5,"column_end":48}},{"value":"/ let p2 = Point3::new(-1.0, -1.0,  1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962914,"byte_end":962957,"line_start":436,"line_end":436,"column_start":5,"column_end":48}},{"value":"/ let p3 = Point3::new(-1.0,  1.0, -1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":962962,"byte_end":963005,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/ let p4 = Point3::new(-1.0,  1.0,  1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963010,"byte_end":963053,"line_start":438,"line_end":438,"column_start":5,"column_end":48}},{"value":"/ let p5 = Point3::new( 1.0, -1.0, -1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963058,"byte_end":963101,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/ let p6 = Point3::new( 1.0, -1.0,  1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963106,"byte_end":963149,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/ let p7 = Point3::new( 1.0,  1.0, -1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963154,"byte_end":963197,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new( 1.0,  1.0,  1.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963202,"byte_end":963245,"line_start":442,"line_end":442,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963250,"byte_end":963253,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p1), Point3::new(1.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963258,"byte_end":963356,"line_start":444,"line_end":444,"column_start":5,"column_end":103}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p2), Point3::new(1.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963361,"byte_end":963462,"line_start":445,"line_end":445,"column_start":5,"column_end":106}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p3), Point3::new(1.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963467,"byte_end":963566,"line_start":446,"line_end":446,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p4), Point3::new(1.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963571,"byte_end":963673,"line_start":447,"line_end":447,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p5), Point3::new(10.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963678,"byte_end":963777,"line_start":448,"line_end":448,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p6), Point3::new(10.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963782,"byte_end":963884,"line_start":449,"line_end":449,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p7), Point3::new(10.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963889,"byte_end":963989,"line_start":450,"line_end":450,"column_start":5,"column_end":105}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p8), Point3::new(10.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":963994,"byte_end":964097,"line_start":451,"line_end":451,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964102,"byte_end":964109,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964114,"byte_end":964123,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6917},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965238,"byte_end":965252,"line_start":482,"line_end":482,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Orthographic3<N>>::project_vector","value":"fn <SB> (&self, p: &Vector<N, U3, SB>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964497,"byte_end":964554,"line_start":463,"line_end":463,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964559,"byte_end":964562,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ Vectors are not affected by the translation part of the projection.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964567,"byte_end":964638,"line_start":465,"line_end":465,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964643,"byte_end":964646,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964651,"byte_end":964664,"line_start":467,"line_end":467,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964669,"byte_end":964676,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964681,"byte_end":964720,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Vector3};","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964725,"byte_end":964770,"line_start":470,"line_end":470,"column_start":5,"column_end":50}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964775,"byte_end":964844,"line_start":471,"line_end":471,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964849,"byte_end":964852,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::x();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964857,"byte_end":964883,"line_start":473,"line_end":473,"column_start":5,"column_end":31}},{"value":"/ let v2 = Vector3::y();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964888,"byte_end":964914,"line_start":474,"line_end":474,"column_start":5,"column_end":31}},{"value":"/ let v3 = Vector3::z();","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964919,"byte_end":964945,"line_start":475,"line_end":475,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964950,"byte_end":964953,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_vector(&v1), Vector3::x() * 2.0 / 9.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":964958,"byte_end":965034,"line_start":477,"line_end":477,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(proj.project_vector(&v2), Vector3::y() * 2.0 / 18.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965039,"byte_end":965116,"line_start":478,"line_end":478,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(proj.project_vector(&v3), Vector3::z() * -2.0 / 999.9);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965121,"byte_end":965200,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965205,"byte_end":965212,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965217,"byte_end":965226,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6919},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966034,"byte_end":966042,"line_start":505,"line_end":505,"column_start":12,"column_end":20},"name":"set_left","qualname":"<Orthographic3<N>>::set_left","value":"fn (&mut self, left: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the left offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965495,"byte_end":965539,"line_start":491,"line_end":491,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965544,"byte_end":965547,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965552,"byte_end":965559,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965564,"byte_end":965603,"line_start":494,"line_end":494,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965608,"byte_end":965642,"line_start":495,"line_end":495,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965647,"byte_end":965720,"line_start":496,"line_end":496,"column_start":5,"column_end":78}},{"value":"/ proj.set_left(2.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965725,"byte_end":965748,"line_start":497,"line_end":497,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.left(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965753,"byte_end":965813,"line_start":498,"line_end":498,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965818,"byte_end":965821,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a left offset greater than the current right offset.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965826,"byte_end":965901,"line_start":500,"line_end":500,"column_start":5,"column_end":80}},{"value":"/ proj.set_left(20.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965906,"byte_end":965930,"line_start":501,"line_end":501,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.left(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":965935,"byte_end":965996,"line_start":502,"line_end":502,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966001,"byte_end":966008,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966013,"byte_end":966022,"line_start":504,"line_end":504,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6920},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966702,"byte_end":966711,"line_start":524,"line_end":524,"column_start":12,"column_end":21},"name":"set_right","qualname":"<Orthographic3<N>>::set_right","value":"fn (&mut self, right: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the right offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966156,"byte_end":966201,"line_start":510,"line_end":510,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966206,"byte_end":966209,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966214,"byte_end":966221,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966226,"byte_end":966265,"line_start":513,"line_end":513,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966270,"byte_end":966304,"line_start":514,"line_end":514,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966309,"byte_end":966382,"line_start":515,"line_end":515,"column_start":5,"column_end":78}},{"value":"/ proj.set_right(15.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966387,"byte_end":966412,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966417,"byte_end":966479,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966484,"byte_end":966487,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a right offset smaller than the current left offset.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966492,"byte_end":966567,"line_start":519,"line_end":519,"column_start":5,"column_end":80}},{"value":"/ proj.set_right(-3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966572,"byte_end":966597,"line_start":520,"line_end":520,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966602,"byte_end":966664,"line_start":521,"line_end":521,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966669,"byte_end":966676,"line_start":522,"line_end":522,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966681,"byte_end":966690,"line_start":523,"line_end":523,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6921},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967373,"byte_end":967383,"line_start":543,"line_end":543,"column_start":12,"column_end":22},"name":"set_bottom","qualname":"<Orthographic3<N>>::set_bottom","value":"fn (&mut self, bottom: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the bottom offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966824,"byte_end":966870,"line_start":529,"line_end":529,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966875,"byte_end":966878,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966883,"byte_end":966890,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966895,"byte_end":966934,"line_start":532,"line_end":532,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966939,"byte_end":966973,"line_start":533,"line_end":533,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":966978,"byte_end":967051,"line_start":534,"line_end":534,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom(8.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967056,"byte_end":967081,"line_start":535,"line_end":535,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.bottom(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967086,"byte_end":967148,"line_start":536,"line_end":536,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967153,"byte_end":967156,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a bottom offset greater than the current top offset.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967161,"byte_end":967236,"line_start":538,"line_end":538,"column_start":5,"column_end":80}},{"value":"/ proj.set_bottom(50.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967241,"byte_end":967267,"line_start":539,"line_end":539,"column_start":5,"column_end":31}},{"value":"/ assert_relative_eq!(proj.bottom(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967272,"byte_end":967335,"line_start":540,"line_end":540,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967340,"byte_end":967347,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967352,"byte_end":967361,"line_start":542,"line_end":542,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6922},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968031,"byte_end":968038,"line_start":562,"line_end":562,"column_start":12,"column_end":19},"name":"set_top","qualname":"<Orthographic3<N>>::set_top","value":"fn (&mut self, top: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the top offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967495,"byte_end":967538,"line_start":548,"line_end":548,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967543,"byte_end":967546,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967551,"byte_end":967558,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967563,"byte_end":967602,"line_start":551,"line_end":551,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967607,"byte_end":967641,"line_start":552,"line_end":552,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967646,"byte_end":967719,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ proj.set_top(15.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967724,"byte_end":967747,"line_start":554,"line_end":554,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967752,"byte_end":967812,"line_start":555,"line_end":555,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967817,"byte_end":967820,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a top offset smaller than the current bottom offset.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967825,"byte_end":967900,"line_start":557,"line_end":557,"column_start":5,"column_end":80}},{"value":"/ proj.set_top(-3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967905,"byte_end":967928,"line_start":558,"line_end":558,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967933,"byte_end":967993,"line_start":559,"line_end":559,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":967998,"byte_end":968005,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968010,"byte_end":968019,"line_start":561,"line_end":561,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6923},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968692,"byte_end":968701,"line_start":581,"line_end":581,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Orthographic3<N>>::set_znear","value":"fn (&mut self, znear: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near plane offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968153,"byte_end":968203,"line_start":567,"line_end":567,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968208,"byte_end":968211,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968216,"byte_end":968223,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968228,"byte_end":968267,"line_start":570,"line_end":570,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968272,"byte_end":968306,"line_start":571,"line_end":571,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968311,"byte_end":968384,"line_start":572,"line_end":572,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear(8.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968389,"byte_end":968413,"line_start":573,"line_end":573,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.znear(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968418,"byte_end":968479,"line_start":574,"line_end":574,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968484,"byte_end":968487,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a znear greater than the current zfar.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968492,"byte_end":968553,"line_start":576,"line_end":576,"column_start":5,"column_end":66}},{"value":"/ proj.set_znear(5000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968558,"byte_end":968585,"line_start":577,"line_end":577,"column_start":5,"column_end":32}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968590,"byte_end":968654,"line_start":578,"line_end":578,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968659,"byte_end":968666,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968671,"byte_end":968680,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6924},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969346,"byte_end":969354,"line_start":600,"line_end":600,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Orthographic3<N>>::set_zfar","value":"fn (&mut self, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the far plane offset of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968814,"byte_end":968863,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968868,"byte_end":968871,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968876,"byte_end":968883,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968888,"byte_end":968927,"line_start":589,"line_end":589,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968932,"byte_end":968966,"line_start":590,"line_end":590,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":968971,"byte_end":969044,"line_start":591,"line_end":591,"column_start":5,"column_end":78}},{"value":"/ proj.set_zfar(15.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969049,"byte_end":969073,"line_start":592,"line_end":592,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969078,"byte_end":969139,"line_start":593,"line_end":593,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969144,"byte_end":969147,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a zfar smaller than the current znear.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969152,"byte_end":969213,"line_start":595,"line_end":595,"column_start":5,"column_end":66}},{"value":"/ proj.set_zfar(-3.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969218,"byte_end":969242,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969247,"byte_end":969308,"line_start":597,"line_end":597,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969313,"byte_end":969320,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969325,"byte_end":969334,"line_start":599,"line_end":599,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6925},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970148,"byte_end":970166,"line_start":621,"line_end":621,"column_start":12,"column_end":30},"name":"set_left_and_right","qualname":"<Orthographic3<N>>::set_left_and_right","value":"fn (&mut self, left: N, right: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `x` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `x` axis.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969468,"byte_end":969520,"line_start":605,"line_end":605,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969525,"byte_end":969528,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969533,"byte_end":969540,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969545,"byte_end":969584,"line_start":608,"line_end":608,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969589,"byte_end":969623,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969628,"byte_end":969701,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ proj.set_left_and_right(7.0, 70.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969706,"byte_end":969745,"line_start":611,"line_end":611,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969750,"byte_end":969810,"line_start":612,"line_end":612,"column_start":5,"column_end":65}},{"value":"/ assert_relative_eq!(proj.right(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969815,"byte_end":969877,"line_start":613,"line_end":613,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969882,"byte_end":969885,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `left > right`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969890,"byte_end":969934,"line_start":615,"line_end":615,"column_start":5,"column_end":49}},{"value":"/ proj.set_left_and_right(70.0, 7.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969939,"byte_end":969978,"line_start":616,"line_end":616,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":969983,"byte_end":970044,"line_start":617,"line_end":617,"column_start":5,"column_end":66}},{"value":"/ assert_relative_eq!(proj.right(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970049,"byte_end":970110,"line_start":618,"line_end":618,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970115,"byte_end":970122,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970127,"byte_end":970136,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6926},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971154,"byte_end":971172,"line_start":646,"line_end":646,"column_start":12,"column_end":30},"name":"set_bottom_and_top","qualname":"<Orthographic3<N>>::set_bottom_and_top","value":"fn (&mut self, bottom: N, top: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `y` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `y` axis.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970474,"byte_end":970526,"line_start":630,"line_end":630,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970531,"byte_end":970534,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970539,"byte_end":970546,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970551,"byte_end":970590,"line_start":633,"line_end":633,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970595,"byte_end":970629,"line_start":634,"line_end":634,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970634,"byte_end":970707,"line_start":635,"line_end":635,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom_and_top(7.0, 70.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970712,"byte_end":970751,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970756,"byte_end":970818,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.top(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970823,"byte_end":970883,"line_start":638,"line_end":638,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970888,"byte_end":970891,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `bottom > top`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970896,"byte_end":970940,"line_start":640,"line_end":640,"column_start":5,"column_end":49}},{"value":"/ proj.set_bottom_and_top(70.0, 7.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970945,"byte_end":970984,"line_start":641,"line_end":641,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":970989,"byte_end":971052,"line_start":642,"line_end":642,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(proj.top(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971057,"byte_end":971116,"line_start":643,"line_end":643,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971121,"byte_end":971128,"line_start":644,"line_end":644,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971133,"byte_end":971142,"line_start":645,"line_end":645,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6927},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":972177,"byte_end":972195,"line_start":671,"line_end":671,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Orthographic3<N>>::set_znear_and_zfar","value":"fn (&mut self, znear: N, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the near and far plane offsets of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near and far plane offsets of the view cuboid.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971480,"byte_end":971539,"line_start":655,"line_end":655,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971544,"byte_end":971547,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971552,"byte_end":971559,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971564,"byte_end":971603,"line_start":658,"line_end":658,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971608,"byte_end":971642,"line_start":659,"line_end":659,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971647,"byte_end":971720,"line_start":660,"line_end":660,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear_and_zfar(50.0, 5000.0);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971725,"byte_end":971767,"line_start":661,"line_end":661,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(proj.znear(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971772,"byte_end":971834,"line_start":662,"line_end":662,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.zfar(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971839,"byte_end":971902,"line_start":663,"line_end":663,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971907,"byte_end":971910,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `znear > zfar`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971915,"byte_end":971959,"line_start":665,"line_end":665,"column_start":5,"column_end":49}},{"value":"/ proj.set_znear_and_zfar(5000.0, 0.5);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":971964,"byte_end":972005,"line_start":666,"line_end":666,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":972010,"byte_end":972074,"line_start":667,"line_end":667,"column_start":5,"column_end":69}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.5, epsilon = 1.0e-6);","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":972079,"byte_end":972139,"line_start":668,"line_end":668,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":972144,"byte_end":972151,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":972156,"byte_end":972165,"line_start":670,"line_end":670,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6957},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":974276,"byte_end":974288,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"Perspective3","qualname":"::geometry::perspective::Perspective3","value":"Perspective3 {  }","parent":null,"children":[{"krate":0,"index":6959}],"decl_id":null,"docs":" A 3D perspective projection stored as an homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D perspective projection stored as an homogeneous 4x4 matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":974196,"byte_end":974264,"line_start":20,"line_end":20,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6973},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":975579,"byte_end":975582,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<Perspective3<N>>::new","value":"fn (aspect: N, fovy: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.\n","sig":null,"attributes":[{"value":"/ Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":975470,"byte_end":975567,"line_start":66,"line_end":66,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":6974},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":976435,"byte_end":976456,"line_start":95,"line_end":95,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Perspective3<N>>::from_matrix_unchecked","value":"fn (matrix: Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D perspective matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D perspective matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":976217,"byte_end":976287,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":976292,"byte_end":976295,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents an orthographic","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":976300,"byte_end":976389,"line_start":92,"line_end":92,"column_start":5,"column_end":94}},{"value":"/ projection.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":976394,"byte_end":976409,"line_start":93,"line_end":93,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":976414,"byte_end":976423,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6975},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":976619,"byte_end":976626,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Perspective3<N>>::inverse","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":976530,"byte_end":976593,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":976598,"byte_end":976607,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6976},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977151,"byte_end":977165,"line_start":120,"line_end":120,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Perspective3<N>>::to_homogeneous","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977075,"byte_end":977125,"line_start":118,"line_end":118,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977130,"byte_end":977139,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6977},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977328,"byte_end":977337,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Perspective3<N>>::as_matrix","value":"fn (&self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977234,"byte_end":977302,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977307,"byte_end":977316,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6978},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977483,"byte_end":977496,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Perspective3<N>>::as_projective","value":"fn (&self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977394,"byte_end":977457,"line_start":130,"line_end":130,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977462,"byte_end":977471,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6979},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977650,"byte_end":977663,"line_start":138,"line_end":138,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Perspective3<N>>::to_projective","value":"fn (&self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977576,"byte_end":977624,"line_start":136,"line_end":136,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977629,"byte_end":977638,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6980},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977832,"byte_end":977842,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Perspective3<N>>::into_inner","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977758,"byte_end":977806,"line_start":142,"line_end":142,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977811,"byte_end":977820,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6981},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978084,"byte_end":978090,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Perspective3<N>>::unwrap","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Perspective3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977896,"byte_end":977944,"line_start":148,"line_end":148,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Perspective3::into_inner] instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":977949,"byte_end":978004,"line_start":149,"line_end":149,"column_start":5,"column_end":60}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978009,"byte_end":978058,"line_start":150,"line_end":150,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978063,"byte_end":978072,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6982},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978233,"byte_end":978239,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"aspect","qualname":"<Perspective3<N>>::aspect","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the `width / height` aspect ratio of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the `width / height` aspect ratio of the view frustum.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978144,"byte_end":978207,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978212,"byte_end":978221,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6983},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978390,"byte_end":978394,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"fovy","qualname":"<Perspective3<N>>::fovy","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the y field of view of the view frustum.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978315,"byte_end":978364,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978369,"byte_end":978378,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6984},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978567,"byte_end":978572,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"znear","qualname":"<Perspective3<N>>::znear","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the near plane offset of the view frustum.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978490,"byte_end":978541,"line_start":168,"line_end":168,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978546,"byte_end":978555,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6985},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978870,"byte_end":978874,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Perspective3<N>>::zfar","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the far plane offset of the view frustum.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978794,"byte_end":978844,"line_start":176,"line_end":176,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":978849,"byte_end":978858,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6986},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":979302,"byte_end":979315,"line_start":189,"line_end":189,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Perspective3<N>>::project_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":979220,"byte_end":979276,"line_start":187,"line_end":187,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":979281,"byte_end":979290,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6987},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":979733,"byte_end":979748,"line_start":200,"line_end":200,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Perspective3<N>>::unproject_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the matrix inverse.\n","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the matrix inverse.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":979633,"byte_end":979707,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":979712,"byte_end":979721,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6988},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":980207,"byte_end":980221,"line_start":213,"line_end":213,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Perspective3<N>>::project_vector","value":"fn <SB> (&self, p: &Vector<N, U3, SB>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":980124,"byte_end":980181,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":980186,"byte_end":980195,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6990},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":980666,"byte_end":980676,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"set_aspect","qualname":"<Perspective3<N>>::set_aspect","value":"fn (&mut self, aspect: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new `width / height` aspect ratio of the view\n frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new `width / height` aspect ratio of the view","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":980535,"byte_end":980623,"line_start":223,"line_end":223,"column_start":5,"column_end":93}},{"value":"/ frustum.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":980628,"byte_end":980640,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":980645,"byte_end":980654,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6991},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":980997,"byte_end":981005,"line_start":236,"line_end":236,"column_start":12,"column_end":20},"name":"set_fovy","qualname":"<Perspective3<N>>::set_fovy","value":"fn (&mut self, fovy: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective with a new y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective with a new y field of view of the view frustum.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":980895,"byte_end":980971,"line_start":234,"line_end":234,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":980976,"byte_end":980985,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6992},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":981355,"byte_end":981364,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Perspective3<N>>::set_znear","value":"fn (&mut self, znear: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new near plane offset of the view frustum.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":981244,"byte_end":981329,"line_start":242,"line_end":242,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":981334,"byte_end":981343,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6993},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":981587,"byte_end":981595,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Perspective3<N>>::set_zfar","value":"fn (&mut self, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new far plane offset of the view frustum.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":981477,"byte_end":981561,"line_start":249,"line_end":249,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":981566,"byte_end":981575,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6994},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":981827,"byte_end":981845,"line_start":258,"line_end":258,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Perspective3<N>>::set_znear_and_zfar","value":"fn (&mut self, znear: N, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with new near and far plane offsets of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with new near and far plane offsets of the view frustum.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":981709,"byte_end":981801,"line_start":256,"line_end":256,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":981806,"byte_end":981815,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":7022},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linalg","qualname":"::linalg","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","parent":null,"children":[{"krate":0,"index":7023},{"krate":0,"index":7043},{"krate":0,"index":7091},{"krate":0,"index":7135},{"krate":0,"index":7149},{"krate":0,"index":7204},{"krate":0,"index":7242},{"krate":0,"index":7277},{"krate":0,"index":7308},{"krate":0,"index":7334},{"krate":0,"index":7411},{"krate":0,"index":7460},{"krate":0,"index":7529},{"krate":0,"index":7592},{"krate":0,"index":7691},{"krate":0,"index":7758},{"krate":0,"index":7800},{"krate":0,"index":7835},{"krate":0,"index":7865},{"krate":0,"index":7866},{"krate":0,"index":7867},{"krate":0,"index":7868},{"krate":0,"index":7869},{"krate":0,"index":7870},{"krate":0,"index":7871},{"krate":0,"index":7872},{"krate":0,"index":7873},{"krate":0,"index":7874},{"krate":0,"index":7875},{"krate":0,"index":7876}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Factorization of real matrices.\n","sig":null,"attributes":[{"value":"! [Reexported at the root of this crate.] Factorization of real matrices.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":982989,"byte_end":983064,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":7023},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/balancing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"balancing","qualname":"::linalg::balancing","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/balancing.rs","parent":null,"children":[{"krate":0,"index":7024},{"krate":0,"index":7025},{"krate":0,"index":7028},{"krate":0,"index":7029},{"krate":0,"index":7032},{"krate":0,"index":7033},{"krate":0,"index":7037},{"krate":0,"index":7040}],"decl_id":null,"docs":" Functions for balancing a matrix.\n","sig":null,"attributes":[{"value":"! Functions for balancing a matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/balancing.rs","byte_start":983837,"byte_end":983874,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":7037},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/balancing.rs","byte_start":984321,"byte_end":984344,"line_start":15,"line_end":15,"column_start":8,"column_end":31},"name":"balance_parlett_reinsch","qualname":"::linalg::balancing::balance_parlett_reinsch","value":"fn <N, D> (m: &mut MatrixN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns\n the corresponding diagonal transformation.","sig":null,"attributes":[{"value":"/ Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/balancing.rs","byte_start":984108,"byte_end":984218,"line_start":11,"line_end":11,"column_start":1,"column_end":111}},{"value":"/ the corresponding diagonal transformation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/balancing.rs","byte_start":984219,"byte_end":984265,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/balancing.rs","byte_start":984266,"byte_end":984269,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See https://arxiv.org/pdf/1401.5766.pdf","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/balancing.rs","byte_start":984270,"byte_end":984313,"line_start":14,"line_end":14,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":7040},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/balancing.rs","byte_start":985743,"byte_end":985752,"line_start":67,"line_end":67,"column_start":8,"column_end":17},"name":"unbalance","qualname":"::linalg::balancing::unbalance","value":"fn <N, D> (m: &mut MatrixN<N, D>, d: &VectorN<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.\n","sig":null,"attributes":[{"value":"/ Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/balancing.rs","byte_start":985648,"byte_end":985735,"line_start":66,"line_end":66,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":20536},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":987713,"byte_end":987723,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"Bidiagonal","qualname":"::linalg::bidiagonal::Bidiagonal","value":"Bidiagonal {  }","parent":null,"children":[{"krate":0,"index":20540},{"krate":0,"index":20541},{"krate":0,"index":20542},{"krate":0,"index":20543}],"decl_id":null,"docs":" The bidiagonalization of a general matrix.\n","sig":null,"attributes":[{"value":"/ The bidiagonalization of a general matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":986601,"byte_end":986647,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":7071},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":989132,"byte_end":989135,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Bidiagonal<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Bidiagonal decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Bidiagonal decomposition using householder reflections.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":989048,"byte_end":989120,"line_start":77,"line_end":77,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7072},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":991569,"byte_end":991586,"line_start":153,"line_end":153,"column_start":12,"column_end":29},"name":"is_upper_diagonal","qualname":"<Bidiagonal<N, R, C>>::is_upper_diagonal","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether this decomposition contains an upper-diagonal matrix.\n","sig":null,"attributes":[{"value":"/ Indicates whether this decomposition contains an upper-diagonal matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":991468,"byte_end":991543,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":991548,"byte_end":991557,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7074},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":991977,"byte_end":991983,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Bidiagonal<N, R, C>>::unpack","value":"fn (self) -> (MatrixMN<N, R, DimMinimum<R, C>>, MatrixN<N, DimMinimum<R, C>>,\n MatrixMN<N, DimMinimum<R, C>, C>)","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":991807,"byte_end":991882,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":991887,"byte_end":991890,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The decomposed matrix `M` is equal to `U * D * V^t`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":991895,"byte_end":991951,"line_start":168,"line_end":168,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":991956,"byte_end":991965,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7075},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":992529,"byte_end":992530,"line_start":188,"line_end":188,"column_start":12,"column_end":13},"name":"d","qualname":"<Bidiagonal<N, R, C>>::d","value":"fn (&self) -> MatrixN<N, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":992431,"byte_end":992503,"line_start":186,"line_end":186,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":992508,"byte_end":992517,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7078},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":993323,"byte_end":993324,"line_start":207,"line_end":207,"column_start":12,"column_end":13},"name":"u","qualname":"<Bidiagonal<N, R, C>>::u","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `U` of this `U * D * V` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `U` of this `U * D * V` decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":993114,"byte_end":993187,"line_start":204,"line_end":204,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":7079},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":994314,"byte_end":994317,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"v_t","qualname":"<Bidiagonal<N, R, C>>::v_t","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":994225,"byte_end":994302,"line_start":234,"line_end":234,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":7080},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":995651,"byte_end":995659,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<Bidiagonal<N, R, C>>::diagonal","value":"fn (&self) -> VectorN<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal part of this decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":995591,"byte_end":995639,"line_start":267,"line_end":267,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7082},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":995904,"byte_end":995916,"line_start":274,"line_end":274,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<Bidiagonal<N, R, C>>::off_diagonal","value":"fn (&self) -> VectorN<N::RealField, DimDiff<DimMinimum<R, C>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The off-diagonal part of this decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":995840,"byte_end":995892,"line_start":273,"line_end":273,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7084},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":996153,"byte_end":996164,"line_start":280,"line_end":280,"column_start":12,"column_end":23},"name":"uv_internal","qualname":"<Bidiagonal<N, R, C>>::uv_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7090},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":999633,"byte_end":999646,"line_start":368,"line_end":368,"column_start":12,"column_end":25},"name":"bidiagonalize","qualname":"<Matrix<N, R, C, S>>::bidiagonalize","value":"fn (self) -> Bidiagonal<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the bidiagonalization using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the bidiagonalization using householder reflections.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":999556,"byte_end":999621,"line_start":367,"line_end":367,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":20554},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1000614,"byte_end":1000622,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Cholesky","qualname":"::linalg::cholesky::Cholesky","value":"Cholesky {  }","parent":null,"children":[{"krate":0,"index":20557}],"decl_id":null,"docs":" The Cholesky decomposition of a symmetric-definite-positive matrix.\n","sig":null,"attributes":[{"value":"/ The Cholesky decomposition of a symmetric-definite-positive matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1000099,"byte_end":1000170,"line_start":12,"line_end":12,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7116},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1001206,"byte_end":1001209,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Cholesky<N, D>>::new","value":"fn (mut matrix: MatrixN<N, D>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of `matrix`.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of `matrix`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1000958,"byte_end":1001021,"line_start":44,"line_end":44,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1001026,"byte_end":1001029,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1001034,"byte_end":1001126,"line_start":46,"line_end":46,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1001131,"byte_end":1001194,"line_start":47,"line_end":47,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7117},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1002571,"byte_end":1002577,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Cholesky<N, D>>::unpack","value":"fn (mut self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n upper-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1002421,"byte_end":1002510,"line_start":85,"line_end":85,"column_start":5,"column_end":94}},{"value":"/ upper-triangular part filled with zeros.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1002515,"byte_end":1002559,"line_start":86,"line_end":86,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7118},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1002965,"byte_end":1002977,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"unpack_dirty","qualname":"<Cholesky<N, D>>::unpack_dirty","value":"fn (self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1002689,"byte_end":1002781,"line_start":92,"line_end":92,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1002786,"byte_end":1002823,"line_start":93,"line_end":93,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1002828,"byte_end":1002831,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The values of the strict upper-triangular part are garbage and should be ignored by further","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1002836,"byte_end":1002931,"line_start":95,"line_end":95,"column_start":5,"column_end":100}},{"value":"/ computations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1002936,"byte_end":1002953,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":7119},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003182,"byte_end":1003183,"line_start":103,"line_end":103,"column_start":12,"column_end":13},"name":"l","qualname":"<Cholesky<N, D>>::l","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n uppen-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003032,"byte_end":1003121,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/ uppen-triangular part filled with zeros.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003126,"byte_end":1003170,"line_start":102,"line_end":102,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7120},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003582,"byte_end":1003589,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"l_dirty","qualname":"<Cholesky<N, D>>::l_dirty","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003256,"byte_end":1003348,"line_start":107,"line_end":107,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003353,"byte_end":1003390,"line_start":108,"line_end":108,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003395,"byte_end":1003398,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This is an allocation-less version of `self.l()`. The values of the strict upper-triangular","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003403,"byte_end":1003498,"line_start":110,"line_end":110,"column_start":5,"column_end":100}},{"value":"/ part are garbage and should be ignored by further computations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003503,"byte_end":1003570,"line_start":111,"line_end":111,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7121},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003799,"byte_end":1003808,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<Cholesky<N, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003647,"byte_end":1003742,"line_start":116,"line_end":116,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003747,"byte_end":1003750,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The result is stored on `b`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1003755,"byte_end":1003787,"line_start":118,"line_end":118,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7125},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1004230,"byte_end":1004235,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"solve","qualname":"<Cholesky<N, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and\n `x` the unknown.\n","sig":null,"attributes":[{"value":"/ Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1004098,"byte_end":1004193,"line_start":128,"line_end":128,"column_start":5,"column_end":100}},{"value":"/ `x` the unknown.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1004198,"byte_end":1004218,"line_start":129,"line_end":129,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":7129},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1004622,"byte_end":1004629,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Cholesky<N, D>>::inverse","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1004560,"byte_end":1004610,"line_start":141,"line_end":141,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7134},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1005208,"byte_end":1005216,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"cholesky","qualname":"<SquareMatrix<N, D, S>>::cholesky","value":"fn (self) -> Option<Cholesky<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of this matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1004957,"byte_end":1005023,"line_start":154,"line_end":154,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1005028,"byte_end":1005031,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1005036,"byte_end":1005128,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1005133,"byte_end":1005196,"line_start":157,"line_end":157,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7148},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/determinant.rs","byte_start":1005770,"byte_end":1005781,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"determinant","qualname":"<SquareMatrix<N, D, S>>::determinant","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix determinant.","sig":null,"attributes":[{"value":"/ Computes the matrix determinant.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/determinant.rs","byte_start":1005618,"byte_end":1005654,"line_start":11,"line_end":11,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/determinant.rs","byte_start":1005659,"byte_end":1005662,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ If the matrix has a dimension larger than 3, an LU decomposition is used.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/determinant.rs","byte_start":1005667,"byte_end":1005744,"line_start":13,"line_end":13,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/determinant.rs","byte_start":1005749,"byte_end":1005758,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20566},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1008632,"byte_end":1008641,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"FullPivLU","qualname":"::linalg::full_piv_lu::FullPivLU","value":"FullPivLU {  }","parent":null,"children":[{"krate":0,"index":20570},{"krate":0,"index":20571},{"krate":0,"index":20572}],"decl_id":null,"docs":" LU decomposition with full row and column pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with full row and column pivoting.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1007848,"byte_end":1007903,"line_start":14,"line_end":14,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7177},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1009465,"byte_end":1009468,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<FullPivLU<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1009300,"byte_end":1009365,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1009370,"byte_end":1009373,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1009378,"byte_end":1009453,"line_start":55,"line_end":55,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7178},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1010823,"byte_end":1010834,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<FullPivLU<N, R, C>>::lu_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7179},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1010974,"byte_end":1010975,"line_start":108,"line_end":108,"column_start":12,"column_end":13},"name":"l","qualname":"<FullPivLU<N, R, C>>::l","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1010894,"byte_end":1010948,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1010953,"byte_end":1010962,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7180},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1011394,"byte_end":1011395,"line_start":119,"line_end":119,"column_start":12,"column_end":13},"name":"u","qualname":"<FullPivLU<N, R, C>>::u","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1011314,"byte_end":1011368,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1011373,"byte_end":1011382,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7181},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1011705,"byte_end":1011706,"line_start":127,"line_end":127,"column_start":12,"column_end":13},"name":"p","qualname":"<FullPivLU<N, R, C>>::p","value":"fn (&self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1011632,"byte_end":1011679,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1011684,"byte_end":1011693,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7182},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1011861,"byte_end":1011862,"line_start":133,"line_end":133,"column_start":12,"column_end":13},"name":"q","qualname":"<FullPivLU<N, R, C>>::q","value":"fn (&self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The column permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The column permutations of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1011785,"byte_end":1011835,"line_start":131,"line_end":131,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1011840,"byte_end":1011849,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7183},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1012062,"byte_end":1012068,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"unpack","qualname":"<FullPivLU<N, R, C>>::unpack","value":"fn (self) -> (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n MatrixMN<N, DimMinimum<R, C>, C>, PermutationSequence<DimMinimum<R, C>>)","parent":null,"children":[],"decl_id":null,"docs":" The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.\n","sig":null,"attributes":[{"value":"/ The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1011941,"byte_end":1012036,"line_start":137,"line_end":137,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1012041,"byte_end":1012050,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7187},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1012882,"byte_end":1012887,"line_start":165,"line_end":165,"column_start":12,"column_end":17},"name":"solve","qualname":"<FullPivLU<N, D, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1012708,"byte_end":1012795,"line_start":162,"line_end":162,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1012800,"byte_end":1012803,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1012808,"byte_end":1012870,"line_start":164,"line_end":164,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7191},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1013540,"byte_end":1013549,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<FullPivLU<N, D, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1013301,"byte_end":1013388,"line_start":182,"line_end":182,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1013393,"byte_end":1013396,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1013401,"byte_end":1013491,"line_start":184,"line_end":184,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1013496,"byte_end":1013528,"line_start":185,"line_end":185,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7195},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1014448,"byte_end":1014459,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<FullPivLU<N, D, D>>::try_inverse","value":"fn (&self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1014311,"byte_end":1014361,"line_start":213,"line_end":213,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1014366,"byte_end":1014369,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1014374,"byte_end":1014436,"line_start":215,"line_end":215,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7196},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1014938,"byte_end":1014951,"line_start":233,"line_end":233,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<FullPivLU<N, D, D>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1014873,"byte_end":1014926,"line_start":232,"line_end":232,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7197},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1015272,"byte_end":1015283,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"determinant","qualname":"<FullPivLU<N, D, D>>::determinant","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1015206,"byte_end":1015260,"line_start":243,"line_end":243,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7203},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1016148,"byte_end":1016159,"line_start":270,"line_end":270,"column_start":12,"column_end":23},"name":"full_piv_lu","qualname":"<Matrix<N, R, C, S>>::full_piv_lu","value":"fn (self) -> FullPivLU<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1015983,"byte_end":1016048,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1016053,"byte_end":1016056,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1016061,"byte_end":1016136,"line_start":269,"line_end":269,"column_start":5,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":7204},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"givens","qualname":"::linalg::givens","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","parent":null,"children":[{"krate":0,"index":7205},{"krate":0,"index":7206},{"krate":0,"index":7209},{"krate":0,"index":7212},{"krate":0,"index":7215},{"krate":0,"index":7218},{"krate":0,"index":20583},{"krate":0,"index":20592},{"krate":0,"index":20589},{"krate":0,"index":20587},{"krate":0,"index":7221}],"decl_id":null,"docs":" Construction of givens rotations.\n","sig":null,"attributes":[{"value":"! Construction of givens rotations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1016241,"byte_end":1016278,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":20583},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1016580,"byte_end":1016594,"line_start":14,"line_end":14,"column_start":12,"column_end":26},"name":"GivensRotation","qualname":"::linalg::givens::GivensRotation","value":"GivensRotation {  }","parent":null,"children":[{"krate":0,"index":20585},{"krate":0,"index":20586}],"decl_id":null,"docs":" A Givens rotation.\n","sig":null,"attributes":[{"value":"/ A Givens rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1016516,"byte_end":1016538,"line_start":12,"line_end":12,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":7223},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1016781,"byte_end":1016789,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"identity","qualname":"<GivensRotation<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The Givents rotation that does nothing.\n","sig":null,"attributes":[{"value":"/ The Givents rotation that does nothing.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1016726,"byte_end":1016769,"line_start":21,"line_end":21,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7224},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1017097,"byte_end":1017110,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<GivensRotation<N>>::new_unchecked","value":"fn (c: N::RealField, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its components.","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its components.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1016899,"byte_end":1016953,"line_start":29,"line_end":29,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1016958,"byte_end":1016961,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The components are copies as-is. It is not checked whether they describe","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1016966,"byte_end":1017042,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ an actually valid Givens rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1017047,"byte_end":1017085,"line_start":32,"line_end":32,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7225},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1017290,"byte_end":1017293,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<GivensRotation<N>>::new","value":"fn (c: N, s: N) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its non-normalized cosine an sine components.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1017194,"byte_end":1017278,"line_start":39,"line_end":39,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7226},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1017487,"byte_end":1017494,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"try_new","qualname":"<GivensRotation<N>>::try_new","value":"fn (c: N, s: N, eps: N::RealField) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation form its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation form its non-normalized cosine an sine components.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1017391,"byte_end":1017475,"line_start":44,"line_end":44,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7227},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1018193,"byte_end":1018201,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"cancel_y","qualname":"<GivensRotation<N>>::cancel_y","value":"fn <S> (v: &Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `y` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `y` component of `R * v` is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1017881,"byte_end":1017967,"line_start":59,"line_end":59,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1017972,"byte_end":1017975,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.y == 0`). Otherwise, this returns the norm","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1017980,"byte_end":1018078,"line_start":61,"line_end":61,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ |v|, 0.0 ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1018083,"byte_end":1018181,"line_start":62,"line_end":62,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":7229},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1018939,"byte_end":1018947,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"cancel_x","qualname":"<GivensRotation<N>>::cancel_x","value":"fn <S> (v: &Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `x` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `x` component of `R * v` is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1018627,"byte_end":1018713,"line_start":76,"line_end":76,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1018718,"byte_end":1018721,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.x == 0`). Otherwise, this returns the norm","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1018726,"byte_end":1018824,"line_start":78,"line_end":78,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ 0.0, |v| ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1018829,"byte_end":1018927,"line_start":79,"line_end":79,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":7231},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1019434,"byte_end":1019435,"line_start":94,"line_end":94,"column_start":12,"column_end":13},"name":"c","qualname":"<GivensRotation<N>>::c","value":"fn (&self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The cos part of this roration.\n","sig":null,"attributes":[{"value":"/ The cos part of this roration.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1019388,"byte_end":1019422,"line_start":93,"line_end":93,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7232},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1019533,"byte_end":1019534,"line_start":99,"line_end":99,"column_start":12,"column_end":13},"name":"s","qualname":"<GivensRotation<N>>::s","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sin part of this roration.\n","sig":null,"attributes":[{"value":"/ The sin part of this roration.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1019487,"byte_end":1019521,"line_start":98,"line_end":98,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7233},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1019627,"byte_end":1019634,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"inverse","qualname":"<GivensRotation<N>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The inverse of this givens rotation.\n","sig":null,"attributes":[{"value":"/ The inverse of this givens rotation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1019575,"byte_end":1019615,"line_start":103,"line_end":103,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":7234},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1019774,"byte_end":1019780,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"rotate","qualname":"<GivensRotation<N>>::rotate","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `rhs = self * rhs` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `rhs = self * rhs` in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1019702,"byte_end":1019762,"line_start":108,"line_end":108,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7238},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1020560,"byte_end":1020571,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"rotate_rows","qualname":"<GivensRotation<N>>::rotate_rows","value":"fn <R2, C2, S2> (&self, lhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `lhs = lhs * self` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `lhs = lhs * self` in-place.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1020488,"byte_end":1020548,"line_start":134,"line_end":134,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":20595},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1022403,"byte_end":1022413,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"Hessenberg","qualname":"::linalg::hessenberg::Hessenberg","value":"Hessenberg {  }","parent":null,"children":[{"krate":0,"index":20598},{"krate":0,"index":20599}],"decl_id":null,"docs":" Hessenberg decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Hessenberg decomposition of a general matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1021685,"byte_end":1021734,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7263},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1023036,"byte_end":1023039,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Hessenberg<N, D>>::new","value":"fn (hess: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1022952,"byte_end":1023024,"line_start":50,"line_end":50,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7264},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1023440,"byte_end":1023458,"line_start":60,"line_end":60,"column_start":12,"column_end":30},"name":"new_with_workspace","qualname":"<Hessenberg<N, D>>::new_with_workspace","value":"fn (mut hess: MatrixN<N, D>, work: &mut VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1023228,"byte_end":1023300,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1023305,"byte_end":1023308,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The workspace containing `D` elements must be provided but its content does not have to be","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1023313,"byte_end":1023407,"line_start":58,"line_end":58,"column_start":5,"column_end":99}},{"value":"/ initialized.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1023412,"byte_end":1023428,"line_start":59,"line_end":59,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":7265},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1024489,"byte_end":1024495,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Hessenberg<N, D>>::unpack","value":"fn (self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the\n hessenberg matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1024349,"byte_end":1024436,"line_start":91,"line_end":91,"column_start":5,"column_end":92}},{"value":"/ hessenberg matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1024441,"byte_end":1024463,"line_start":92,"line_end":92,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1024468,"byte_end":1024477,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7266},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1024703,"byte_end":1024711,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"unpack_h","qualname":"<Hessenberg<N, D>>::unpack_h","value":"fn (mut self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1024605,"byte_end":1024677,"line_start":100,"line_end":100,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1024682,"byte_end":1024691,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7268},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1025252,"byte_end":1025253,"line_start":116,"line_end":116,"column_start":12,"column_end":13},"name":"h","qualname":"<Hessenberg<N, D>>::h","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1025066,"byte_end":1025138,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1025143,"byte_end":1025146,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This is less efficient than `.unpack_h()` as it allocates a new matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1025151,"byte_end":1025226,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1025231,"byte_end":1025240,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7270},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1025642,"byte_end":1025643,"line_start":126,"line_end":126,"column_start":12,"column_end":13},"name":"q","qualname":"<Hessenberg<N, D>>::q","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1025569,"byte_end":1025630,"line_start":125,"line_end":125,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7271},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1025776,"byte_end":1025789,"line_start":131,"line_end":131,"column_start":12,"column_end":25},"name":"hess_internal","qualname":"<Hessenberg<N, D>>::hess_internal","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7276},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1026122,"byte_end":1026132,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"hessenberg","qualname":"<SquareMatrix<N, D, S>>::hessenberg","value":"fn (self) -> Hessenberg<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition of this matrix using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition of this matrix using householder reflections.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1026023,"byte_end":1026110,"line_start":139,"line_end":139,"column_start":5,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":7277},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"householder","qualname":"::linalg::householder","value":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","parent":null,"children":[{"krate":0,"index":7278},{"krate":0,"index":7279},{"krate":0,"index":7280},{"krate":0,"index":7281},{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7292},{"krate":0,"index":7293},{"krate":0,"index":7297},{"krate":0,"index":7301},{"krate":0,"index":7305}],"decl_id":null,"docs":" Construction of householder elementary reflections.\n","sig":null,"attributes":[{"value":"! Construction of householder elementary reflections.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1026213,"byte_end":1026268,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":7293},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1026872,"byte_end":1026891,"line_start":19,"line_end":19,"column_start":8,"column_end":27},"name":"reflection_axis_mut","qualname":"::linalg::householder::reflection_axis_mut","value":"fn <N, D, S> (column: &mut Vector<N, D, S>) -> (N, bool)","parent":null,"children":[],"decl_id":null,"docs":" Replaces `column` by the axis of the householder reflection that transforms `column` into\n `(+/-|column|, 0, ..., 0)`.","sig":null,"attributes":[{"value":"/ Replaces `column` by the axis of the householder reflection that transforms `column` into","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1026535,"byte_end":1026628,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ `(+/-|column|, 0, ..., 0)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1026629,"byte_end":1026660,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1026661,"byte_end":1026664,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The unit-length axis is output to `column`. Returns what would be the first component of","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1026665,"byte_end":1026757,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ `column` after reflection and `false` if no reflection was necessary.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1026758,"byte_end":1026831,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1026847,"byte_end":1026864,"line_start":18,"line_end":18,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":7297},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1027773,"byte_end":1027795,"line_start":47,"line_end":47,"column_start":8,"column_end":30},"name":"clear_column_unchecked","qualname":"::linalg::householder::clear_column_unchecked","value":"fn <N, R, C> (matrix: &mut MatrixMN<N, R, C>, diag_elt: &mut N, icol: usize, shift: usize, bilateral: Option<&mut VectorN<N, R>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th\n subdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1027624,"byte_end":1027725,"line_start":44,"line_end":44,"column_start":1,"column_end":102}},{"value":"/ subdiagonal element.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1027726,"byte_end":1027750,"line_start":45,"line_end":45,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":7301},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1028789,"byte_end":1028808,"line_start":75,"line_end":75,"column_start":8,"column_end":27},"name":"clear_row_unchecked","qualname":"::linalg::householder::clear_row_unchecked","value":"fn <N, R, C> (matrix: &mut MatrixMN<N, R, C>, diag_elt: &mut N, axis_packed: &mut VectorN<N, C>, work: &mut VectorN<N, R>, irow: usize, shift: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th\n superdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1028641,"byte_end":1028739,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ superdiagonal element.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1028740,"byte_end":1028766,"line_start":73,"line_end":73,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":7305},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1030137,"byte_end":1030147,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"assemble_q","qualname":"::linalg::householder::assemble_q","value":"fn <N, D> (m: &MatrixN<N, D>, signs: &[N]) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal transformation described by the elementary reflector axii stored on\n the lower-diagonal element of the given matrix.\n matrices.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal transformation described by the elementary reflector axii stored on","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1029953,"byte_end":1030048,"line_start":107,"line_end":107,"column_start":1,"column_end":96}},{"value":"/ the lower-diagonal element of the given matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1030049,"byte_end":1030100,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/ matrices.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/householder.rs","byte_start":1030101,"byte_end":1030114,"line_start":109,"line_end":109,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7324},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/inverse.rs","byte_start":1031218,"byte_end":1031229,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<SquareMatrix<N, D, S>>::try_inverse","value":"fn (self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/inverse.rs","byte_start":1031157,"byte_end":1031192,"line_start":11,"line_end":11,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/inverse.rs","byte_start":1031197,"byte_end":1031206,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7329},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/inverse.rs","byte_start":1031682,"byte_end":1031697,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<SquareMatrix<N, D, S>>::try_inverse_mut","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if\n inversion fails.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/inverse.rs","byte_start":1031540,"byte_end":1031631,"line_start":25,"line_end":25,"column_start":5,"column_end":96}},{"value":"/ inversion fails.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/inverse.rs","byte_start":1031636,"byte_end":1031656,"line_start":26,"line_end":26,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/inverse.rs","byte_start":1031661,"byte_end":1031670,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20608},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1039988,"byte_end":1039990,"line_start":35,"line_end":35,"column_start":12,"column_end":14},"name":"LU","qualname":"::linalg::lu::LU","value":"LU {  }","parent":null,"children":[{"krate":0,"index":20612},{"krate":0,"index":20613}],"decl_id":null,"docs":" LU decomposition with partial (row) pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with partial (row) pivoting.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1039210,"byte_end":1039259,"line_start":14,"line_end":14,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":7363},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1040621,"byte_end":1040634,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"try_invert_to","qualname":"::linalg::lu::try_invert_to","value":"fn <N, D, S> (mut matrix: MatrixN<N, D>, out: &mut Matrix<N, D, D, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","sig":null,"attributes":[{"value":"/ Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1040438,"byte_end":1040518,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1040519,"byte_end":1040522,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ If `matrix` is not invertible, `false` is returned and `out` may contain invalid data.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1040523,"byte_end":1040613,"line_start":51,"line_end":51,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":7371},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1041783,"byte_end":1041786,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<LU<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1041697,"byte_end":1041771,"line_start":92,"line_end":92,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7372},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1042742,"byte_end":1042753,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<LU<N, R, C>>::lu_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7373},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1042893,"byte_end":1042894,"line_start":131,"line_end":131,"column_start":12,"column_end":13},"name":"l","qualname":"<LU<N, R, C>>::l","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1042813,"byte_end":1042867,"line_start":129,"line_end":129,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1042872,"byte_end":1042881,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7375},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1043826,"byte_end":1043834,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"l_unpack","qualname":"<LU<N, R, C>>::l_unpack","value":"fn (self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1043746,"byte_end":1043800,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1043805,"byte_end":1043814,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7376},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1044261,"byte_end":1044262,"line_start":168,"line_end":168,"column_start":12,"column_end":13},"name":"u","qualname":"<LU<N, R, C>>::u","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1044181,"byte_end":1044235,"line_start":166,"line_end":166,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1044240,"byte_end":1044249,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7377},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1044572,"byte_end":1044573,"line_start":176,"line_end":176,"column_start":12,"column_end":13},"name":"p","qualname":"<LU<N, R, C>>::p","value":"fn (&self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1044499,"byte_end":1044546,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1044551,"byte_end":1044560,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7378},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1044766,"byte_end":1044772,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"unpack","qualname":"<LU<N, R, C>>::unpack","value":"fn (self) -> (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n MatrixMN<N, DimMinimum<R, C>, C>)","parent":null,"children":[],"decl_id":null,"docs":" The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.\n","sig":null,"attributes":[{"value":"/ The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1044652,"byte_end":1044740,"line_start":180,"line_end":180,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1044745,"byte_end":1044754,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7382},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1045549,"byte_end":1045554,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"name":"solve","qualname":"<LU<N, D, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1045390,"byte_end":1045477,"line_start":203,"line_end":203,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1045482,"byte_end":1045485,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1045490,"byte_end":1045537,"line_start":205,"line_end":205,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7386},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1046204,"byte_end":1046213,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<LU<N, D, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1045965,"byte_end":1046052,"line_start":223,"line_end":223,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1046057,"byte_end":1046060,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1046065,"byte_end":1046155,"line_start":225,"line_end":225,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1046160,"byte_end":1046192,"line_start":226,"line_end":226,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7390},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1046929,"byte_end":1046940,"line_start":250,"line_end":250,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<LU<N, D, D>>::try_inverse","value":"fn (&self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1046803,"byte_end":1046853,"line_start":247,"line_end":247,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1046858,"byte_end":1046861,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the matrix is not invertible.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1046866,"byte_end":1046917,"line_start":249,"line_end":249,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7391},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1047577,"byte_end":1047591,"line_start":269,"line_end":269,"column_start":12,"column_end":26},"name":"try_inverse_to","qualname":"<LU<N, D, D>>::try_inverse_to","value":"fn <S2> (&self, out: &mut Matrix<N, D, D, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix and outputs the result to `out`.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix and outputs the result to `out`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1047351,"byte_end":1047433,"line_start":265,"line_end":265,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1047438,"byte_end":1047441,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and `out` may be","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1047446,"byte_end":1047531,"line_start":267,"line_end":267,"column_start":5,"column_end":90}},{"value":"/ overwritten with garbage.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1047536,"byte_end":1047565,"line_start":268,"line_end":268,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7393},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1048069,"byte_end":1048080,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"determinant","qualname":"<LU<N, D, D>>::determinant","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1048003,"byte_end":1048057,"line_start":283,"line_end":283,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7394},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1048522,"byte_end":1048535,"line_start":300,"line_end":300,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<LU<N, D, D>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1048457,"byte_end":1048510,"line_start":299,"line_end":299,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":7395},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1049023,"byte_end":1049033,"line_start":319,"line_end":319,"column_start":8,"column_end":18},"name":"gauss_step","qualname":"::linalg::lu::gauss_step","value":"fn <N, R, C, S> (matrix: &mut Matrix<N, R, C, S>, diag: N, i: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal\n element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1048863,"byte_end":1048961,"line_start":317,"line_end":317,"column_start":1,"column_end":99}},{"value":"/ element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1048962,"byte_end":1049015,"line_start":318,"line_end":318,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7400},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1049807,"byte_end":1049822,"line_start":343,"line_end":343,"column_start":8,"column_end":23},"name":"gauss_step_swap","qualname":"::linalg::lu::gauss_step_swap","value":"fn <N, R, C, S> (matrix: &mut Matrix<N, R, C, S>, diag: N, i: usize, piv: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th\n row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1049605,"byte_end":1049704,"line_start":341,"line_end":341,"column_start":1,"column_end":100}},{"value":"/ row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1049705,"byte_end":1049799,"line_start":342,"line_end":342,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":7410},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1050800,"byte_end":1050802,"line_start":375,"line_end":375,"column_start":12,"column_end":14},"name":"lu","qualname":"<Matrix<N, R, C, S>>::lu","value":"fn (self) -> LU<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1050714,"byte_end":1050788,"line_start":374,"line_end":374,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":20624},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1051779,"byte_end":1051798,"line_start":31,"line_end":31,"column_start":12,"column_end":31},"name":"PermutationSequence","qualname":"::linalg::permutation_sequence::PermutationSequence","value":"PermutationSequence {  }","parent":null,"children":[{"krate":0,"index":20626},{"krate":0,"index":20627}],"decl_id":null,"docs":" A sequence of row or column permutations.\n","sig":null,"attributes":[{"value":"/ A sequence of row or column permutations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1051238,"byte_end":1051283,"line_start":14,"line_end":14,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7430},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052266,"byte_end":1052274,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<D>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new statically-allocated sequence of `D` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new statically-allocated sequence of `D` identity permutations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052163,"byte_end":1052240,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052245,"byte_end":1052254,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7432},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052589,"byte_end":1052597,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<Dynamic>>::identity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamically-allocated sequence of `n` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamically-allocated sequence of `n` identity permutations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052485,"byte_end":1052563,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052568,"byte_end":1052577,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7435},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052850,"byte_end":1052866,"line_start":70,"line_end":70,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<PermutationSequence<D>>::identity_generic","value":"fn (dim: D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sequence of D identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new sequence of D identity permutations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052770,"byte_end":1052824,"line_start":68,"line_end":68,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052829,"byte_end":1052838,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7436},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1053196,"byte_end":1053214,"line_start":82,"line_end":82,"column_start":12,"column_end":30},"name":"append_permutation","qualname":"<PermutationSequence<D>>::append_permutation","value":"fn (&mut self, i: usize, i2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this\n sequence of permutations.\n","sig":null,"attributes":[{"value":"/ Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1053047,"byte_end":1053136,"line_start":79,"line_end":79,"column_start":5,"column_end":94}},{"value":"/ sequence of permutations.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1053141,"byte_end":1053170,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1053175,"byte_end":1053184,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7437},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1053589,"byte_end":1053601,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"permute_rows","qualname":"<PermutationSequence<D>>::permute_rows","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the rows of `rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1053500,"byte_end":1053563,"line_start":93,"line_end":93,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1053568,"byte_end":1053577,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7442},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1053929,"byte_end":1053945,"line_start":104,"line_end":104,"column_start":12,"column_end":28},"name":"inv_permute_rows","qualname":"<PermutationSequence<D>>::inv_permute_rows","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the rows of `rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1053829,"byte_end":1053903,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1053908,"byte_end":1053917,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7447},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1054323,"byte_end":1054338,"line_start":118,"line_end":118,"column_start":12,"column_end":27},"name":"permute_columns","qualname":"<PermutationSequence<D>>::permute_columns","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the columns of `rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1054231,"byte_end":1054297,"line_start":116,"line_end":116,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1054302,"byte_end":1054311,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7452},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1054704,"byte_end":1054723,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"inv_permute_columns","qualname":"<PermutationSequence<D>>::inv_permute_columns","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the columns of `rhs`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1054601,"byte_end":1054678,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1054683,"byte_end":1054692,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7457},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1055093,"byte_end":1055096,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"len","qualname":"<PermutationSequence<D>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of non-identity permutations applied by this sequence.\n","sig":null,"attributes":[{"value":"/ The number of non-identity permutations applied by this sequence.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1055012,"byte_end":1055081,"line_start":143,"line_end":143,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7458},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1055237,"byte_end":1055248,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"determinant","qualname":"<PermutationSequence<D>>::determinant","value":"fn <N> (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The determinant of the matrix corresponding to this permutation.\n","sig":null,"attributes":[{"value":"/ The determinant of the matrix corresponding to this permutation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1055143,"byte_end":1055211,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1055216,"byte_end":1055225,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20634},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1056595,"byte_end":1056597,"line_start":36,"line_end":36,"column_start":12,"column_end":14},"name":"QR","qualname":"::linalg::qr::QR","value":"QR {  }","parent":null,"children":[{"krate":0,"index":20638},{"krate":0,"index":20639}],"decl_id":null,"docs":" The QR decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ The QR decomposition of a general matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1055865,"byte_end":1055910,"line_start":15,"line_end":15,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7494},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1057236,"byte_end":1057239,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<QR<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition using householder reflections.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1057160,"byte_end":1057224,"line_start":53,"line_end":53,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7495},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1057952,"byte_end":1057953,"line_start":79,"line_end":79,"column_start":12,"column_end":13},"name":"r","qualname":"<QR<N, R, C>>::r","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1057854,"byte_end":1057926,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1057931,"byte_end":1057940,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7497},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1058484,"byte_end":1058492,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"unpack_r","qualname":"<QR<N, R, C>>::unpack_r","value":"fn (self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1058317,"byte_end":1058389,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1058394,"byte_end":1058397,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This is usually faster than `r` but consumes `self`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1058402,"byte_end":1058458,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1058463,"byte_end":1058472,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7499},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1058983,"byte_end":1058984,"line_start":105,"line_end":105,"column_start":12,"column_end":13},"name":"q","qualname":"<QR<N, R, C>>::q","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1058910,"byte_end":1058971,"line_start":104,"line_end":104,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7500},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1059882,"byte_end":1059888,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"unpack","qualname":"<QR<N, R, C>>::unpack","value":"fn (self) -> (MatrixMN<N, R, DimMinimum<R, C>>, MatrixMN<N, DimMinimum<R, C>, C>)","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its two matrix factors.\n","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its two matrix factors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1059811,"byte_end":1059870,"line_start":126,"line_end":126,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7501},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1060275,"byte_end":1060286,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"qr_internal","qualname":"<QR<N, R, C>>::qr_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7502},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1060450,"byte_end":1060458,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"q_tr_mul","qualname":"<QR<N, R, C>>::q_tr_mul","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1060346,"byte_end":1060438,"line_start":146,"line_end":146,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":7509},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1061274,"byte_end":1061279,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"solve","qualname":"<QR<N, D, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1061115,"byte_end":1061202,"line_start":165,"line_end":165,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1061207,"byte_end":1061210,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1061215,"byte_end":1061262,"line_start":167,"line_end":167,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7513},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1061929,"byte_end":1061938,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<QR<N, D, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1061694,"byte_end":1061781,"line_start":186,"line_end":186,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1061786,"byte_end":1061789,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` is","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1061794,"byte_end":1061883,"line_start":188,"line_end":188,"column_start":5,"column_end":94}},{"value":"/ overwritten with garbage.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1061888,"byte_end":1061917,"line_start":189,"line_end":189,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7521},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1063527,"byte_end":1063538,"line_start":247,"line_end":247,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<QR<N, D, D>>::try_inverse","value":"fn (&self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1063390,"byte_end":1063440,"line_start":244,"line_end":244,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1063445,"byte_end":1063448,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1063453,"byte_end":1063515,"line_start":246,"line_end":246,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7522},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1064059,"byte_end":1064072,"line_start":265,"line_end":265,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<QR<N, D, D>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1063994,"byte_end":1064047,"line_start":264,"line_end":264,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7528},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1065075,"byte_end":1065077,"line_start":298,"line_end":298,"column_start":12,"column_end":14},"name":"qr","qualname":"<Matrix<N, R, C, S>>::qr","value":"fn (self) -> QR<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1065014,"byte_end":1065063,"line_start":297,"line_end":297,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":20650},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1066291,"byte_end":1066296,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Schur","qualname":"::linalg::schur::Schur","value":"Schur {  }","parent":null,"children":[{"krate":0,"index":20653},{"krate":0,"index":20654}],"decl_id":null,"docs":" Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Schur decomposition of a square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1065718,"byte_end":1065761,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1065762,"byte_end":1065765,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If this is a real matrix, this will be a RealField Schur decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1065766,"byte_end":1065841,"line_start":21,"line_end":21,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7564},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1066885,"byte_end":1066888,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Schur<N, D>>::new","value":"fn (m: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1066817,"byte_end":1066873,"line_start":59,"line_end":59,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7565},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1067569,"byte_end":1067576,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Schur<N, D>>::try_new","value":"fn (m: MatrixN<N, D>, eps: N::RealField, max_niter: usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1066998,"byte_end":1067065,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1067070,"byte_end":1067073,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1067078,"byte_end":1067160,"line_start":66,"line_end":66,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1067165,"byte_end":1067194,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1067199,"byte_end":1067202,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1067207,"byte_end":1067222,"line_start":69,"line_end":69,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1067227,"byte_end":1067230,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1067235,"byte_end":1067313,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1067318,"byte_end":1067410,"line_start":72,"line_end":72,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1067415,"byte_end":1067507,"line_start":73,"line_end":73,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1067512,"byte_end":1067557,"line_start":74,"line_end":74,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7571},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1077412,"byte_end":1077418,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Schur<N, D>>::unpack","value":"fn (self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the\n decomposed matrix equals `Q * T * Q.transpose()`.\n","sig":null,"attributes":[{"value":"/ Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1077251,"byte_end":1077342,"line_start":373,"line_end":373,"column_start":5,"column_end":96}},{"value":"/ decomposed matrix equals `Q * T * Q.transpose()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1077347,"byte_end":1077400,"line_start":374,"line_end":374,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7572},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1077631,"byte_end":1077642,"line_start":382,"line_end":382,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<Schur<N, D>>::eigenvalues","value":"fn (&self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the real eigenvalues of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the real eigenvalues of the decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1077497,"byte_end":1077556,"line_start":379,"line_end":379,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1077561,"byte_end":1077564,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Return `None` if some eigenvalues are complex.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1077569,"byte_end":1077619,"line_start":381,"line_end":381,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7573},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1077977,"byte_end":1077996,"line_start":392,"line_end":392,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<Schur<N, D>>::complex_eigenvalues","value":"fn (&self) -> VectorN<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the complex eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the complex eigenvalues of the decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1077903,"byte_end":1077965,"line_start":391,"line_end":391,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7588},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081462,"byte_end":1081467,"line_start":499,"line_end":499,"column_start":12,"column_end":17},"name":"schur","qualname":"<SquareMatrix<N, D, S>>::schur","value":"fn (self) -> Schur<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081394,"byte_end":1081450,"line_start":498,"line_end":498,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7589},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1082111,"byte_end":1082120,"line_start":514,"line_end":514,"column_start":12,"column_end":21},"name":"try_schur","qualname":"<SquareMatrix<N, D, S>>::try_schur","value":"fn (self, eps: N::RealField, max_niter: usize) -> Option<Schur<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081540,"byte_end":1081607,"line_start":503,"line_end":503,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081612,"byte_end":1081615,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081620,"byte_end":1081702,"line_start":505,"line_end":505,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081707,"byte_end":1081736,"line_start":506,"line_end":506,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081741,"byte_end":1081744,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081749,"byte_end":1081764,"line_start":508,"line_end":508,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081769,"byte_end":1081772,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081777,"byte_end":1081855,"line_start":510,"line_end":510,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081860,"byte_end":1081952,"line_start":511,"line_end":511,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081957,"byte_end":1082049,"line_start":512,"line_end":512,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1082054,"byte_end":1082099,"line_start":513,"line_end":513,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7590},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1082314,"byte_end":1082325,"line_start":519,"line_end":519,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<SquareMatrix<N, D, S>>::eigenvalues","value":"fn (&self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1082258,"byte_end":1082302,"line_start":518,"line_end":518,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7591},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1083508,"byte_end":1083527,"line_start":559,"line_end":559,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::complex_eigenvalues","value":"fn (&self) -> VectorN<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1083452,"byte_end":1083496,"line_start":558,"line_end":558,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7615},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1084757,"byte_end":1084779,"line_start":13,"line_end":13,"column_start":12,"column_end":34},"name":"solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1084543,"byte_end":1084638,"line_start":10,"line_end":10,"column_start":5,"column_end":100}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1084643,"byte_end":1084731,"line_start":11,"line_end":11,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1084736,"byte_end":1084745,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7619},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1085424,"byte_end":1085446,"line_start":33,"line_end":33,"column_start":12,"column_end":34},"name":"solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1085210,"byte_end":1085305,"line_start":30,"line_end":30,"column_start":5,"column_end":100}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1085310,"byte_end":1085398,"line_start":31,"line_end":31,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1085403,"byte_end":1085412,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7623},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1086059,"byte_end":1086085,"line_start":52,"line_end":52,"column_start":12,"column_end":38},"name":"solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1085877,"byte_end":1085958,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1085963,"byte_end":1086047,"line_start":51,"line_end":51,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7630},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1087559,"byte_end":1087595,"line_start":103,"line_end":103,"column_start":12,"column_end":48},"name":"solve_lower_triangular_with_diag_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_with_diag_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>, diag: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is\n assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1087261,"byte_end":1087342,"line_start":100,"line_end":100,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1087347,"byte_end":1087442,"line_start":101,"line_end":101,"column_start":5,"column_end":100}},{"value":"/ assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1087447,"byte_end":1087547,"line_start":102,"line_end":102,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":7634},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1088462,"byte_end":1088488,"line_start":134,"line_end":134,"column_start":12,"column_end":38},"name":"solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1088280,"byte_end":1088361,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1088366,"byte_end":1088450,"line_start":133,"line_end":133,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7641},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1089896,"byte_end":1089921,"line_start":189,"line_end":189,"column_start":12,"column_end":37},"name":"tr_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1089670,"byte_end":1089777,"line_start":186,"line_end":186,"column_start":5,"column_end":112}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1089782,"byte_end":1089870,"line_start":187,"line_end":187,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1089875,"byte_end":1089884,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7645},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1090597,"byte_end":1090622,"line_start":209,"line_end":209,"column_start":12,"column_end":37},"name":"tr_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1090371,"byte_end":1090478,"line_start":206,"line_end":206,"column_start":5,"column_end":112}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1090483,"byte_end":1090571,"line_start":207,"line_end":207,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1090576,"byte_end":1090585,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7649},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1091266,"byte_end":1091295,"line_start":228,"line_end":228,"column_start":12,"column_end":41},"name":"tr_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1091072,"byte_end":1091165,"line_start":226,"line_end":226,"column_start":5,"column_end":98}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1091170,"byte_end":1091254,"line_start":227,"line_end":227,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7655},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1091937,"byte_end":1091966,"line_start":249,"line_end":249,"column_start":12,"column_end":41},"name":"tr_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1091743,"byte_end":1091836,"line_start":247,"line_end":247,"column_start":5,"column_end":98}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1091841,"byte_end":1091925,"line_start":248,"line_end":248,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7661},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1092638,"byte_end":1092663,"line_start":271,"line_end":271,"column_start":12,"column_end":37},"name":"ad_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1092414,"byte_end":1092519,"line_start":268,"line_end":268,"column_start":5,"column_end":110}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1092524,"byte_end":1092612,"line_start":269,"line_end":269,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1092617,"byte_end":1092626,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7665},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1093337,"byte_end":1093362,"line_start":291,"line_end":291,"column_start":12,"column_end":37},"name":"ad_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1093113,"byte_end":1093218,"line_start":288,"line_end":288,"column_start":5,"column_end":110}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1093223,"byte_end":1093311,"line_start":289,"line_end":289,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1093316,"byte_end":1093325,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7669},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1094004,"byte_end":1094033,"line_start":310,"line_end":310,"column_start":12,"column_end":41},"name":"ad_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1093812,"byte_end":1093903,"line_start":308,"line_end":308,"column_start":5,"column_end":96}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1093908,"byte_end":1093992,"line_start":309,"line_end":309,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7675},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1094686,"byte_end":1094715,"line_start":331,"line_end":331,"column_start":12,"column_end":41},"name":"ad_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1094494,"byte_end":1094585,"line_start":329,"line_end":329,"column_start":5,"column_end":96}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1094590,"byte_end":1094674,"line_start":330,"line_end":330,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":20663},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1098563,"byte_end":1098566,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"SVD","qualname":"::linalg::svd::SVD","value":"SVD { u, v_t, singular_values }","parent":null,"children":[{"krate":0,"index":20667},{"krate":0,"index":20668},{"krate":0,"index":20669}],"decl_id":null,"docs":" Singular Value Decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Singular Value Decomposition of a general matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1097474,"byte_end":1097527,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":20667},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1098821,"byte_end":1098822,"line_start":49,"line_end":49,"column_start":9,"column_end":10},"name":"u","qualname":"::linalg::svd::SVD::u","value":"std::option::Option<base::matrix::Matrix<N, R, <R as base::dimension::DimMin<C>>::Output, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, R, <R as base::dimension::DimMin<C>>::Output>>::Buffer>>","parent":{"krate":0,"index":20663},"children":[],"decl_id":null,"docs":" The left-singular vectors `U` of this SVD.\n","sig":null,"attributes":[{"value":"/ The left-singular vectors `U` of this SVD.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1098766,"byte_end":1098812,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":20668},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1098928,"byte_end":1098931,"line_start":51,"line_end":51,"column_start":9,"column_end":12},"name":"v_t","qualname":"::linalg::svd::SVD::v_t","value":"std::option::Option<base::matrix::Matrix<N, <R as base::dimension::DimMin<C>>::Output, C, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, <R as base::dimension::DimMin<C>>::Output, C>>::Buffer>>","parent":{"krate":0,"index":20663},"children":[],"decl_id":null,"docs":" The right-singular vectors `V^t` of this SVD.\n","sig":null,"attributes":[{"value":"/ The right-singular vectors `V^t` of this SVD.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1098870,"byte_end":1098919,"line_start":50,"line_end":50,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":20669},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1099024,"byte_end":1099039,"line_start":53,"line_end":53,"column_start":9,"column_end":24},"name":"singular_values","qualname":"::linalg::svd::SVD::singular_values","value":"base::matrix::Matrix<<N as alga::general::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as alga::general::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output>>::Buffer>","parent":{"krate":0,"index":20663},"children":[],"decl_id":null,"docs":" The singular values of this SVD.\n","sig":null,"attributes":[{"value":"/ The singular values of this SVD.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1098979,"byte_end":1099015,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7730},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100060,"byte_end":1100063,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<SVD<N, R, C>>::new","value":"fn (matrix: MatrixMN<N, R, C>, compute_u: bool, compute_v: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition of `matrix` using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1099969,"byte_end":1100048,"line_start":79,"line_end":79,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":7731},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100902,"byte_end":1100909,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SVD<N, R, C>>::try_new","value":"fn (mut matrix: MatrixMN<N, R, C>, compute_u: bool, compute_v: bool, eps: N::RealField, max_niter: usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100243,"byte_end":1100333,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100338,"byte_end":1100341,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100346,"byte_end":1100361,"line_start":86,"line_end":86,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100366,"byte_end":1100369,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100374,"byte_end":1100466,"line_start":88,"line_end":88,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100471,"byte_end":1100563,"line_start":89,"line_end":89,"column_start":5,"column_end":95}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100568,"byte_end":1100646,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100651,"byte_end":1100743,"line_start":91,"line_end":91,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100748,"byte_end":1100840,"line_start":92,"line_end":92,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1100845,"byte_end":1100890,"line_start":93,"line_end":93,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7737},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1113716,"byte_end":1113720,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"rank","qualname":"<SVD<N, R, C>>::rank","value":"fn (&self, eps: N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of the decomposed matrix, i.e., the number of singular values greater\n than `eps`.\n","sig":null,"attributes":[{"value":"/ Computes the rank of the decomposed matrix, i.e., the number of singular values greater","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1113593,"byte_end":1113684,"line_start":446,"line_end":446,"column_start":5,"column_end":96}},{"value":"/ than `eps`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1113689,"byte_end":1113704,"line_start":447,"line_end":447,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7739},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1114213,"byte_end":1114222,"line_start":461,"line_end":461,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SVD<N, R, C>>::recompose","value":"fn (self) -> Result<MatrixMN<N, R, C>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1113962,"byte_end":1113994,"line_start":456,"line_end":456,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1113999,"byte_end":1114002,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the singular values have been manually modified.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1114007,"byte_end":1114085,"line_start":458,"line_end":458,"column_start":5,"column_end":83}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not been","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1114090,"byte_end":1114162,"line_start":459,"line_end":459,"column_start":5,"column_end":77}},{"value":"/ computed at construction-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1114167,"byte_end":1114201,"line_start":460,"line_end":460,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7740},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1115102,"byte_end":1115116,"line_start":481,"line_end":481,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<SVD<N, R, C>>::pseudo_inverse","value":"fn (mut self, eps: N::RealField) -> Result<MatrixMN<N, C, R>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of the decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1114840,"byte_end":1114897,"line_start":476,"line_end":476,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1114902,"byte_end":1114905,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1114910,"byte_end":1114974,"line_start":478,"line_end":478,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1114979,"byte_end":1115046,"line_start":479,"line_end":479,"column_start":5,"column_end":72}},{"value":"/ been computed at construction-time.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1115051,"byte_end":1115090,"line_start":480,"line_end":480,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7742},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1116148,"byte_end":1116153,"line_start":508,"line_end":508,"column_start":12,"column_end":17},"name":"solve","qualname":"<SVD<N, R, C>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>, eps: N::RealField) -> Result<MatrixMN<N, C, C2>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1115795,"byte_end":1115890,"line_start":503,"line_end":503,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1115895,"byte_end":1115898,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1115903,"byte_end":1115967,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the singular vectors `U` and `V` have not been computed.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1115972,"byte_end":1116049,"line_start":506,"line_end":506,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":7751},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118201,"byte_end":1118204,"line_start":563,"line_end":563,"column_start":12,"column_end":15},"name":"svd","qualname":"<Matrix<N, R, C, S>>::svd","value":"fn (self, compute_u: bool, compute_v: bool) -> SVD<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition using implicit shift.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118122,"byte_end":1118189,"line_start":562,"line_end":562,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7752},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118991,"byte_end":1118998,"line_start":577,"line_end":577,"column_start":12,"column_end":19},"name":"try_svd","qualname":"<Matrix<N, R, C, S>>::try_svd","value":"fn (self, compute_u: bool, compute_v: bool, eps: N::RealField, max_niter: usize) -> Option<SVD<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118332,"byte_end":1118422,"line_start":567,"line_end":567,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118427,"byte_end":1118430,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118435,"byte_end":1118450,"line_start":569,"line_end":569,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118455,"byte_end":1118458,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118463,"byte_end":1118555,"line_start":571,"line_end":571,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118560,"byte_end":1118652,"line_start":572,"line_end":572,"column_start":5,"column_end":95}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118657,"byte_end":1118735,"line_start":573,"line_end":573,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118740,"byte_end":1118832,"line_start":574,"line_end":574,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118837,"byte_end":1118929,"line_start":575,"line_end":575,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1118934,"byte_end":1118979,"line_start":576,"line_end":576,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7753},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1119302,"byte_end":1119317,"line_start":589,"line_end":589,"column_start":12,"column_end":27},"name":"singular_values","qualname":"<Matrix<N, R, C, S>>::singular_values","value":"fn (&self) -> VectorN<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the singular values of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the singular values of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1119242,"byte_end":1119290,"line_start":588,"line_end":588,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7754},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1119572,"byte_end":1119576,"line_start":596,"line_end":596,"column_start":12,"column_end":16},"name":"rank","qualname":"<Matrix<N, R, C, S>>::rank","value":"fn (&self, eps: N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of this matrix.","sig":null,"attributes":[{"value":"/ Computes the rank of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1119448,"byte_end":1119485,"line_start":593,"line_end":593,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1119490,"byte_end":1119493,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1119498,"byte_end":1119560,"line_start":595,"line_end":595,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7755},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1119843,"byte_end":1119857,"line_start":604,"line_end":604,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<Matrix<N, R, C, S>>::pseudo_inverse","value":"fn (self, eps: N::RealField) -> Result<MatrixMN<N, C, R>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of this matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of this matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1119709,"byte_end":1119756,"line_start":601,"line_end":601,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1119761,"byte_end":1119764,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1119769,"byte_end":1119831,"line_start":603,"line_end":603,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":20680},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1122731,"byte_end":1122745,"line_start":37,"line_end":37,"column_start":12,"column_end":26},"name":"SymmetricEigen","qualname":"::linalg::symmetric_eigen::SymmetricEigen","value":"SymmetricEigen { eigenvectors, eigenvalues }","parent":null,"children":[{"krate":0,"index":20683},{"krate":0,"index":20684}],"decl_id":null,"docs":" Eigendecomposition of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Eigendecomposition of a symmetric matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1122025,"byte_end":1122070,"line_start":16,"line_end":16,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":20683},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1122904,"byte_end":1122916,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"name":"eigenvectors","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvectors","value":"base::matrix::Matrix<N, D, D, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D, D>>::Buffer>","parent":{"krate":0,"index":20680},"children":[],"decl_id":null,"docs":" The eigenvectors of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The eigenvectors of the decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1122849,"byte_end":1122895,"line_start":40,"line_end":40,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":20684},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123001,"byte_end":1123012,"line_start":44,"line_end":44,"column_start":9,"column_end":20},"name":"eigenvalues","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvalues","value":"base::matrix::Matrix<<N as alga::general::ComplexField>::RealField, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as alga::general::ComplexField>::RealField, D>>::Buffer>","parent":{"krate":0,"index":20680},"children":[],"decl_id":null,"docs":" The unsorted eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The unsorted eigenvalues of the decomposed matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1122938,"byte_end":1122992,"line_start":43,"line_end":43,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7785},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123541,"byte_end":1123544,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricEigen<N, D>>::new","value":"fn (m: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123374,"byte_end":1123440,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123445,"byte_end":1123448,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular parts (including its diagonal) of `m` is read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123453,"byte_end":1123529,"line_start":59,"line_end":59,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":7786},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1124403,"byte_end":1124410,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SymmetricEigen<N, D>>::try_new","value":"fn (m: MatrixN<N, D>, eps: N::RealField, max_niter: usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123823,"byte_end":1123908,"line_start":69,"line_end":69,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123913,"byte_end":1123940,"line_start":70,"line_end":70,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123945,"byte_end":1123948,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including its diagonal) of `m` is read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123953,"byte_end":1124028,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1124033,"byte_end":1124036,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1124041,"byte_end":1124056,"line_start":74,"line_end":74,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1124061,"byte_end":1124064,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1124069,"byte_end":1124147,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1124152,"byte_end":1124244,"line_start":77,"line_end":77,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1124249,"byte_end":1124341,"line_start":78,"line_end":78,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1124346,"byte_end":1124391,"line_start":79,"line_end":79,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7790},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1130456,"byte_end":1130465,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricEigen<N, D>>::recompose","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1130325,"byte_end":1130357,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1130362,"byte_end":1130365,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the eigenvalues have been manually modified.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1130370,"byte_end":1130444,"line_start":273,"line_end":273,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":7791},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1130961,"byte_end":1130976,"line_start":291,"line_end":291,"column_start":8,"column_end":23},"name":"wilkinson_shift","qualname":"::linalg::symmetric_eigen::wilkinson_shift","value":"fn <N> (tmm: N, tnn: N, tmn: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing\n component `tnn`.","sig":null,"attributes":[{"value":"/ Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1130754,"byte_end":1130844,"line_start":285,"line_end":285,"column_start":1,"column_end":91}},{"value":"/ component `tnn`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1130845,"byte_end":1130865,"line_start":286,"line_end":286,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1130866,"byte_end":1130869,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ The inputs are interpreted as the 2x2 matrix:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1130870,"byte_end":1130919,"line_start":288,"line_end":288,"column_start":1,"column_end":50}},{"value":"/     tmm  tmn","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1130920,"byte_end":1130936,"line_start":289,"line_end":289,"column_start":1,"column_end":17}},{"value":"/     tmn  tnn","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1130937,"byte_end":1130953,"line_start":290,"line_end":290,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7797},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1131784,"byte_end":1131799,"line_start":314,"line_end":314,"column_start":12,"column_end":27},"name":"symmetric_eigen","qualname":"<SquareMatrix<N, D, S>>::symmetric_eigen","value":"fn (self) -> SymmetricEigen<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of this symmetric matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1131623,"byte_end":1131684,"line_start":311,"line_end":311,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1131689,"byte_end":1131692,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1131697,"byte_end":1131772,"line_start":313,"line_end":313,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7798},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132470,"byte_end":1132489,"line_start":329,"line_end":329,"column_start":12,"column_end":31},"name":"try_symmetric_eigen","qualname":"<SquareMatrix<N, D, S>>::try_symmetric_eigen","value":"fn (self, eps: N::RealField, max_niter: usize) -> Option<SymmetricEigen<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1131890,"byte_end":1131975,"line_start":318,"line_end":318,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1131980,"byte_end":1132007,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132012,"byte_end":1132015,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132020,"byte_end":1132095,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132100,"byte_end":1132103,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132108,"byte_end":1132123,"line_start":323,"line_end":323,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132128,"byte_end":1132131,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132136,"byte_end":1132214,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132219,"byte_end":1132311,"line_start":326,"line_end":326,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132316,"byte_end":1132408,"line_start":327,"line_end":327,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132413,"byte_end":1132458,"line_start":328,"line_end":328,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7799},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132781,"byte_end":1132802,"line_start":336,"line_end":336,"column_start":12,"column_end":33},"name":"symmetric_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::symmetric_eigenvalues","value":"fn (&self) -> VectorN<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this symmetric matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132645,"byte_end":1132699,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132704,"byte_end":1132707,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part of the matrix is read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1132712,"byte_end":1132769,"line_start":335,"line_end":335,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":20693},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1136130,"byte_end":1136150,"line_start":33,"line_end":33,"column_start":12,"column_end":32},"name":"SymmetricTridiagonal","qualname":"::linalg::symmetric_tridiagonal::SymmetricTridiagonal","value":"SymmetricTridiagonal {  }","parent":null,"children":[{"krate":0,"index":20696},{"krate":0,"index":20697}],"decl_id":null,"docs":" Tridiagonalization of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Tridiagonalization of a symmetric matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1135416,"byte_end":1135461,"line_start":12,"line_end":12,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7821},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1136859,"byte_end":1136862,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricTridiagonal<N, D>>::new","value":"fn (mut m: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of the symmetric matrix `m`.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of the symmetric matrix `m`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1136695,"byte_end":1136759,"line_start":50,"line_end":50,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1136764,"byte_end":1136767,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1136772,"byte_end":1136847,"line_start":52,"line_end":52,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7822},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1138234,"byte_end":1138246,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"internal_tri","qualname":"<SymmetricTridiagonal<N, D>>::internal_tri","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7823},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1138425,"byte_end":1138431,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"unpack","qualname":"<SymmetricTridiagonal<N, D>>::unpack","value":"fn (self) -> (MatrixN<N, D>, VectorN<N::RealField, D>,\n VectorN<N::RealField, DimDiff<D, U1>>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this\n decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1138303,"byte_end":1138390,"line_start":99,"line_end":99,"column_start":5,"column_end":92}},{"value":"/ decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1138395,"byte_end":1138413,"line_start":100,"line_end":100,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":7824},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1138861,"byte_end":1138879,"line_start":111,"line_end":111,"column_start":12,"column_end":30},"name":"unpack_tridiagonal","qualname":"<SymmetricTridiagonal<N, D>>::unpack_tridiagonal","value":"fn (self) -> (VectorN<N::RealField, D>, VectorN<N::RealField, DimDiff<D, U1>>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the diagonal, and off diagonal elements of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the diagonal, and off diagonal elements of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1138774,"byte_end":1138849,"line_start":110,"line_end":110,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7825},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1139222,"byte_end":1139230,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SymmetricTridiagonal<N, D>>::diagonal","value":"fn (&self) -> VectorN<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The diagonal components of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1139160,"byte_end":1139210,"line_start":117,"line_end":117,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7827},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1139432,"byte_end":1139444,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<SymmetricTridiagonal<N, D>>::off_diagonal","value":"fn (&self) -> VectorN<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The off-diagonal components of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1139366,"byte_end":1139420,"line_start":121,"line_end":121,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7828},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1139689,"byte_end":1139690,"line_start":128,"line_end":128,"column_start":12,"column_end":13},"name":"q","qualname":"<SymmetricTridiagonal<N, D>>::q","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1139616,"byte_end":1139677,"line_start":127,"line_end":127,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7829},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1139858,"byte_end":1139867,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricTridiagonal<N, D>>::recompose","value":"fn (mut self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Recomputes the original symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Recomputes the original symmetric matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1139801,"byte_end":1139846,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7834},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1140599,"byte_end":1140623,"line_start":154,"line_end":154,"column_start":12,"column_end":36},"name":"symmetric_tridiagonalize","qualname":"<SquareMatrix<N, D, S>>::symmetric_tridiagonalize","value":"fn (self) -> SymmetricTridiagonal<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of this symmetric matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1140438,"byte_end":1140499,"line_start":151,"line_end":151,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1140504,"byte_end":1140507,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1140512,"byte_end":1140587,"line_start":153,"line_end":153,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7856},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141304,"byte_end":1141317,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"convolve_full","qualname":"<Vector<N, D1, S1>>::convolve_full","value":"fn <D2, S2> (&self, kernel: Vector<N, D2, S2>) -> VectorN<N, DimDiff<DimSum<D1, D2>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141053,"byte_end":1141115,"line_start":10,"line_end":10,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141120,"byte_end":1141123,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141128,"byte_end":1141143,"line_start":12,"line_end":12,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141148,"byte_end":1141151,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141156,"byte_end":1141195,"line_start":14,"line_end":14,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141200,"byte_end":1141203,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141208,"byte_end":1141220,"line_start":16,"line_end":16,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `vector.len() >= kernel.len() > 0`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141225,"byte_end":1141284,"line_start":17,"line_end":17,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141289,"byte_end":1141292,"line_start":18,"line_end":18,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7859},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142855,"byte_end":1142869,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"convolve_valid","qualname":"<Vector<N, D1, S1>>::convolve_valid","value":"fn <D2, S2> (&self, kernel: Vector<N, D2, S2>) -> VectorN<N, DimDiff<DimSum<D1, U1>, D2>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142497,"byte_end":1142559,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142564,"byte_end":1142567,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The output convolution consists only of those elements that do not rely on the zero-padding.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142572,"byte_end":1142668,"line_start":58,"line_end":58,"column_start":5,"column_end":101}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142673,"byte_end":1142688,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142693,"byte_end":1142696,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142701,"byte_end":1142740,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142745,"byte_end":1142748,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142753,"byte_end":1142756,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142761,"byte_end":1142773,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142778,"byte_end":1142835,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1142840,"byte_end":1142843,"line_start":66,"line_end":66,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7862},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1144046,"byte_end":1144059,"line_start":102,"line_end":102,"column_start":12,"column_end":25},"name":"convolve_same","qualname":"<Vector<N, D1, S1>>::convolve_same","value":"fn <D2, S2> (&self, kernel: Vector<N, D2, S2>) -> VectorN<N, D1>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1143698,"byte_end":1143760,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1143765,"byte_end":1143768,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The output convolution is the same size as vector, centered with respect to the ‘full’ output.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1143773,"byte_end":1143875,"line_start":95,"line_end":95,"column_start":5,"column_end":103}},{"value":"/ # Arguments","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1143880,"byte_end":1143895,"line_start":96,"line_end":96,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1143900,"byte_end":1143903,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1143908,"byte_end":1143947,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1143952,"byte_end":1143955,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1143960,"byte_end":1143972,"line_start":100,"line_end":100,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1143977,"byte_end":1144034,"line_start":101,"line_end":101,"column_start":5,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":7908},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5469,"byte_end":5471,"line_start":179,"line_end":179,"column_start":8,"column_end":10},"name":"id","qualname":"::id","value":"fn () -> Id","parent":null,"children":[],"decl_id":null,"docs":" Gets the ubiquitous multiplicative identity element.","sig":null,"attributes":[{"value":"/ Gets the ubiquitous multiplicative identity element.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5317,"byte_end":5373,"line_start":174,"line_end":174,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5374,"byte_end":5377,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Same as `Id::new()`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5378,"byte_end":5402,"line_start":176,"line_end":176,"column_start":1,"column_end":25}},{"value":"deprecated(note = \"use `Id::new()` instead.\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5403,"byte_end":5451,"line_start":177,"line_end":177,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5452,"byte_end":5461,"line_start":178,"line_end":178,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7909},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5660,"byte_end":5663,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"one","qualname":"::one","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the multiplicative identity element.","sig":null,"attributes":[{"value":"/ Gets the multiplicative identity element.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5499,"byte_end":5544,"line_start":183,"line_end":183,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5545,"byte_end":5548,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5549,"byte_end":5564,"line_start":185,"line_end":185,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5565,"byte_end":5568,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5569,"byte_end":5613,"line_start":187,"line_end":187,"column_start":1,"column_end":45}},{"value":"/ * [`zero`](fn.zero.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5614,"byte_end":5642,"line_start":188,"line_end":188,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5643,"byte_end":5652,"line_start":189,"line_end":189,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7911},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5876,"byte_end":5880,"line_start":201,"line_end":201,"column_start":8,"column_end":12},"name":"zero","qualname":"::zero","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the additive identity element.","sig":null,"attributes":[{"value":"/ Gets the additive identity element.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5723,"byte_end":5762,"line_start":194,"line_end":194,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5763,"byte_end":5766,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5767,"byte_end":5782,"line_start":196,"line_end":196,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5783,"byte_end":5786,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ * [`one`](fn.one.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5787,"byte_end":5813,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5814,"byte_end":5858,"line_start":199,"line_end":199,"column_start":1,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5859,"byte_end":5868,"line_start":200,"line_end":200,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7913},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6301,"byte_end":6307,"line_start":218,"line_end":218,"column_start":8,"column_end":14},"name":"origin","qualname":"::origin","value":"fn <P> () -> P","parent":null,"children":[],"decl_id":null,"docs":" Gets the origin of the given point.","sig":null,"attributes":[{"value":"/ Gets the origin of the given point.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5934,"byte_end":5973,"line_start":205,"line_end":205,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5974,"byte_end":5977,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5978,"byte_end":5993,"line_start":207,"line_end":207,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5994,"byte_end":5997,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ * [`one`](fn.one.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":5998,"byte_end":6024,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"/ * [`zero`](fn.zero.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6025,"byte_end":6053,"line_start":210,"line_end":210,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6054,"byte_end":6057,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6058,"byte_end":6074,"line_start":212,"line_end":212,"column_start":1,"column_end":17}},{"value":"/ Use [Point::origin] instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6075,"byte_end":6107,"line_start":213,"line_end":213,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6108,"byte_end":6111,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Or, use [EuclideanSpace::origin](https://docs.rs/alga/0.7.2/alga/linear/trait.EuclideanSpace.html#tymethod.origin).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6112,"byte_end":6231,"line_start":215,"line_end":215,"column_start":1,"column_end":120}},{"value":"deprecated(note = \"use `Point::origin` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6232,"byte_end":6283,"line_start":216,"line_end":216,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6284,"byte_end":6293,"line_start":217,"line_end":217,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7915},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6470,"byte_end":6479,"line_start":229,"line_end":229,"column_start":8,"column_end":17},"name":"dimension","qualname":"::dimension","value":"fn <V> () -> usize","parent":null,"children":[],"decl_id":null,"docs":" The dimension of the given algebraic entity seen as a vector space.\n","sig":null,"attributes":[{"value":"/ The dimension of the given algebraic entity seen as a vector space.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6381,"byte_end":6452,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6453,"byte_end":6462,"line_start":228,"line_end":228,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7917},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6917,"byte_end":6921,"line_start":245,"line_end":245,"column_start":8,"column_end":12},"name":"wrap","qualname":"::wrap","value":"fn <T> (mut val: T, min: T, max: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Wraps `val` into the range `[min, max]` using modular arithmetics.","sig":null,"attributes":[{"value":"/ Wraps `val` into the range `[min, max]` using modular arithmetics.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6792,"byte_end":6862,"line_start":241,"line_end":241,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6863,"byte_end":6866,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ The range must not be empty.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6867,"byte_end":6899,"line_start":243,"line_end":243,"column_start":1,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":6900,"byte_end":6909,"line_start":244,"line_end":244,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7919},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7623,"byte_end":7628,"line_start":278,"line_end":278,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"fn <T> (val: T, min: T, max: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the input value clamped to the interval `[min, max]`.","sig":null,"attributes":[{"value":"/ Returns a reference to the input value clamped to the interval `[min, max]`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7356,"byte_end":7436,"line_start":271,"line_end":271,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7437,"byte_end":7440,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ In particular:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7441,"byte_end":7459,"line_start":273,"line_end":273,"column_start":1,"column_end":19}},{"value":"/     * If `min < val < max`, this returns `val`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7460,"byte_end":7511,"line_start":274,"line_end":274,"column_start":1,"column_end":52}},{"value":"/     * If `val <= min`, this returns `min`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7512,"byte_end":7558,"line_start":275,"line_end":275,"column_start":1,"column_end":47}},{"value":"/     * If `val >= max`, this returns `max`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7559,"byte_end":7605,"line_start":276,"line_end":276,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7606,"byte_end":7615,"line_start":277,"line_end":277,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7921},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7851,"byte_end":7854,"line_start":292,"line_end":292,"column_start":8,"column_end":11},"name":"max","qualname":"::max","value":"fn <T> (a: T, b: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::max`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::max`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7810,"byte_end":7833,"line_start":290,"line_end":290,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7834,"byte_end":7843,"line_start":291,"line_end":291,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7923},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7945,"byte_end":7948,"line_start":298,"line_end":298,"column_start":8,"column_end":11},"name":"min","qualname":"::min","value":"fn <T> (a: T, b: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::min`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::min`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7904,"byte_end":7927,"line_start":296,"line_end":296,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7928,"byte_end":7937,"line_start":297,"line_end":297,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7925},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8183,"byte_end":8186,"line_start":307,"line_end":307,"column_start":8,"column_end":11},"name":"abs","qualname":"::abs","value":"fn <T> (a: &T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The absolute value of `a`.","sig":null,"attributes":[{"value":"/ The absolute value of `a`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":7998,"byte_end":8028,"line_start":302,"line_end":302,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8029,"byte_end":8032,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ Deprecated: Use [Matrix::abs] or [RealField::abs] instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8033,"byte_end":8095,"line_start":304,"line_end":304,"column_start":1,"column_end":63}},{"value":"deprecated(note = \"use `Matrix::abs` or `RealField::abs` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8096,"byte_end":8165,"line_start":305,"line_end":305,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8166,"byte_end":8175,"line_start":306,"line_end":306,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7927},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8284,"byte_end":8287,"line_start":313,"line_end":313,"column_start":8,"column_end":11},"name":"inf","qualname":"::inf","value":"fn <T> (a: &T, b: &T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the infimum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the infimum of `a` and `b`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8227,"byte_end":8266,"line_start":311,"line_end":311,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8267,"byte_end":8276,"line_start":312,"line_end":312,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7929},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8404,"byte_end":8407,"line_start":319,"line_end":319,"column_start":8,"column_end":11},"name":"sup","qualname":"::sup","value":"fn <T> (a: &T, b: &T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the supremum of `a` and `b`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8346,"byte_end":8386,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8387,"byte_end":8396,"line_start":318,"line_end":318,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7931},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8551,"byte_end":8558,"line_start":325,"line_end":325,"column_start":8,"column_end":15},"name":"inf_sup","qualname":"::inf_sup","value":"fn <T> (a: &T, b: &T) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Returns simultaneously the infimum and supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns simultaneously the infimum and supremum of `a` and `b`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8466,"byte_end":8533,"line_start":323,"line_end":323,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8534,"byte_end":8543,"line_start":324,"line_end":324,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7933},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8695,"byte_end":8706,"line_start":331,"line_end":331,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::partial_cmp","value":"fn <T> (a: &T, b: &T) -> Option<Ordering>","parent":null,"children":[],"decl_id":null,"docs":" Compare `a` and `b` using a partial ordering relation.\n","sig":null,"attributes":[{"value":"/ Compare `a` and `b` using a partial ordering relation.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8619,"byte_end":8677,"line_start":329,"line_end":329,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8678,"byte_end":8687,"line_start":330,"line_end":330,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7935},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8862,"byte_end":8872,"line_start":337,"line_end":337,"column_start":8,"column_end":18},"name":"partial_lt","qualname":"::partial_lt","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a < b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a < b`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8782,"byte_end":8844,"line_start":335,"line_end":335,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8845,"byte_end":8854,"line_start":336,"line_end":336,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7937},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9008,"byte_end":9018,"line_start":343,"line_end":343,"column_start":8,"column_end":18},"name":"partial_le","qualname":"::partial_le","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a <= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a <= b`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8927,"byte_end":8990,"line_start":341,"line_end":341,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":8991,"byte_end":9000,"line_start":342,"line_end":342,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7939},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9153,"byte_end":9163,"line_start":349,"line_end":349,"column_start":8,"column_end":18},"name":"partial_gt","qualname":"::partial_gt","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a > b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a > b`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9073,"byte_end":9135,"line_start":347,"line_end":347,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9136,"byte_end":9145,"line_start":348,"line_end":348,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7941},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9299,"byte_end":9309,"line_start":355,"line_end":355,"column_start":8,"column_end":18},"name":"partial_ge","qualname":"::partial_ge","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a >= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a >= b`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9218,"byte_end":9281,"line_start":353,"line_end":353,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9282,"byte_end":9291,"line_start":354,"line_end":354,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7943},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9443,"byte_end":9454,"line_start":361,"line_end":361,"column_start":8,"column_end":19},"name":"partial_min","qualname":"::partial_min","value":"fn <'a, T> (a: &'a T, b: &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the minimum of `a` and `b` if they are comparable.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9364,"byte_end":9425,"line_start":359,"line_end":359,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9426,"byte_end":9435,"line_start":360,"line_end":360,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7946},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9767,"byte_end":9778,"line_start":374,"line_end":374,"column_start":8,"column_end":19},"name":"partial_max","qualname":"::partial_max","value":"fn <'a, T> (a: &'a T, b: &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the maximum of `a` and `b` if they are comparable.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9688,"byte_end":9749,"line_start":372,"line_end":372,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":9750,"byte_end":9759,"line_start":373,"line_end":373,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7949},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10136,"byte_end":10149,"line_start":388,"line_end":388,"column_start":8,"column_end":21},"name":"partial_clamp","qualname":"::partial_clamp","value":"fn <'a, T> (value: &'a T, min: &'a T, max: &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n `min` or `max`.\n","sig":null,"attributes":[{"value":"/ Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10009,"byte_end":10098,"line_start":385,"line_end":385,"column_start":1,"column_end":90}},{"value":"/ `min` or `max`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10099,"byte_end":10118,"line_start":386,"line_end":386,"column_start":1,"column_end":20}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10119,"byte_end":10128,"line_start":387,"line_end":387,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7952},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10623,"byte_end":10636,"line_start":404,"line_end":404,"column_start":8,"column_end":21},"name":"partial_sort2","qualname":"::partial_sort2","value":"fn <'a, T> (a: &'a T, b: &'a T) -> Option<(&'a T, &'a T)>","parent":null,"children":[],"decl_id":null,"docs":" Sorts two values in increasing order using a partial ordering.\n","sig":null,"attributes":[{"value":"/ Sorts two values in increasing order using a partial ordering.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10539,"byte_end":10605,"line_start":402,"line_end":402,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10606,"byte_end":10615,"line_start":403,"line_end":403,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7955},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11100,"byte_end":11111,"line_start":426,"line_end":426,"column_start":8,"column_end":19},"name":"try_inverse","qualname":"::try_inverse","value":"fn <M> (m: &M) -> Option<M>","parent":null,"children":[],"decl_id":null,"docs":" Tries to gets an inverted copy of a square matrix.","sig":null,"attributes":[{"value":"/ Tries to gets an inverted copy of a square matrix.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10905,"byte_end":10959,"line_start":419,"line_end":419,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10960,"byte_end":10963,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10964,"byte_end":10979,"line_start":421,"line_end":421,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10980,"byte_end":10983,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ * [`inverse`](fn.inverse.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":10984,"byte_end":11018,"line_start":423,"line_end":423,"column_start":1,"column_end":35}},{"value":"deprecated(note = \"use the `.try_inverse()` method instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11019,"byte_end":11082,"line_start":424,"line_end":424,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11083,"byte_end":11092,"line_start":425,"line_end":425,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7957},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11406,"byte_end":11413,"line_start":437,"line_end":437,"column_start":8,"column_end":15},"name":"inverse","qualname":"::inverse","value":"fn <M> (m: &M) -> M","parent":null,"children":[],"decl_id":null,"docs":" Computes the multiplicative inverse of an (always invertible) algebraic entity.","sig":null,"attributes":[{"value":"/ Computes the multiplicative inverse of an (always invertible) algebraic entity.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11178,"byte_end":11261,"line_start":430,"line_end":430,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11262,"byte_end":11265,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11266,"byte_end":11281,"line_start":432,"line_end":432,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11282,"byte_end":11285,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ * [`try_inverse`](fn.try_inverse.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11286,"byte_end":11328,"line_start":434,"line_end":434,"column_start":1,"column_end":43}},{"value":"deprecated(note = \"use the `.inverse()` method instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11329,"byte_end":11388,"line_start":435,"line_end":435,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11389,"byte_end":11398,"line_start":436,"line_end":436,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7959},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11887,"byte_end":11890,"line_start":455,"line_end":455,"column_start":8,"column_end":11},"name":"dot","qualname":"::dot","value":"fn <V> (a: &V, b: &V) -> V::Field","parent":null,"children":[],"decl_id":null,"docs":" Computes the dot product of two vectors.","sig":null,"attributes":[{"value":"/ Computes the dot product of two vectors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11523,"byte_end":11567,"line_start":445,"line_end":445,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11568,"byte_end":11571,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ ## Deprecated","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11572,"byte_end":11589,"line_start":447,"line_end":447,"column_start":1,"column_end":18}},{"value":"/ Use these methods instead:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11590,"byte_end":11620,"line_start":448,"line_end":448,"column_start":1,"column_end":31}},{"value":"/   - [Matrix::dot]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11621,"byte_end":11642,"line_start":449,"line_end":449,"column_start":1,"column_end":22}},{"value":"/   - [Quaternion::dot]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11643,"byte_end":11668,"line_start":450,"line_end":450,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11669,"byte_end":11672,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ Or, use [FiniteDimVectorSpace::dot](https://docs.rs/alga/0.7.2/alga/linear/trait.FiniteDimVectorSpace.html#tymethod.dot).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11673,"byte_end":11798,"line_start":452,"line_end":452,"column_start":1,"column_end":126}},{"value":"deprecated(note = \"use `Matrix::dot` or `Quaternion::dot` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11799,"byte_end":11869,"line_start":453,"line_end":453,"column_start":1,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11870,"byte_end":11879,"line_start":454,"line_end":454,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7961},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12249,"byte_end":12254,"line_start":467,"line_end":467,"column_start":8,"column_end":13},"name":"angle","qualname":"::angle","value":"fn <V> (a: &V, b: &V) -> V::RealField","parent":null,"children":[],"decl_id":null,"docs":" Computes the smallest angle between two vectors.","sig":null,"attributes":[{"value":"/ Computes the smallest angle between two vectors.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":11960,"byte_end":12012,"line_start":459,"line_end":459,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12013,"byte_end":12016,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ ## Deprecated","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12017,"byte_end":12034,"line_start":461,"line_end":461,"column_start":1,"column_end":18}},{"value":"/ Use [Matrix::angle] instead.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12035,"byte_end":12067,"line_start":462,"line_end":462,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12068,"byte_end":12071,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ Or, use [InnerSpace::angle](https://docs.rs/alga/0.7.2/alga/linear/trait.InnerSpace.html#method.angle).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12072,"byte_end":12179,"line_start":464,"line_end":464,"column_start":1,"column_end":108}},{"value":"deprecated(note = \"use `Matrix::angle` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12180,"byte_end":12231,"line_start":465,"line_end":465,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12232,"byte_end":12241,"line_start":466,"line_end":466,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7963},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12859,"byte_end":12863,"line_start":491,"line_end":491,"column_start":8,"column_end":12},"name":"norm","qualname":"::norm","value":"fn <V> (v: &V) -> V::RealField","parent":null,"children":[],"decl_id":null,"docs":" Computes the L2 (Euclidean) norm of a vector.","sig":null,"attributes":[{"value":"/ Computes the L2 (Euclidean) norm of a vector.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12344,"byte_end":12393,"line_start":475,"line_end":475,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12394,"byte_end":12397,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12398,"byte_end":12413,"line_start":477,"line_end":477,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12414,"byte_end":12417,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ * [`magnitude`](fn.magnitude.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12418,"byte_end":12456,"line_start":479,"line_end":479,"column_start":1,"column_end":39}},{"value":"/ * [`magnitude_squared`](fn.magnitude_squared.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12457,"byte_end":12511,"line_start":480,"line_end":480,"column_start":1,"column_end":55}},{"value":"/ * [`norm_squared`](fn.norm_squared.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12512,"byte_end":12556,"line_start":481,"line_end":481,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12557,"byte_end":12560,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12561,"byte_end":12577,"line_start":483,"line_end":483,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12578,"byte_end":12608,"line_start":484,"line_end":484,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::norm]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12609,"byte_end":12629,"line_start":485,"line_end":485,"column_start":1,"column_end":21}},{"value":"/ * [Quaternion::norm]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12630,"byte_end":12654,"line_start":486,"line_end":486,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12655,"byte_end":12658,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::norm](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.norm).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12659,"byte_end":12768,"line_start":488,"line_end":488,"column_start":1,"column_end":110}},{"value":"deprecated(note = \"use `Matrix::norm` or `Quaternion::norm` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12769,"byte_end":12841,"line_start":489,"line_end":489,"column_start":1,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12842,"byte_end":12851,"line_start":490,"line_end":490,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7965},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13482,"byte_end":13494,"line_start":511,"line_end":511,"column_start":8,"column_end":20},"name":"norm_squared","qualname":"::norm_squared","value":"fn <V> (v: &V) -> V::RealField","parent":null,"children":[],"decl_id":null,"docs":" Computes the squared L2 (Euclidean) norm of the vector `v`.","sig":null,"attributes":[{"value":"/ Computes the squared L2 (Euclidean) norm of the vector `v`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12921,"byte_end":12984,"line_start":495,"line_end":495,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12985,"byte_end":12988,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":12989,"byte_end":13004,"line_start":497,"line_end":497,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13005,"byte_end":13008,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ * [`magnitude`](fn.magnitude.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13009,"byte_end":13047,"line_start":499,"line_end":499,"column_start":1,"column_end":39}},{"value":"/ * [`magnitude_squared`](fn.magnitude_squared.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13048,"byte_end":13102,"line_start":500,"line_end":500,"column_start":1,"column_end":55}},{"value":"/ * [`norm`](fn.norm.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13103,"byte_end":13131,"line_start":501,"line_end":501,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13132,"byte_end":13135,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13136,"byte_end":13152,"line_start":503,"line_end":503,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13153,"byte_end":13183,"line_start":504,"line_end":504,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::norm_squared]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13184,"byte_end":13212,"line_start":505,"line_end":505,"column_start":1,"column_end":29}},{"value":"/ * [Quaternion::norm_squared]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13213,"byte_end":13245,"line_start":506,"line_end":506,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13246,"byte_end":13249,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::norm_squared](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.norm_squared).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13250,"byte_end":13375,"line_start":508,"line_end":508,"column_start":1,"column_end":126}},{"value":"deprecated(note =\n             \"use `Matrix::norm_squared` or `Quaternion::norm_squared` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13376,"byte_end":13464,"line_start":509,"line_end":509,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13465,"byte_end":13474,"line_start":510,"line_end":510,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7967},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14089,"byte_end":14098,"line_start":531,"line_end":531,"column_start":8,"column_end":17},"name":"magnitude","qualname":"::magnitude","value":"fn <V> (v: &V) -> V::RealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for [`norm`](fn.norm.html), aka length.","sig":null,"attributes":[{"value":"/ A synonym for [`norm`](fn.norm.html), aka length.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13560,"byte_end":13613,"line_start":515,"line_end":515,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13614,"byte_end":13617,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13618,"byte_end":13633,"line_start":517,"line_end":517,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13634,"byte_end":13637,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ * [`magnitude_squared`](fn.magnitude_squared.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13638,"byte_end":13692,"line_start":519,"line_end":519,"column_start":1,"column_end":55}},{"value":"/ * [`norm`](fn.norm.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13693,"byte_end":13721,"line_start":520,"line_end":520,"column_start":1,"column_end":29}},{"value":"/ * [`norm_squared`](fn.norm_squared.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13722,"byte_end":13766,"line_start":521,"line_end":521,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13767,"byte_end":13770,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13771,"byte_end":13787,"line_start":523,"line_end":523,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13788,"byte_end":13818,"line_start":524,"line_end":524,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::magnitude]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13819,"byte_end":13844,"line_start":525,"line_end":525,"column_start":1,"column_end":26}},{"value":"/ * [Quaternion::magnitude]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13845,"byte_end":13874,"line_start":526,"line_end":526,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13875,"byte_end":13878,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::norm](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.norm).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13879,"byte_end":13988,"line_start":528,"line_end":528,"column_start":1,"column_end":110}},{"value":"deprecated(note =\n             \"use `Matrix::magnitude` or `Quaternion::magnitude` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":13989,"byte_end":14071,"line_start":529,"line_end":529,"column_start":1,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14072,"byte_end":14081,"line_start":530,"line_end":530,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7969},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14746,"byte_end":14763,"line_start":552,"line_end":552,"column_start":8,"column_end":25},"name":"magnitude_squared","qualname":"::magnitude_squared","value":"fn <V> (v: &V) -> V::RealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for [`norm_squared`](fn.norm_squared.html),\n  aka length squared.","sig":null,"attributes":[{"value":"/ A synonym for [`norm_squared`](fn.norm_squared.html),","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14156,"byte_end":14213,"line_start":535,"line_end":535,"column_start":1,"column_end":58}},{"value":"/  aka length squared.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14214,"byte_end":14238,"line_start":536,"line_end":536,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14239,"byte_end":14242,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14243,"byte_end":14258,"line_start":538,"line_end":538,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14259,"byte_end":14262,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ * [`magnitude`](fn.magnitude.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14263,"byte_end":14301,"line_start":540,"line_end":540,"column_start":1,"column_end":39}},{"value":"/ * [`norm`](fn.norm.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14302,"byte_end":14330,"line_start":541,"line_end":541,"column_start":1,"column_end":29}},{"value":"/ * [`norm_squared`](fn.norm_squared.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14331,"byte_end":14375,"line_start":542,"line_end":542,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14376,"byte_end":14379,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14380,"byte_end":14396,"line_start":544,"line_end":544,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14397,"byte_end":14427,"line_start":545,"line_end":545,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::magnitude_squared]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14428,"byte_end":14461,"line_start":546,"line_end":546,"column_start":1,"column_end":34}},{"value":"/ * [Quaternion::magnitude_squared]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14462,"byte_end":14499,"line_start":547,"line_end":547,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14500,"byte_end":14503,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::norm_squared](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.norm_squared).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14504,"byte_end":14629,"line_start":549,"line_end":549,"column_start":1,"column_end":126}},{"value":"deprecated(note =\n             \"use `Matrix::magnitude_squared` or `Quaternion::magnitude_squared` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14630,"byte_end":14728,"line_start":550,"line_end":550,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14729,"byte_end":14738,"line_start":551,"line_end":551,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7971},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15216,"byte_end":15225,"line_start":566,"line_end":566,"column_start":8,"column_end":17},"name":"normalize","qualname":"::normalize","value":"fn <V> (v: &V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Computes the normalized version of the vector `v`.","sig":null,"attributes":[{"value":"/ Computes the normalized version of the vector `v`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14829,"byte_end":14883,"line_start":556,"line_end":556,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14884,"byte_end":14887,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14888,"byte_end":14904,"line_start":558,"line_end":558,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14905,"byte_end":14935,"line_start":559,"line_end":559,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::normalize]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14936,"byte_end":14961,"line_start":560,"line_end":560,"column_start":1,"column_end":26}},{"value":"/ * [Quaternion::normalize]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14962,"byte_end":14991,"line_start":561,"line_end":561,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14992,"byte_end":14995,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::normalize](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.normalize).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":14996,"byte_end":15115,"line_start":563,"line_end":563,"column_start":1,"column_end":120}},{"value":"deprecated(note =\n             \"use `Matrix::normalize` or `Quaternion::normalize` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15116,"byte_end":15198,"line_start":564,"line_end":564,"column_start":1,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15199,"byte_end":15208,"line_start":565,"line_end":565,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7973},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15745,"byte_end":15758,"line_start":580,"line_end":580,"column_start":8,"column_end":21},"name":"try_normalize","qualname":"::try_normalize","value":"fn <V> (v: &V, min_norm: V::RealField) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Computes the normalized version of the vector `v` or returns `None` if its norm is smaller than `min_norm`.","sig":null,"attributes":[{"value":"/ Computes the normalized version of the vector `v` or returns `None` if its norm is smaller than `min_norm`.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15277,"byte_end":15388,"line_start":570,"line_end":570,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15389,"byte_end":15392,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15393,"byte_end":15409,"line_start":572,"line_end":572,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15410,"byte_end":15440,"line_start":573,"line_end":573,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::try_normalize]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15441,"byte_end":15470,"line_start":574,"line_end":574,"column_start":1,"column_end":30}},{"value":"/ * [Quaternion::try_normalize]","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15471,"byte_end":15504,"line_start":575,"line_end":575,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15505,"byte_end":15508,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::try_normalize](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.try_normalize).","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15509,"byte_end":15636,"line_start":577,"line_end":577,"column_start":1,"column_end":128}},{"value":"deprecated(note =\n             \"use `Matrix::try_normalize` or `Quaternion::try_normalize` instead\")","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15637,"byte_end":15727,"line_start":578,"line_end":578,"column_start":1,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15728,"byte_end":15737,"line_start":579,"line_end":579,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7975},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16045,"byte_end":16051,"line_start":596,"line_end":596,"column_start":8,"column_end":14},"name":"center","qualname":"::center","value":"fn <P> (p1: &P, p2: &P) -> P","parent":null,"children":[],"decl_id":null,"docs":" The center of two points.","sig":null,"attributes":[{"value":"/ The center of two points.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15888,"byte_end":15917,"line_start":589,"line_end":589,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15918,"byte_end":15921,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15922,"byte_end":15937,"line_start":591,"line_end":591,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15938,"byte_end":15941,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15942,"byte_end":15976,"line_start":593,"line_end":593,"column_start":1,"column_end":35}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":15977,"byte_end":16027,"line_start":594,"line_end":594,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16028,"byte_end":16037,"line_start":595,"line_end":595,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7977},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16335,"byte_end":16343,"line_start":607,"line_end":607,"column_start":8,"column_end":16},"name":"distance","qualname":"::distance","value":"fn <P> (p1: &P, p2: &P) -> P::RealField","parent":null,"children":[],"decl_id":null,"docs":" The distance between two points.","sig":null,"attributes":[{"value":"/ The distance between two points.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16175,"byte_end":16211,"line_start":600,"line_end":600,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16212,"byte_end":16215,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16216,"byte_end":16231,"line_start":602,"line_end":602,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16232,"byte_end":16235,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16236,"byte_end":16266,"line_start":604,"line_end":604,"column_start":1,"column_end":31}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16267,"byte_end":16317,"line_start":605,"line_end":605,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16318,"byte_end":16327,"line_start":606,"line_end":606,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7979},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16601,"byte_end":16617,"line_start":618,"line_end":618,"column_start":8,"column_end":24},"name":"distance_squared","qualname":"::distance_squared","value":"fn <P> (p1: &P, p2: &P) -> P::RealField","parent":null,"children":[],"decl_id":null,"docs":" The squared distance between two points.","sig":null,"attributes":[{"value":"/ The squared distance between two points.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16449,"byte_end":16493,"line_start":611,"line_end":611,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16494,"byte_end":16497,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16498,"byte_end":16513,"line_start":613,"line_end":613,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16514,"byte_end":16517,"line_start":614,"line_end":614,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16518,"byte_end":16548,"line_start":615,"line_end":615,"column_start":1,"column_end":31}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16549,"byte_end":16583,"line_start":616,"line_end":616,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16584,"byte_end":16593,"line_start":617,"line_end":617,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7981},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17206,"byte_end":17213,"line_start":637,"line_end":637,"column_start":8,"column_end":15},"name":"convert","qualname":"::convert","value":"fn <From, To> (t: From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16746,"byte_end":16820,"line_start":625,"line_end":625,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16821,"byte_end":16824,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ See also [`try_convert`](fn.try_convert.html) for conversion to more specific types.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16825,"byte_end":16913,"line_start":627,"line_end":627,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16914,"byte_end":16917,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16918,"byte_end":16933,"line_start":629,"line_end":629,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16934,"byte_end":16937,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16938,"byte_end":16978,"line_start":631,"line_end":631,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":16979,"byte_end":17039,"line_start":632,"line_end":632,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17040,"byte_end":17098,"line_start":633,"line_end":633,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17099,"byte_end":17139,"line_start":634,"line_end":634,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17140,"byte_end":17188,"line_start":635,"line_end":635,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17189,"byte_end":17198,"line_start":636,"line_end":636,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7984},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17712,"byte_end":17723,"line_start":653,"line_end":653,"column_start":8,"column_end":19},"name":"try_convert","qualname":"::try_convert","value":"fn <From, To> (t: From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17286,"byte_end":17343,"line_start":641,"line_end":641,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17344,"byte_end":17347,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ See also [`convert`](fn.convert.html) for conversion to more general types.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17348,"byte_end":17427,"line_start":643,"line_end":643,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17428,"byte_end":17431,"line_start":644,"line_end":644,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17432,"byte_end":17447,"line_start":645,"line_end":645,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17448,"byte_end":17451,"line_start":646,"line_end":646,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17452,"byte_end":17484,"line_start":647,"line_end":647,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17485,"byte_end":17525,"line_start":648,"line_end":648,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17526,"byte_end":17586,"line_start":649,"line_end":649,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17587,"byte_end":17645,"line_start":650,"line_end":650,"column_start":1,"column_end":59}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17646,"byte_end":17694,"line_start":651,"line_end":651,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17695,"byte_end":17704,"line_start":652,"line_end":652,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7987},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18177,"byte_end":18191,"line_start":668,"line_end":668,"column_start":8,"column_end":22},"name":"is_convertible","qualname":"::is_convertible","value":"fn <From, To> (t: &From) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if [`try_convert`](fn.try_convert.html) will succeed without\n actually performing the conversion.","sig":null,"attributes":[{"value":"/ Indicates if [`try_convert`](fn.try_convert.html) will succeed without","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17796,"byte_end":17870,"line_start":657,"line_end":657,"column_start":1,"column_end":75}},{"value":"/ actually performing the conversion.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17871,"byte_end":17910,"line_start":658,"line_end":658,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17911,"byte_end":17914,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17915,"byte_end":17930,"line_start":660,"line_end":660,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17931,"byte_end":17934,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17935,"byte_end":17967,"line_start":662,"line_end":662,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":17968,"byte_end":18008,"line_start":663,"line_end":663,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18009,"byte_end":18069,"line_start":664,"line_end":664,"column_start":1,"column_end":61}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18070,"byte_end":18110,"line_start":665,"line_end":665,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18111,"byte_end":18159,"line_start":666,"line_end":666,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18160,"byte_end":18169,"line_start":667,"line_end":667,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7990},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18695,"byte_end":18712,"line_start":684,"line_end":684,"column_start":15,"column_end":32},"name":"convert_unchecked","qualname":"::convert_unchecked","value":"fn <From, To> (t: From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18262,"byte_end":18329,"line_start":672,"line_end":672,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18330,"byte_end":18362,"line_start":673,"line_end":673,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18363,"byte_end":18366,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18367,"byte_end":18382,"line_start":675,"line_end":675,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18383,"byte_end":18386,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18387,"byte_end":18419,"line_start":677,"line_end":677,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18420,"byte_end":18460,"line_start":678,"line_end":678,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18461,"byte_end":18521,"line_start":679,"line_end":679,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18522,"byte_end":18580,"line_start":680,"line_end":680,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18581,"byte_end":18621,"line_start":681,"line_end":681,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18622,"byte_end":18670,"line_start":682,"line_end":682,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18671,"byte_end":18680,"line_start":683,"line_end":683,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7993},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19146,"byte_end":19157,"line_start":698,"line_end":698,"column_start":8,"column_end":19},"name":"convert_ref","qualname":"::convert_ref","value":"fn <From, To> (t: &From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18787,"byte_end":18861,"line_start":688,"line_end":688,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18862,"byte_end":18865,"line_start":689,"line_end":689,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18866,"byte_end":18881,"line_start":690,"line_end":690,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18882,"byte_end":18885,"line_start":691,"line_end":691,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18886,"byte_end":18918,"line_start":692,"line_end":692,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18919,"byte_end":18979,"line_start":693,"line_end":693,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":18980,"byte_end":19038,"line_start":694,"line_end":694,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19039,"byte_end":19079,"line_start":695,"line_end":695,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19080,"byte_end":19128,"line_start":696,"line_end":696,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19129,"byte_end":19138,"line_start":697,"line_end":697,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7996},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19564,"byte_end":19579,"line_start":712,"line_end":712,"column_start":8,"column_end":23},"name":"try_convert_ref","qualname":"::try_convert_ref","value":"fn <From, To> (t: &From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19230,"byte_end":19287,"line_start":702,"line_end":702,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19288,"byte_end":19291,"line_start":703,"line_end":703,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19292,"byte_end":19307,"line_start":704,"line_end":704,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19308,"byte_end":19311,"line_start":705,"line_end":705,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19312,"byte_end":19344,"line_start":706,"line_end":706,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19345,"byte_end":19385,"line_start":707,"line_end":707,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19386,"byte_end":19446,"line_start":708,"line_end":708,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19447,"byte_end":19505,"line_start":709,"line_end":709,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19506,"byte_end":19546,"line_start":710,"line_end":710,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19547,"byte_end":19556,"line_start":711,"line_end":711,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":7999},"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":20025,"byte_end":20046,"line_start":727,"line_end":727,"column_start":15,"column_end":36},"name":"convert_ref_unchecked","qualname":"::convert_ref_unchecked","value":"fn <From, To> (t: &From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19653,"byte_end":19720,"line_start":716,"line_end":716,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19721,"byte_end":19753,"line_start":717,"line_end":717,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19754,"byte_end":19757,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19758,"byte_end":19773,"line_start":719,"line_end":719,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19774,"byte_end":19777,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19778,"byte_end":19810,"line_start":721,"line_end":721,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19811,"byte_end":19851,"line_start":722,"line_end":722,"column_start":1,"column_end":41}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19852,"byte_end":19910,"line_start":723,"line_end":723,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19911,"byte_end":19951,"line_start":724,"line_end":724,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":19952,"byte_end":20000,"line_start":725,"line_end":725,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":20001,"byte_end":20010,"line_start":726,"line_end":726,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":24185,"byte_end":24201,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":24823,"byte_end":24839,"line_start":96,"line_end":96,"column_start":57,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25686,"byte_end":25692,"line_start":18,"line_end":18,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26662,"byte_end":26668,"line_start":51,"line_end":51,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30399,"byte_end":30405,"line_start":196,"line_end":196,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31615,"byte_end":31621,"line_start":233,"line_end":233,"column_start":76,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":32562,"byte_end":32568,"line_start":266,"line_end":266,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":140},{"krate":0,"index":145},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":40946,"byte_end":40952,"line_start":490,"line_end":490,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":170},{"krate":0,"index":176},{"krate":0,"index":181},{"krate":0,"index":187},{"krate":0,"index":193},{"krate":0,"index":200},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":53093,"byte_end":53099,"line_start":856,"line_end":856,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":225},{"krate":0,"index":231},{"krate":0,"index":236},{"krate":0,"index":244},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":65102,"byte_end":65108,"line_start":1202,"line_end":1202,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":269},{"krate":0,"index":274},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70371,"byte_end":70383,"line_start":1349,"line_end":1349,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":297},{"krate":0,"index":303},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78477,"byte_end":78492,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78799,"byte_end":78814,"line_start":21,"line_end":21,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78888,"byte_end":78903,"line_start":25,"line_end":25,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78977,"byte_end":78992,"line_start":29,"line_end":29,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80591,"byte_end":80606,"line_start":78,"line_end":78,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80688,"byte_end":80703,"line_start":82,"line_end":82,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80785,"byte_end":80800,"line_start":86,"line_end":86,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":88987,"byte_end":89003,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":89983,"byte_end":89999,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":90927,"byte_end":90943,"line_start":110,"line_end":110,"column_start":58,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":91890,"byte_end":91906,"line_start":145,"line_end":145,"column_start":84,"column_end":100},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":92799,"byte_end":92815,"line_start":176,"line_end":176,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":93662,"byte_end":93678,"line_start":205,"line_end":205,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":94558,"byte_end":94574,"line_start":235,"line_end":235,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":95005,"byte_end":95021,"line_start":251,"line_end":251,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":95452,"byte_end":95468,"line_start":267,"line_end":267,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":95903,"byte_end":95919,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":96763,"byte_end":96770,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97558,"byte_end":97565,"line_start":51,"line_end":51,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97593,"byte_end":97600,"line_start":52,"line_end":52,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98465,"byte_end":98472,"line_start":75,"line_end":75,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98727,"byte_end":98734,"line_start":92,"line_end":92,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98883,"byte_end":98890,"line_start":101,"line_end":101,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102092,"byte_end":102094,"line_start":213,"line_end":213,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102380,"byte_end":102382,"line_start":231,"line_end":231,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102501,"byte_end":102503,"line_start":240,"line_end":240,"column_start":28,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104882,"byte_end":104886,"line_start":307,"line_end":307,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":105449,"byte_end":105453,"line_start":320,"line_end":320,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":106315,"byte_end":106319,"line_start":347,"line_end":347,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":106963,"byte_end":106967,"line_start":366,"line_end":366,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":107147,"byte_end":107151,"line_start":371,"line_end":371,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":107286,"byte_end":107290,"line_start":377,"line_end":377,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":107718,"byte_end":107722,"line_start":397,"line_end":397,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":107934,"byte_end":107938,"line_start":408,"line_end":408,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":111812,"byte_end":111819,"line_start":113,"line_end":113,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":112037,"byte_end":112044,"line_start":122,"line_end":122,"column_start":76,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":112704,"byte_end":112711,"line_start":147,"line_end":147,"column_start":85,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":113125,"byte_end":113135,"line_start":162,"line_end":162,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":113506,"byte_end":113516,"line_start":179,"line_end":179,"column_start":79,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":114184,"byte_end":114194,"line_start":204,"line_end":204,"column_start":88,"column_end":98},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":114589,"byte_end":114599,"line_start":224,"line_end":224,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":114820,"byte_end":114830,"line_start":233,"line_end":233,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":115493,"byte_end":115503,"line_start":258,"line_end":258,"column_start":85,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":115923,"byte_end":115936,"line_start":273,"line_end":273,"column_start":66,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":116310,"byte_end":116323,"line_start":290,"line_end":290,"column_start":79,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":116994,"byte_end":117007,"line_start":315,"line_end":315,"column_start":88,"column_end":101},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":117934,"byte_end":117940,"line_start":23,"line_end":23,"column_start":71,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":118169,"byte_end":118175,"line_start":33,"line_end":33,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":118640,"byte_end":118646,"line_start":53,"line_end":53,"column_start":77,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":118861,"byte_end":118867,"line_start":61,"line_end":61,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":119276,"byte_end":119282,"line_start":83,"line_end":83,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":119884,"byte_end":119890,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":131518,"byte_end":131526,"line_start":377,"line_end":377,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":131793,"byte_end":131801,"line_start":387,"line_end":387,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":132870,"byte_end":132878,"line_start":417,"line_end":417,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":133182,"byte_end":133190,"line_start":427,"line_end":427,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":138701,"byte_end":138707,"line_start":600,"line_end":600,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":139174,"byte_end":139180,"line_start":617,"line_end":617,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":139778,"byte_end":139784,"line_start":636,"line_end":636,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":140271,"byte_end":140277,"line_start":653,"line_end":653,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":140831,"byte_end":140837,"line_start":672,"line_end":672,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":921},{"krate":0,"index":925},{"krate":0,"index":933},{"krate":0,"index":941},{"krate":0,"index":949},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146012,"byte_end":146018,"line_start":829,"line_end":829,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146531,"byte_end":146538,"line_start":849,"line_end":849,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146846,"byte_end":146853,"line_start":859,"line_end":859,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":147157,"byte_end":147163,"line_start":869,"line_end":869,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":184805,"byte_end":184812,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186059,"byte_end":186066,"line_start":68,"line_end":68,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186289,"byte_end":186296,"line_start":76,"line_end":76,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189599,"byte_end":189611,"line_start":156,"line_end":156,"column_start":57,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1879},{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":192300,"byte_end":192312,"line_start":243,"line_end":243,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":195176,"byte_end":195188,"line_start":324,"line_end":324,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":196773,"byte_end":196780,"line_start":368,"line_end":368,"column_start":88,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":197922,"byte_end":197928,"line_start":17,"line_end":17,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":206335,"byte_end":206343,"line_start":28,"line_end":28,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215543,"byte_end":215550,"line_start":285,"line_end":285,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":235036,"byte_end":235044,"line_start":720,"line_end":720,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2031},{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":235345,"byte_end":235352,"line_start":736,"line_end":736,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":235576,"byte_end":235584,"line_start":747,"line_end":747,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":235925,"byte_end":235933,"line_start":763,"line_end":763,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":236999,"byte_end":237007,"line_start":798,"line_end":798,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":244718,"byte_end":244725,"line_start":989,"line_end":989,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":248382,"byte_end":248395,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":250407,"byte_end":250423,"line_start":65,"line_end":65,"column_start":5,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":253366,"byte_end":253379,"line_start":136,"line_end":136,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254534,"byte_end":254550,"line_start":162,"line_end":162,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2118},{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":262377,"byte_end":262385,"line_start":26,"line_end":26,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":272944,"byte_end":272950,"line_start":341,"line_end":341,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2218}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":273416,"byte_end":273422,"line_start":358,"line_end":358,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":273809,"byte_end":273815,"line_start":372,"line_end":372,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":274158,"byte_end":274164,"line_start":385,"line_end":385,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":274636,"byte_end":274642,"line_start":402,"line_end":402,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":275035,"byte_end":275041,"line_start":416,"line_end":416,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":276093,"byte_end":276099,"line_start":21,"line_end":21,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":278701,"byte_end":278707,"line_start":95,"line_end":95,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2319},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":284275,"byte_end":284281,"line_start":256,"line_end":256,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":2336}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":285488,"byte_end":285494,"line_start":294,"line_end":294,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":302641,"byte_end":302648,"line_start":800,"line_end":800,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":303428,"byte_end":303436,"line_start":817,"line_end":817,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":304382,"byte_end":304390,"line_start":838,"line_end":838,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2387}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":307406,"byte_end":307412,"line_start":939,"line_end":939,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":308922,"byte_end":308928,"line_start":987,"line_end":987,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":309540,"byte_end":309546,"line_start":1008,"line_end":1008,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":312843,"byte_end":312848,"line_start":50,"line_end":50,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":313919,"byte_end":313928,"line_start":82,"line_end":82,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":314881,"byte_end":314890,"line_start":113,"line_end":113,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":315417,"byte_end":315426,"line_start":140,"line_end":140,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":315927,"byte_end":315941,"line_start":166,"line_end":166,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":317337,"byte_end":317344,"line_start":205,"line_end":205,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":318249,"byte_end":318265,"line_start":237,"line_end":237,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324125,"byte_end":324131,"line_start":435,"line_end":435,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2508},{"krate":0,"index":2511},{"krate":0,"index":2514},{"krate":0,"index":2517},{"krate":0,"index":2520},{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":336584,"byte_end":336590,"line_start":84,"line_end":84,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":337972,"byte_end":337978,"line_start":139,"line_end":139,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338380,"byte_end":338386,"line_start":151,"line_end":151,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2686},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2705},{"krate":0,"index":2710},{"krate":0,"index":2717},{"krate":0,"index":2720},{"krate":0,"index":2727},{"krate":0,"index":2731}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":352785,"byte_end":352791,"line_start":626,"line_end":626,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2748},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2762}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":360556,"byte_end":360562,"line_start":862,"line_end":862,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":360943,"byte_end":360949,"line_start":872,"line_end":872,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361372,"byte_end":361378,"line_start":882,"line_end":882,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361637,"byte_end":361643,"line_start":890,"line_end":890,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2793}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361908,"byte_end":361914,"line_start":898,"line_end":898,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":362388,"byte_end":362394,"line_start":916,"line_end":916,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365077,"byte_end":365083,"line_start":999,"line_end":999,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365712,"byte_end":365718,"line_start":1019,"line_end":1019,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2835},{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":366827,"byte_end":366839,"line_start":1055,"line_end":1055,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2846}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":368307,"byte_end":368319,"line_start":1106,"line_end":1106,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2851},{"krate":0,"index":2852}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":369244,"byte_end":369250,"line_start":1131,"line_end":1131,"column_start":83,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":369965,"byte_end":369971,"line_start":1147,"line_end":1147,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2862},{"krate":0,"index":2863}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":370906,"byte_end":370912,"line_start":1173,"line_end":1173,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2869}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":371518,"byte_end":371524,"line_start":1189,"line_end":1189,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2877}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":371988,"byte_end":371994,"line_start":1210,"line_end":1210,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2884},{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":372456,"byte_end":372462,"line_start":1233,"line_end":1233,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2892}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":372948,"byte_end":372954,"line_start":1253,"line_end":1253,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2902},{"krate":0,"index":2904},{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":375574,"byte_end":375580,"line_start":1341,"line_end":1341,"column_start":35,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":375689,"byte_end":375695,"line_start":1347,"line_end":1347,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2918}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":376063,"byte_end":376069,"line_start":1362,"line_end":1362,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":378268,"byte_end":378274,"line_start":1433,"line_end":1433,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2937}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":381633,"byte_end":381639,"line_start":1524,"line_end":1524,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2944}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":382161,"byte_end":382167,"line_start":1544,"line_end":1544,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383024,"byte_end":383030,"line_start":1573,"line_end":1573,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2958}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383771,"byte_end":383775,"line_start":1595,"line_end":1595,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2964},{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":386049,"byte_end":386053,"line_start":1660,"line_end":1660,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":386480,"byte_end":386484,"line_start":1679,"line_end":1679,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2982}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":386985,"byte_end":386989,"line_start":1703,"line_end":1703,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2988},{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":387374,"byte_end":387380,"line_start":1720,"line_end":1720,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":388643,"byte_end":388651,"line_start":26,"line_end":26,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3046}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":388882,"byte_end":388890,"line_start":37,"line_end":37,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3051}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":389129,"byte_end":389137,"line_start":48,"line_end":48,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3057}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":390152,"byte_end":390160,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3063},{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":390406,"byte_end":390414,"line_start":94,"line_end":94,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3069}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":390577,"byte_end":390585,"line_start":102,"line_end":102,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":390748,"byte_end":390756,"line_start":110,"line_end":110,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":391600,"byte_end":391608,"line_start":148,"line_end":148,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":392417,"byte_end":392425,"line_start":185,"line_end":185,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3100},{"krate":0,"index":3101}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":392960,"byte_end":392968,"line_start":203,"line_end":203,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3106},{"krate":0,"index":3107}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":397186,"byte_end":397193,"line_start":330,"line_end":330,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":397408,"byte_end":397415,"line_start":341,"line_end":341,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":398158,"byte_end":398166,"line_start":370,"line_end":370,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":398416,"byte_end":398424,"line_start":381,"line_end":381,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":398666,"byte_end":398674,"line_start":392,"line_end":392,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3134}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":401014,"byte_end":401026,"line_start":51,"line_end":51,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":401278,"byte_end":401290,"line_start":64,"line_end":64,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3182},{"krate":0,"index":3183}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":401585,"byte_end":401597,"line_start":79,"line_end":79,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3188}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":401843,"byte_end":401855,"line_start":92,"line_end":92,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3193}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":402123,"byte_end":402135,"line_start":106,"line_end":106,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":402352,"byte_end":402364,"line_start":116,"line_end":116,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3202}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":402647,"byte_end":402659,"line_start":132,"line_end":132,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":402825,"byte_end":402837,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3211}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":403118,"byte_end":403130,"line_start":155,"line_end":155,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":404225,"byte_end":404237,"line_start":207,"line_end":207,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":404665,"byte_end":404677,"line_start":227,"line_end":227,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":404931,"byte_end":404943,"line_start":237,"line_end":237,"column_start":56,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":412722,"byte_end":412734,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":412849,"byte_end":412861,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3280}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":415516,"byte_end":415531,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3289},{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416121,"byte_end":416133,"line_start":201,"line_end":201,"column_start":82,"column_end":94},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416246,"byte_end":416261,"line_start":202,"line_end":202,"column_start":82,"column_end":97},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416377,"byte_end":416392,"line_start":203,"line_end":203,"column_start":85,"column_end":100},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416520,"byte_end":416532,"line_start":205,"line_end":205,"column_start":96,"column_end":108},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416652,"byte_end":416667,"line_start":206,"line_end":206,"column_start":96,"column_end":111},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416790,"byte_end":416805,"line_start":207,"line_end":207,"column_start":99,"column_end":114},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416884,"byte_end":416890,"line_start":209,"line_end":209,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436971,"byte_end":436976,"line_start":713,"line_end":713,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":437325,"byte_end":437334,"line_start":732,"line_end":732,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":437693,"byte_end":437700,"line_start":751,"line_end":751,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":438027,"byte_end":438036,"line_start":770,"line_end":770,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":438360,"byte_end":438366,"line_start":789,"line_end":789,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3372},{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":439618,"byte_end":439624,"line_start":830,"line_end":830,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3384},{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":440952,"byte_end":440963,"line_start":872,"line_end":872,"column_start":5,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442510,"byte_end":442520,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":444072,"byte_end":444082,"line_start":92,"line_end":92,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3433}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":444267,"byte_end":444277,"line_start":105,"line_end":105,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3444},{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":445199,"byte_end":445209,"line_start":149,"line_end":149,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3449},{"krate":0,"index":3450},{"krate":0,"index":3451},{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":446171,"byte_end":446181,"line_start":198,"line_end":198,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":3461},{"krate":0,"index":3462}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":446516,"byte_end":446526,"line_start":212,"line_end":212,"column_start":69,"column_end":79},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":446681,"byte_end":446691,"line_start":215,"line_end":215,"column_start":72,"column_end":82},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":446840,"byte_end":446850,"line_start":218,"line_end":218,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":3472},{"krate":0,"index":3473}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":447615,"byte_end":447625,"line_start":247,"line_end":247,"column_start":73,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":447784,"byte_end":447794,"line_start":250,"line_end":250,"column_start":76,"column_end":86},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":447908,"byte_end":447918,"line_start":253,"line_end":253,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3483}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":448625,"byte_end":448635,"line_start":271,"line_end":271,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3490}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":449535,"byte_end":449545,"line_start":300,"line_end":300,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450207,"byte_end":450213,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":452452,"byte_end":452458,"line_start":87,"line_end":87,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":453034,"byte_end":453046,"line_start":104,"line_end":104,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3534},{"krate":0,"index":3535}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":454201,"byte_end":454202,"line_start":17,"line_end":17,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":457999,"byte_end":458003,"line_start":56,"line_end":56,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460173,"byte_end":460177,"line_start":113,"line_end":113,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":461207,"byte_end":461211,"line_start":149,"line_end":149,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3587}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":461355,"byte_end":461359,"line_start":161,"line_end":161,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":462987,"byte_end":462991,"line_start":220,"line_end":220,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3595},{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":463158,"byte_end":463162,"line_start":229,"line_end":229,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3599},{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":463528,"byte_end":463534,"line_start":6,"line_end":6,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3621},{"krate":0,"index":3623},{"krate":0,"index":3625}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465439,"byte_end":465445,"line_start":57,"line_end":57,"column_start":80,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":3632},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":3638},{"krate":0,"index":3640},{"krate":0,"index":3642},{"krate":0,"index":3644},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3652},{"krate":0,"index":3654}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":474218,"byte_end":474231,"line_start":32,"line_end":32,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3696},{"krate":0,"index":3700}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":474939,"byte_end":474945,"line_start":51,"line_end":51,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3710},{"krate":0,"index":3715}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":475805,"byte_end":475816,"line_start":72,"line_end":72,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3725},{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":476795,"byte_end":476801,"line_start":98,"line_end":98,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3749},{"krate":0,"index":3751},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":3760}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480544,"byte_end":480550,"line_start":216,"line_end":216,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3766},{"krate":0,"index":3767}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":493263,"byte_end":493268,"line_start":30,"line_end":30,"column_start":70,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3823}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":493516,"byte_end":493521,"line_start":40,"line_end":40,"column_start":38,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":494941,"byte_end":494946,"line_start":94,"line_end":94,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":3838},{"krate":0,"index":3839}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":498568,"byte_end":498573,"line_start":213,"line_end":213,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":498984,"byte_end":498989,"line_start":231,"line_end":231,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3849},{"krate":0,"index":3850}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":499469,"byte_end":499474,"line_start":254,"line_end":254,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3854},{"krate":0,"index":3855}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":499846,"byte_end":499851,"line_start":270,"line_end":270,"column_start":41,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":499944,"byte_end":499949,"line_start":272,"line_end":272,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3862}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":500154,"byte_end":500159,"line_start":281,"line_end":281,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3870}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":500824,"byte_end":500829,"line_start":315,"line_end":315,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3874}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alga.rs","byte_start":501506,"byte_end":501511,"line_start":10,"line_end":10,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3895}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alga.rs","byte_start":501679,"byte_end":501684,"line_start":18,"line_end":18,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alga.rs","byte_start":502217,"byte_end":502222,"line_start":50,"line_end":50,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3908}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alga.rs","byte_start":502467,"byte_end":502472,"line_start":61,"line_end":61,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alga.rs","byte_start":502709,"byte_end":502714,"line_start":72,"line_end":72,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3916}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504015,"byte_end":504020,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3968},{"krate":0,"index":3969},{"krate":0,"index":3970}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":507184,"byte_end":507189,"line_start":115,"line_end":115,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3974},{"krate":0,"index":3975}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":507480,"byte_end":507488,"line_start":129,"line_end":129,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3979}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_conversion.rs","byte_start":510802,"byte_end":510807,"line_start":27,"line_end":27,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4011}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_conversion.rs","byte_start":511501,"byte_end":511506,"line_start":52,"line_end":52,"column_start":62,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_conversion.rs","byte_start":513888,"byte_end":513895,"line_start":133,"line_end":133,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4022}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_conversion.rs","byte_start":514162,"byte_end":514167,"line_start":144,"line_end":144,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_ops.rs","byte_start":516133,"byte_end":516138,"line_start":21,"line_end":21,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4097},{"krate":0,"index":4098}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_ops.rs","byte_start":516353,"byte_end":516358,"line_start":32,"line_end":32,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4102}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_ops.rs","byte_start":516588,"byte_end":516593,"line_start":46,"line_end":46,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4106},{"krate":0,"index":4107}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":524509,"byte_end":524517,"line_start":33,"line_end":33,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":4143}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":524771,"byte_end":524779,"line_start":43,"line_end":43,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":524937,"byte_end":524945,"line_start":50,"line_end":50,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4151}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526452,"byte_end":526460,"line_start":108,"line_end":108,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4155},{"krate":0,"index":4156},{"krate":0,"index":4157},{"krate":0,"index":4158},{"krate":0,"index":4159},{"krate":0,"index":4160},{"krate":0,"index":4161},{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535689,"byte_end":535697,"line_start":355,"line_end":355,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4169},{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538697,"byte_end":538705,"line_start":435,"line_end":435,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538813,"byte_end":538821,"line_start":437,"line_end":437,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4179}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":539007,"byte_end":539015,"line_start":446,"line_end":446,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4183},{"krate":0,"index":4184},{"krate":0,"index":4185}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":539435,"byte_end":539443,"line_start":465,"line_end":465,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4189},{"krate":0,"index":4190}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":539937,"byte_end":539945,"line_start":489,"line_end":489,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4194},{"krate":0,"index":4195}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":540365,"byte_end":540373,"line_start":511,"line_end":511,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4199}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":541874,"byte_end":541882,"line_start":21,"line_end":21,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":542077,"byte_end":542085,"line_start":30,"line_end":30,"column_start":68,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":4237},{"krate":0,"index":4238}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":542384,"byte_end":542392,"line_start":44,"line_end":44,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":4242}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":543102,"byte_end":543110,"line_start":73,"line_end":73,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":4247},{"krate":0,"index":4248}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":543497,"byte_end":543505,"line_start":87,"line_end":87,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":4252},{"krate":0,"index":4253}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":543920,"byte_end":543928,"line_start":101,"line_end":101,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":4257},{"krate":0,"index":4258},{"krate":0,"index":4259},{"krate":0,"index":4260},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4266}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":544915,"byte_end":544923,"line_start":144,"line_end":144,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4272},{"krate":0,"index":4273}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":545680,"byte_end":545688,"line_start":176,"line_end":176,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4280}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548395,"byte_end":548403,"line_start":11,"line_end":11,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4307}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548990,"byte_end":548998,"line_start":33,"line_end":33,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4311}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":550089,"byte_end":550097,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":550725,"byte_end":550734,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4357}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":551334,"byte_end":551343,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4361},{"krate":0,"index":4362},{"krate":0,"index":4363}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":551943,"byte_end":551951,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4371}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":552619,"byte_end":552627,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":4379}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":553352,"byte_end":553360,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4385},{"krate":0,"index":4386},{"krate":0,"index":4387}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":554317,"byte_end":554325,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4392},{"krate":0,"index":4393},{"krate":0,"index":4396}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":555938,"byte_end":555945,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4399}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":556081,"byte_end":556088,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4402}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":556221,"byte_end":556228,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4405}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":556365,"byte_end":556372,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4408}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_ops.rs","byte_start":557272,"byte_end":557280,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4445},{"krate":0,"index":4446}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563084,"byte_end":563093,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4480},{"krate":0,"index":4481},{"krate":0,"index":4482},{"krate":0,"index":4485},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4491},{"krate":0,"index":4492},{"krate":0,"index":4493}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570523,"byte_end":570531,"line_start":233,"line_end":233,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4496}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571068,"byte_end":571077,"line_start":258,"line_end":258,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4501},{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4505},{"krate":0,"index":4507},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4516},{"krate":0,"index":4519},{"krate":0,"index":4522},{"krate":0,"index":4525},{"krate":0,"index":4528},{"krate":0,"index":4531},{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4536},{"krate":0,"index":4537}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":592237,"byte_end":592245,"line_start":820,"line_end":820,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4540}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":595121,"byte_end":595131,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":595172,"byte_end":595182,"line_start":52,"line_end":52,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4574}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":595467,"byte_end":595477,"line_start":60,"line_end":60,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4578}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":595605,"byte_end":595615,"line_start":66,"line_end":66,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":595652,"byte_end":595662,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4584}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596381,"byte_end":596391,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4587},{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4592},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4597},{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4600},{"krate":0,"index":4601},{"krate":0,"index":4602},{"krate":0,"index":4603},{"krate":0,"index":4604},{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4607},{"krate":0,"index":4608},{"krate":0,"index":4609},{"krate":0,"index":4610},{"krate":0,"index":4611},{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4614},{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4617},{"krate":0,"index":4618},{"krate":0,"index":4619},{"krate":0,"index":4620},{"krate":0,"index":4621},{"krate":0,"index":4623},{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":620393,"byte_end":620403,"line_start":854,"line_end":854,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":620919,"byte_end":620929,"line_start":870,"line_end":870,"column_start":61,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4645},{"krate":0,"index":4646}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":621524,"byte_end":621534,"line_start":890,"line_end":890,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4650},{"krate":0,"index":4651}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622034,"byte_end":622044,"line_start":904,"line_end":904,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4655}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622383,"byte_end":622397,"line_start":917,"line_end":917,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4660},{"krate":0,"index":4661},{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4668},{"krate":0,"index":4669},{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4673},{"krate":0,"index":4674},{"krate":0,"index":4675},{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4686},{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4689}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":640320,"byte_end":640334,"line_start":1425,"line_end":1425,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4692}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":640949,"byte_end":640963,"line_start":1447,"line_end":1447,"column_start":59,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":4695},{"krate":0,"index":4696},{"krate":0,"index":4697}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":641302,"byte_end":641316,"line_start":1461,"line_end":1461,"column_start":61,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4700},{"krate":0,"index":4701}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":641733,"byte_end":641747,"line_start":1480,"line_end":1480,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4704},{"krate":0,"index":4705}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":642644,"byte_end":642654,"line_start":17,"line_end":17,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4745}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":642778,"byte_end":642788,"line_start":24,"line_end":24,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4748}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":642919,"byte_end":642929,"line_start":31,"line_end":31,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4751}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":643068,"byte_end":643078,"line_start":38,"line_end":38,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4754}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":643219,"byte_end":643229,"line_start":45,"line_end":45,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4757}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":643873,"byte_end":643883,"line_start":76,"line_end":76,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4761},{"krate":0,"index":4762}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":644029,"byte_end":644039,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4765}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":644102,"byte_end":644112,"line_start":89,"line_end":89,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4768}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":644185,"byte_end":644195,"line_start":93,"line_end":93,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":644788,"byte_end":644798,"line_start":120,"line_end":120,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":645693,"byte_end":645707,"line_start":165,"line_end":165,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4788}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":645842,"byte_end":645856,"line_start":172,"line_end":172,"column_start":54,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4791}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":646003,"byte_end":646017,"line_start":179,"line_end":179,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4794},{"krate":0,"index":4795}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":646475,"byte_end":646489,"line_start":200,"line_end":200,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4798},{"krate":0,"index":4799}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":646788,"byte_end":646802,"line_start":212,"line_end":212,"column_start":60,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":4802},{"krate":0,"index":4803}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":647129,"byte_end":647143,"line_start":224,"line_end":224,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4806},{"krate":0,"index":4807},{"krate":0,"index":4808},{"krate":0,"index":4809},{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4812},{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4815}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":648052,"byte_end":648066,"line_start":265,"line_end":265,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4818},{"krate":0,"index":4819},{"krate":0,"index":4820},{"krate":0,"index":4821}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":648566,"byte_end":648580,"line_start":292,"line_end":292,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4825},{"krate":0,"index":4826},{"krate":0,"index":4827}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":649500,"byte_end":649510,"line_start":20,"line_end":20,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4852},{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4855},{"krate":0,"index":4857},{"krate":0,"index":4858},{"krate":0,"index":4860}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652415,"byte_end":652425,"line_start":108,"line_end":108,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4863}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652530,"byte_end":652540,"line_start":115,"line_end":115,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4866},{"krate":0,"index":4867}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652763,"byte_end":652771,"line_start":127,"line_end":127,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4870}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653323,"byte_end":653337,"line_start":151,"line_end":151,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4875},{"krate":0,"index":4876},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4886},{"krate":0,"index":4889},{"krate":0,"index":4892},{"krate":0,"index":4895},{"krate":0,"index":4898},{"krate":0,"index":4901},{"krate":0,"index":4904},{"krate":0,"index":4907},{"krate":0,"index":4909},{"krate":0,"index":4911},{"krate":0,"index":4913}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":674119,"byte_end":674133,"line_start":681,"line_end":681,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4917}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":674265,"byte_end":674273,"line_start":688,"line_end":688,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4920}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":676789,"byte_end":676799,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4950},{"krate":0,"index":4951},{"krate":0,"index":4952}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":677330,"byte_end":677344,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4956},{"krate":0,"index":4957},{"krate":0,"index":4958}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":677901,"byte_end":677915,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4962},{"krate":0,"index":4963},{"krate":0,"index":4964}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":678506,"byte_end":678520,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":679113,"byte_end":679127,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4976},{"krate":0,"index":4977},{"krate":0,"index":4978}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":679755,"byte_end":679769,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4983},{"krate":0,"index":4984},{"krate":0,"index":4985}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":680380,"byte_end":680394,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":681731,"byte_end":681738,"line_start":221,"line_end":221,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4994}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":681885,"byte_end":681894,"line_start":228,"line_end":228,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4997}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":682040,"byte_end":682054,"line_start":235,"line_end":235,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5000}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":682208,"byte_end":682215,"line_start":242,"line_end":242,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5003}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":682372,"byte_end":682382,"line_start":249,"line_end":249,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5006}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_coordinates.rs","byte_start":682656,"byte_end":682666,"line_start":10,"line_end":10,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5017},{"krate":0,"index":5018}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_coordinates.rs","byte_start":682834,"byte_end":682844,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5021}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_ops.rs","byte_start":684512,"byte_end":684522,"line_start":66,"line_end":66,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5054},{"krate":0,"index":5055}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_ops.rs","byte_start":684685,"byte_end":684695,"line_start":75,"line_end":75,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5058}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_ops.rs","byte_start":698109,"byte_end":698119,"line_start":550,"line_end":550,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5064},{"krate":0,"index":5065}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702292,"byte_end":702303,"line_start":12,"line_end":12,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5093},{"krate":0,"index":5094},{"krate":0,"index":5095},{"krate":0,"index":5096},{"krate":0,"index":5097},{"krate":0,"index":5098},{"krate":0,"index":5099},{"krate":0,"index":5100},{"krate":0,"index":5101},{"krate":0,"index":5102},{"krate":0,"index":5103},{"krate":0,"index":5104},{"krate":0,"index":5105},{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5108},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5111}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":712281,"byte_end":712292,"line_start":326,"line_end":326,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5114}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":712456,"byte_end":712467,"line_start":332,"line_end":332,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5117},{"krate":0,"index":5118},{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":712812,"byte_end":712823,"line_start":346,"line_end":346,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5122},{"krate":0,"index":5123}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":713263,"byte_end":713274,"line_start":365,"line_end":365,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5126},{"krate":0,"index":5127}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":714206,"byte_end":714217,"line_start":20,"line_end":20,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5160}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":714352,"byte_end":714363,"line_start":27,"line_end":27,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5163}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":714510,"byte_end":714521,"line_start":34,"line_end":34,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5166},{"krate":0,"index":5167}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":715135,"byte_end":715146,"line_start":61,"line_end":61,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5171},{"krate":0,"index":5172}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":715486,"byte_end":715497,"line_start":75,"line_end":75,"column_start":60,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5175},{"krate":0,"index":5176}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":715865,"byte_end":715876,"line_start":89,"line_end":89,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5179},{"krate":0,"index":5180},{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5184},{"krate":0,"index":5185},{"krate":0,"index":5186},{"krate":0,"index":5187},{"krate":0,"index":5188}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":716826,"byte_end":716837,"line_start":132,"line_end":132,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5191},{"krate":0,"index":5192},{"krate":0,"index":5193},{"krate":0,"index":5194}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":717424,"byte_end":717435,"line_start":162,"line_end":162,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5198},{"krate":0,"index":5199},{"krate":0,"index":5200}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718272,"byte_end":718283,"line_start":15,"line_end":15,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5234},{"krate":0,"index":5237},{"krate":0,"index":5240},{"krate":0,"index":5243}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":727473,"byte_end":727484,"line_start":271,"line_end":271,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5248}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":727613,"byte_end":727621,"line_start":278,"line_end":278,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5251}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":728879,"byte_end":728890,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5279},{"krate":0,"index":5280},{"krate":0,"index":5281}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":729429,"byte_end":729440,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5287}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":730039,"byte_end":730050,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5292},{"krate":0,"index":5293},{"krate":0,"index":5294}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":730643,"byte_end":730654,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5299},{"krate":0,"index":5300},{"krate":0,"index":5301}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":731282,"byte_end":731293,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":731904,"byte_end":731915,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5314}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":732391,"byte_end":732400,"line_start":158,"line_end":158,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5317}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":732543,"byte_end":732554,"line_start":165,"line_end":165,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5320}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":732705,"byte_end":732712,"line_start":172,"line_end":172,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5323}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":732859,"byte_end":732866,"line_start":179,"line_end":179,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5326}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":734177,"byte_end":734188,"line_start":47,"line_end":47,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5353},{"krate":0,"index":5354}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":734642,"byte_end":734653,"line_start":65,"line_end":65,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5363},{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":735147,"byte_end":735158,"line_start":84,"line_end":84,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5373},{"krate":0,"index":5374}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":735644,"byte_end":735655,"line_start":102,"line_end":102,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5383},{"krate":0,"index":5384}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":742319,"byte_end":742330,"line_start":303,"line_end":303,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5395}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":742497,"byte_end":742508,"line_start":310,"line_end":310,"column_start":58,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":5399}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":742701,"byte_end":742712,"line_start":318,"line_end":318,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5402}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":742879,"byte_end":742890,"line_start":325,"line_end":325,"column_start":58,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":5406}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":743082,"byte_end":743093,"line_start":333,"line_end":333,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5409}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":743307,"byte_end":743318,"line_start":342,"line_end":342,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5413}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":743556,"byte_end":743567,"line_start":352,"line_end":352,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5416}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":743781,"byte_end":743792,"line_start":361,"line_end":361,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5420}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":744029,"byte_end":744037,"line_start":371,"line_end":371,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":744274,"byte_end":744282,"line_start":380,"line_end":380,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5427}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":744543,"byte_end":744551,"line_start":390,"line_end":390,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5430}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":744788,"byte_end":744796,"line_start":399,"line_end":399,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5434}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":745986,"byte_end":745997,"line_start":34,"line_end":34,"column_start":70,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5466}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":746211,"byte_end":746222,"line_start":44,"line_end":44,"column_start":38,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":746339,"byte_end":746350,"line_start":50,"line_end":50,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5474}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":747791,"byte_end":747802,"line_start":108,"line_end":108,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5478},{"krate":0,"index":5479},{"krate":0,"index":5480},{"krate":0,"index":5481}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750765,"byte_end":750776,"line_start":195,"line_end":195,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5485}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751369,"byte_end":751380,"line_start":214,"line_end":214,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5489}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751956,"byte_end":751967,"line_start":231,"line_end":231,"column_start":41,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":752072,"byte_end":752083,"line_start":233,"line_end":233,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5496}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":752299,"byte_end":752310,"line_start":242,"line_end":242,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5500},{"krate":0,"index":5501},{"krate":0,"index":5502}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":752721,"byte_end":752732,"line_start":260,"line_end":260,"column_start":57,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":5506},{"krate":0,"index":5507}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":753212,"byte_end":753223,"line_start":283,"line_end":283,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5511},{"krate":0,"index":5512}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":753642,"byte_end":753653,"line_start":304,"line_end":304,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5516}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":754602,"byte_end":754613,"line_start":22,"line_end":22,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5549}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":754805,"byte_end":754816,"line_start":31,"line_end":31,"column_start":68,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":5553},{"krate":0,"index":5554}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":755108,"byte_end":755119,"line_start":45,"line_end":45,"column_start":66,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":5558}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":755826,"byte_end":755837,"line_start":74,"line_end":74,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5563},{"krate":0,"index":5564}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":756188,"byte_end":756199,"line_start":88,"line_end":88,"column_start":74,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":5568},{"krate":0,"index":5569}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":756570,"byte_end":756581,"line_start":102,"line_end":102,"column_start":70,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5579},{"krate":0,"index":5580},{"krate":0,"index":5581},{"krate":0,"index":5582}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":757538,"byte_end":757549,"line_start":145,"line_end":145,"column_start":60,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5586},{"krate":0,"index":5587},{"krate":0,"index":5588},{"krate":0,"index":5589}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":758214,"byte_end":758225,"line_start":176,"line_end":176,"column_start":65,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5597}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":759762,"byte_end":759773,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5645}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760441,"byte_end":760452,"line_start":41,"line_end":41,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5649}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760636,"byte_end":760644,"line_start":50,"line_end":50,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5653}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":763693,"byte_end":763704,"line_start":23,"line_end":23,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5689},{"krate":0,"index":5690},{"krate":0,"index":5691}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":764337,"byte_end":764348,"line_start":47,"line_end":47,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5697},{"krate":0,"index":5698},{"krate":0,"index":5699}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":764975,"byte_end":764986,"line_start":70,"line_end":70,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5705},{"krate":0,"index":5706},{"krate":0,"index":5707}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":765670,"byte_end":765681,"line_start":93,"line_end":93,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5715}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":766489,"byte_end":766500,"line_start":120,"line_end":120,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5720},{"krate":0,"index":5721},{"krate":0,"index":5723}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":767639,"byte_end":767646,"line_start":156,"line_end":156,"column_start":70,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":5727}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":767938,"byte_end":767949,"line_start":167,"line_end":167,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5731}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":778375,"byte_end":778383,"line_start":80,"line_end":80,"column_start":88,"column_end":96},"value":"","parent":null,"children":[{"krate":0,"index":5812}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":778684,"byte_end":778692,"line_start":91,"line_end":91,"column_start":81,"column_end":89},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":778850,"byte_end":778858,"line_start":98,"line_end":98,"column_start":76,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":5822}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779094,"byte_end":779102,"line_start":107,"line_end":107,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5827},{"krate":0,"index":5828},{"krate":0,"index":5829},{"krate":0,"index":5830},{"krate":0,"index":5831},{"krate":0,"index":5832},{"krate":0,"index":5833},{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5836},{"krate":0,"index":5837}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788302,"byte_end":788310,"line_start":354,"line_end":354,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5842}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":789481,"byte_end":789489,"line_start":387,"line_end":387,"column_start":42,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":789632,"byte_end":789640,"line_start":394,"line_end":394,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5851}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":789932,"byte_end":789940,"line_start":405,"line_end":405,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5856},{"krate":0,"index":5857},{"krate":0,"index":5858}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":790488,"byte_end":790496,"line_start":425,"line_end":425,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5863},{"krate":0,"index":5864}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":791166,"byte_end":791174,"line_start":452,"line_end":452,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5869},{"krate":0,"index":5870}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":791756,"byte_end":791764,"line_start":476,"line_end":476,"column_start":67,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5875}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":792806,"byte_end":792814,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5910}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":793047,"byte_end":793055,"line_start":33,"line_end":33,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":5915},{"krate":0,"index":5916}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":793388,"byte_end":793396,"line_start":49,"line_end":49,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":5921}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":794191,"byte_end":794199,"line_start":81,"line_end":81,"column_start":67,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5927},{"krate":0,"index":5928}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":794606,"byte_end":794614,"line_start":97,"line_end":97,"column_start":77,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":5933},{"krate":0,"index":5934}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":795049,"byte_end":795057,"line_start":113,"line_end":113,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5947},{"krate":0,"index":5948},{"krate":0,"index":5949}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":796515,"byte_end":796523,"line_start":171,"line_end":171,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5954},{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":798787,"byte_end":798795,"line_start":22,"line_end":22,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6010},{"krate":0,"index":6011}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":800309,"byte_end":800317,"line_start":68,"line_end":68,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":6016}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":800551,"byte_end":800559,"line_start":78,"line_end":78,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":6021}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801336,"byte_end":801344,"line_start":111,"line_end":111,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6028}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802396,"byte_end":802404,"line_start":146,"line_end":146,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_conversion.rs","byte_start":813422,"byte_end":813430,"line_start":20,"line_end":20,"column_start":68,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6065},{"krate":0,"index":6066},{"krate":0,"index":6067}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_conversion.rs","byte_start":814323,"byte_end":814331,"line_start":48,"line_end":48,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":6074},{"krate":0,"index":6075},{"krate":0,"index":6076}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_conversion.rs","byte_start":815072,"byte_end":815080,"line_start":72,"line_end":72,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_conversion.rs","byte_start":816250,"byte_end":816258,"line_start":106,"line_end":106,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6091},{"krate":0,"index":6092},{"krate":0,"index":6095}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_conversion.rs","byte_start":817965,"byte_end":817972,"line_start":152,"line_end":152,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6100}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":835729,"byte_end":835739,"line_start":72,"line_end":72,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6160}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836036,"byte_end":836046,"line_start":83,"line_end":83,"column_start":81,"column_end":91},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836203,"byte_end":836213,"line_start":89,"line_end":89,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":6170}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836423,"byte_end":836433,"line_start":98,"line_end":98,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6175},{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6179},{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6182},{"krate":0,"index":6183},{"krate":0,"index":6184},{"krate":0,"index":6185},{"krate":0,"index":6186},{"krate":0,"index":6187},{"krate":0,"index":6188},{"krate":0,"index":6189},{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6192},{"krate":0,"index":6193}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":844552,"byte_end":844562,"line_start":328,"line_end":328,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6198}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":845178,"byte_end":845188,"line_start":349,"line_end":349,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":845330,"byte_end":845340,"line_start":355,"line_end":355,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6207}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":845624,"byte_end":845634,"line_start":366,"line_end":366,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6212},{"krate":0,"index":6213},{"krate":0,"index":6214}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":846174,"byte_end":846184,"line_start":386,"line_end":386,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6219},{"krate":0,"index":6220}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":846846,"byte_end":846856,"line_start":413,"line_end":413,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6225},{"krate":0,"index":6226}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":847391,"byte_end":847401,"line_start":436,"line_end":436,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6231}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":848470,"byte_end":848480,"line_start":19,"line_end":19,"column_start":64,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":6263}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":848713,"byte_end":848723,"line_start":30,"line_end":30,"column_start":71,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":6268},{"krate":0,"index":6269}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":849056,"byte_end":849066,"line_start":46,"line_end":46,"column_start":69,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":6274}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":849863,"byte_end":849873,"line_start":78,"line_end":78,"column_start":67,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":6280},{"krate":0,"index":6281}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":850280,"byte_end":850290,"line_start":94,"line_end":94,"column_start":77,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":6286},{"krate":0,"index":6287}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":850725,"byte_end":850735,"line_start":110,"line_end":110,"column_start":73,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6294},{"krate":0,"index":6295},{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6298},{"krate":0,"index":6299},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":852169,"byte_end":852179,"line_start":167,"line_end":167,"column_start":67,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6310}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":853755,"byte_end":853765,"line_start":22,"line_end":22,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6360}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854437,"byte_end":854447,"line_start":48,"line_end":48,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6365}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854724,"byte_end":854732,"line_start":60,"line_end":60,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":6370}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855159,"byte_end":855169,"line_start":77,"line_end":77,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6377}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":856706,"byte_end":856716,"line_start":130,"line_end":130,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6380}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857478,"byte_end":857488,"line_start":153,"line_end":153,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6383}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_conversion.rs","byte_start":867220,"byte_end":867230,"line_start":19,"line_end":19,"column_start":70,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":6415},{"krate":0,"index":6416},{"krate":0,"index":6417}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_conversion.rs","byte_start":868136,"byte_end":868146,"line_start":47,"line_end":47,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":6424},{"krate":0,"index":6425},{"krate":0,"index":6426}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_conversion.rs","byte_start":869306,"byte_end":869316,"line_start":81,"line_end":81,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":6432},{"krate":0,"index":6433},{"krate":0,"index":6436}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_conversion.rs","byte_start":872698,"byte_end":872705,"line_start":166,"line_end":166,"column_start":65,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6441}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892813,"byte_end":892815,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":893358,"byte_end":893366,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6525}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":893601,"byte_end":893612,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6529}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":893864,"byte_end":893871,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6533},{"krate":0,"index":6534}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":894582,"byte_end":894583,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6541}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":895200,"byte_end":895201,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":896207,"byte_end":896216,"line_start":176,"line_end":176,"column_start":69,"column_end":78},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":896431,"byte_end":896440,"line_start":183,"line_end":183,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6553}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":897650,"byte_end":897659,"line_start":218,"line_end":218,"column_start":65,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":897814,"byte_end":897823,"line_start":221,"line_end":221,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6562}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898062,"byte_end":898071,"line_start":230,"line_end":230,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6567},{"krate":0,"index":6568},{"krate":0,"index":6569},{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6572},{"krate":0,"index":6574},{"krate":0,"index":6575},{"krate":0,"index":6576},{"krate":0,"index":6577},{"krate":0,"index":6578},{"krate":0,"index":6579}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906150,"byte_end":906159,"line_start":457,"line_end":457,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6584},{"krate":0,"index":6585}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906977,"byte_end":906986,"line_start":484,"line_end":484,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6590},{"krate":0,"index":6591}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907868,"byte_end":907877,"line_start":508,"line_end":508,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6595}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":908314,"byte_end":908323,"line_start":519,"line_end":519,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6600},{"krate":0,"index":6601},{"krate":0,"index":6602}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":908783,"byte_end":908792,"line_start":537,"line_end":537,"column_start":68,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":6607},{"krate":0,"index":6608}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":909325,"byte_end":909334,"line_start":560,"line_end":560,"column_start":64,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6613},{"krate":0,"index":6614}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alga.rs","byte_start":910555,"byte_end":910564,"line_start":18,"line_end":18,"column_start":71,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":6648}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alga.rs","byte_start":910827,"byte_end":910836,"line_start":29,"line_end":29,"column_start":78,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":6653},{"krate":0,"index":6654}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alga.rs","byte_start":911225,"byte_end":911234,"line_start":45,"line_end":45,"column_start":76,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":6659}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alga.rs","byte_start":912484,"byte_end":912493,"line_start":88,"line_end":88,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6666},{"krate":0,"index":6667}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alga.rs","byte_start":913034,"byte_end":913043,"line_start":108,"line_end":108,"column_start":73,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":6672},{"krate":0,"index":6673}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915540,"byte_end":915549,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6713}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916648,"byte_end":916657,"line_start":48,"line_end":48,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6718}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_conversion.rs","byte_start":917185,"byte_end":917194,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":6742},{"krate":0,"index":6743},{"krate":0,"index":6744}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_conversion.rs","byte_start":918026,"byte_end":918035,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6752}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_conversion.rs","byte_start":918819,"byte_end":918826,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":6757}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_ops.rs","byte_start":921129,"byte_end":921138,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6806},{"krate":0,"index":6807}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_ops.rs","byte_start":921494,"byte_end":921503,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6811}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943004,"byte_end":943014,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6844},{"krate":0,"index":6845},{"krate":0,"index":6846},{"krate":0,"index":6847},{"krate":0,"index":6851},{"krate":0,"index":6855},{"krate":0,"index":6860}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":947394,"byte_end":947407,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":947444,"byte_end":947457,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6890}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":947607,"byte_end":947620,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6893}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":947765,"byte_end":947778,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6896}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948491,"byte_end":948504,"line_start":64,"line_end":64,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6899},{"krate":0,"index":6900},{"krate":0,"index":6901},{"krate":0,"index":6902},{"krate":0,"index":6903},{"krate":0,"index":6904},{"krate":0,"index":6905},{"krate":0,"index":6906},{"krate":0,"index":6907},{"krate":0,"index":6908},{"krate":0,"index":6909},{"krate":0,"index":6910},{"krate":0,"index":6911},{"krate":0,"index":6912},{"krate":0,"index":6913},{"krate":0,"index":6914},{"krate":0,"index":6915},{"krate":0,"index":6916},{"krate":0,"index":6917},{"krate":0,"index":6919},{"krate":0,"index":6920},{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":6924},{"krate":0,"index":6925},{"krate":0,"index":6926},{"krate":0,"index":6927}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":972556,"byte_end":972564,"line_start":681,"line_end":681,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6930}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":973607,"byte_end":973614,"line_start":712,"line_end":712,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6937}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":974357,"byte_end":974369,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":974406,"byte_end":974418,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6964}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":974568,"byte_end":974580,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6967}],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":974725,"byte_end":974737,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6970}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":975448,"byte_end":975460,"line_start":65,"line_end":65,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6973},{"krate":0,"index":6974},{"krate":0,"index":6975},{"krate":0,"index":6976},{"krate":0,"index":6977},{"krate":0,"index":6978},{"krate":0,"index":6979},{"krate":0,"index":6980},{"krate":0,"index":6981},{"krate":0,"index":6982},{"krate":0,"index":6983},{"krate":0,"index":6984},{"krate":0,"index":6985},{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6988},{"krate":0,"index":6990},{"krate":0,"index":6991},{"krate":0,"index":6992},{"krate":0,"index":6993},{"krate":0,"index":6994}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":982086,"byte_end":982094,"line_start":264,"line_end":264,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6997}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":982882,"byte_end":982889,"line_start":287,"line_end":287,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7004}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":988426,"byte_end":988436,"line_start":57,"line_end":57,"column_start":54,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":988793,"byte_end":988803,"line_start":68,"line_end":68,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7071},{"krate":0,"index":7072},{"krate":0,"index":7073},{"krate":0,"index":7074},{"krate":0,"index":7075},{"krate":0,"index":7078},{"krate":0,"index":7079},{"krate":0,"index":7080},{"krate":0,"index":7082},{"krate":0,"index":7084}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":999302,"byte_end":999308,"line_start":358,"line_end":358,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7090}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1000760,"byte_end":1000768,"line_start":35,"line_end":35,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":829,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1000894,"byte_end":1000902,"line_start":41,"line_end":41,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7116},{"krate":0,"index":7117},{"krate":0,"index":7118},{"krate":0,"index":7119},{"krate":0,"index":7120},{"krate":0,"index":7121},{"krate":0,"index":7125},{"krate":0,"index":7129}],"docs":"","sig":null,"attributes":[]},{"id":830,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1004886,"byte_end":1004898,"line_start":151,"line_end":151,"column_start":64,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":7134}],"docs":"","sig":null,"attributes":[]},{"id":831,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/determinant.rs","byte_start":1005590,"byte_end":1005602,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":7148}],"docs":"","sig":null,"attributes":[]},{"id":832,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1008947,"byte_end":1008956,"line_start":43,"line_end":43,"column_start":54,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":833,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1009186,"byte_end":1009195,"line_start":50,"line_end":50,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7177},{"krate":0,"index":7178},{"krate":0,"index":7179},{"krate":0,"index":7180},{"krate":0,"index":7181},{"krate":0,"index":7182},{"krate":0,"index":7183}],"docs":"","sig":null,"attributes":[]},{"id":834,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1012609,"byte_end":1012618,"line_start":159,"line_end":159,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":7187},{"krate":0,"index":7191},{"krate":0,"index":7195},{"krate":0,"index":7196},{"krate":0,"index":7197}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1015869,"byte_end":1015875,"line_start":264,"line_end":264,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7203}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1016702,"byte_end":1016716,"line_start":20,"line_end":20,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7223},{"krate":0,"index":7224},{"krate":0,"index":7225},{"krate":0,"index":7226},{"krate":0,"index":7227},{"krate":0,"index":7229},{"krate":0,"index":7231},{"krate":0,"index":7232},{"krate":0,"index":7233},{"krate":0,"index":7234},{"krate":0,"index":7238}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1022637,"byte_end":1022647,"line_start":40,"line_end":40,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1022837,"byte_end":1022847,"line_start":47,"line_end":47,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7263},{"krate":0,"index":7264},{"krate":0,"index":7265},{"krate":0,"index":7266},{"krate":0,"index":7268},{"krate":0,"index":7270},{"krate":0,"index":7271}],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1025903,"byte_end":1025915,"line_start":136,"line_end":136,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":7276}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/inverse.rs","byte_start":1031129,"byte_end":1031141,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7324}],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/inverse.rs","byte_start":1031512,"byte_end":1031524,"line_start":24,"line_end":24,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7329}],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1040250,"byte_end":1040252,"line_start":42,"line_end":42,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1041590,"byte_end":1041592,"line_start":89,"line_end":89,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7371},{"krate":0,"index":7372},{"krate":0,"index":7373},{"krate":0,"index":7374},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7377},{"krate":0,"index":7378}],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1045298,"byte_end":1045300,"line_start":200,"line_end":200,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7382},{"krate":0,"index":7386},{"krate":0,"index":7390},{"krate":0,"index":7391},{"krate":0,"index":7393},{"krate":0,"index":7394}],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1050600,"byte_end":1050606,"line_start":371,"line_end":371,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7410}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1051941,"byte_end":1051960,"line_start":38,"line_end":38,"column_start":23,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052081,"byte_end":1052100,"line_start":44,"line_end":44,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7430}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052391,"byte_end":1052410,"line_start":55,"line_end":55,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7432}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052688,"byte_end":1052707,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7435},{"krate":0,"index":7436},{"krate":0,"index":7437},{"krate":0,"index":7442},{"krate":0,"index":7447},{"krate":0,"index":7452},{"krate":0,"index":7457},{"krate":0,"index":7458}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1056838,"byte_end":1056840,"line_start":43,"line_end":43,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1057048,"byte_end":1057050,"line_start":50,"line_end":50,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7494},{"krate":0,"index":7495},{"krate":0,"index":7497},{"krate":0,"index":7499},{"krate":0,"index":7500},{"krate":0,"index":7501},{"krate":0,"index":7502}],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1061036,"byte_end":1061038,"line_start":162,"line_end":162,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7509},{"krate":0,"index":7513},{"krate":0,"index":7517},{"krate":0,"index":7521},{"krate":0,"index":7522}],"docs":"","sig":null,"attributes":[]},{"id":853,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1064895,"byte_end":1064901,"line_start":294,"line_end":294,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7528}],"docs":"","sig":null,"attributes":[]},{"id":854,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1066453,"byte_end":1066458,"line_start":45,"line_end":45,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1066572,"byte_end":1066577,"line_start":51,"line_end":51,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7564},{"krate":0,"index":7565},{"krate":0,"index":7567},{"krate":0,"index":7568},{"krate":0,"index":7569},{"krate":0,"index":7570},{"krate":0,"index":7571},{"krate":0,"index":7572},{"krate":0,"index":7573}],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081139,"byte_end":1081151,"line_start":490,"line_end":490,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7588},{"krate":0,"index":7589},{"krate":0,"index":7590},{"krate":0,"index":7591}],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1084515,"byte_end":1084527,"line_start":9,"line_end":9,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7615},{"krate":0,"index":7619},{"krate":0,"index":7623},{"krate":0,"index":7627},{"krate":0,"index":7630},{"krate":0,"index":7634},{"krate":0,"index":7638},{"krate":0,"index":7641},{"krate":0,"index":7645},{"krate":0,"index":7649},{"krate":0,"index":7655},{"krate":0,"index":7661},{"krate":0,"index":7665},{"krate":0,"index":7669},{"krate":0,"index":7675},{"krate":0,"index":7681},{"krate":0,"index":7686}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1099138,"byte_end":1099141,"line_start":56,"line_end":56,"column_start":54,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1099497,"byte_end":1099500,"line_start":66,"line_end":66,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7730},{"krate":0,"index":7731},{"krate":0,"index":7734},{"krate":0,"index":7735},{"krate":0,"index":7736},{"krate":0,"index":7737},{"krate":0,"index":7739},{"krate":0,"index":7740},{"krate":0,"index":7742}],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1117644,"byte_end":1117650,"line_start":549,"line_end":549,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7751},{"krate":0,"index":7752},{"krate":0,"index":7753},{"krate":0,"index":7754},{"krate":0,"index":7755}],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123082,"byte_end":1123096,"line_start":47,"line_end":47,"column_start":40,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":862,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123275,"byte_end":1123289,"line_start":54,"line_end":54,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7785},{"krate":0,"index":7786},{"krate":0,"index":7788},{"krate":0,"index":7789},{"krate":0,"index":7790}],"docs":"","sig":null,"attributes":[]},{"id":863,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1131426,"byte_end":1131438,"line_start":307,"line_end":307,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":7797},{"krate":0,"index":7798},{"krate":0,"index":7799}],"docs":"","sig":null,"attributes":[]},{"id":864,"kind":"Direct","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1136378,"byte_end":1136398,"line_start":40,"line_end":40,"column_start":47,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":865,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1136588,"byte_end":1136608,"line_start":47,"line_end":47,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":7821},{"krate":0,"index":7822},{"krate":0,"index":7823},{"krate":0,"index":7824},{"krate":0,"index":7825},{"krate":0,"index":7827},{"krate":0,"index":7828},{"krate":0,"index":7829}],"docs":"","sig":null,"attributes":[]},{"id":866,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1140336,"byte_end":1140348,"line_start":148,"line_end":148,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":7834}],"docs":"","sig":null,"attributes":[]},{"id":867,"kind":"Inherent","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141029,"byte_end":1141035,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7856},{"krate":0,"index":7859},{"krate":0,"index":7862}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":4333,"byte_end":4337,"line_start":133,"line_end":133,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20227,"byte_end":20236,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":13}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20256,"byte_end":20266,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":317}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20276,"byte_end":20287,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":361}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20297,"byte_end":20314,"line_start":7,"line_end":7,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":381}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20324,"byte_end":20333,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":464}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20343,"byte_end":20347,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":585}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20366,"byte_end":20373,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1000}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20510,"byte_end":20518,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2411}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/mod.rs","byte_start":20752,"byte_end":20758,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3768}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":4388,"byte_end":4396,"line_start":136,"line_end":136,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3790}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/lib.rs","byte_start":4441,"byte_end":4447,"line_start":139,"line_end":139,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":7022}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983074,"byte_end":983083,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":7023}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983157,"byte_end":983163,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":7204}},{"kind":"Mod","span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/mod.rs","byte_start":983189,"byte_end":983200,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":7277}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21892,"byte_end":21895,"line_start":19,"line_end":19,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2395},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":21898,"byte_end":21903,"line_start":19,"line_end":19,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22656,"byte_end":22665,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":26},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":22685,"byte_end":22694,"line_start":37,"line_end":37,"column_start":34,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":26},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":23888,"byte_end":23897,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":26},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":23911,"byte_end":23920,"line_start":62,"line_end":62,"column_start":28,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":26},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":24185,"byte_end":24201,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":24576,"byte_end":24585,"line_start":87,"line_end":87,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":26},"to":{"krate":0,"index":59}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":24595,"byte_end":24604,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":26},"to":{"krate":0,"index":59}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":24630,"byte_end":24648,"line_start":87,"line_end":87,"column_start":59,"column_end":77},"kind":"SuperTrait","from":{"krate":0,"index":47},"to":{"krate":0,"index":59}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/allocator.rs","byte_start":24823,"byte_end":24839,"line_start":96,"line_end":96,"column_start":57,"column_end":73},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":59}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":25686,"byte_end":25692,"line_start":18,"line_end":18,"column_start":49,"column_end":55},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":26662,"byte_end":26668,"line_start":51,"line_end":51,"column_start":56,"column_end":62},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":30399,"byte_end":30405,"line_start":196,"line_end":196,"column_start":60,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":31615,"byte_end":31621,"line_start":233,"line_end":233,"column_start":76,"column_end":82},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":32562,"byte_end":32568,"line_start":266,"line_end":266,"column_start":46,"column_end":52},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":40946,"byte_end":40952,"line_start":490,"line_end":490,"column_start":20,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":53093,"byte_end":53099,"line_start":856,"line_end":856,"column_start":53,"column_end":59},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":65102,"byte_end":65108,"line_start":1202,"line_end":1202,"column_start":53,"column_end":59},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/blas.rs","byte_start":70371,"byte_end":70383,"line_start":1349,"line_end":1349,"column_start":44,"column_end":56},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78382,"byte_end":78387,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":334},"to":{"krate":0,"index":324}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78477,"byte_end":78492,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":322},"to":{"krate":0,"index":324}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78799,"byte_end":78814,"line_start":21,"line_end":21,"column_start":30,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":322},"to":{"krate":0,"index":334}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78888,"byte_end":78903,"line_start":25,"line_end":25,"column_start":40,"column_end":55},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":322},"to":{"krate":0,"index":334}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":78977,"byte_end":78992,"line_start":29,"line_end":29,"column_start":40,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":322},"to":{"krate":0,"index":334}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80345,"byte_end":80361,"line_start":71,"line_end":71,"column_start":5,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":8002},"to":{"krate":0,"index":348}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80372,"byte_end":80391,"line_start":71,"line_end":71,"column_start":32,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":8015},"to":{"krate":0,"index":348}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80591,"byte_end":80606,"line_start":78,"line_end":78,"column_start":38,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":322},"to":{"krate":0,"index":348}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80688,"byte_end":80703,"line_start":82,"line_end":82,"column_start":48,"column_end":63},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":322},"to":{"krate":0,"index":348}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/constraint.rs","byte_start":80785,"byte_end":80800,"line_start":86,"line_end":86,"column_start":48,"column_end":63},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":322},"to":{"krate":0,"index":348}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":88987,"byte_end":89003,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":89983,"byte_end":89999,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":90927,"byte_end":90943,"line_start":110,"line_end":110,"column_start":58,"column_end":74},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":91890,"byte_end":91906,"line_start":145,"line_end":145,"column_start":84,"column_end":100},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":92799,"byte_end":92815,"line_start":176,"line_end":176,"column_start":83,"column_end":99},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":93662,"byte_end":93678,"line_start":205,"line_end":205,"column_start":83,"column_end":99},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":94558,"byte_end":94574,"line_start":235,"line_end":235,"column_start":9,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":95005,"byte_end":95021,"line_start":251,"line_end":251,"column_start":9,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":95452,"byte_end":95468,"line_start":267,"line_end":267,"column_start":9,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/default_allocator.rs","byte_start":95903,"byte_end":95919,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":96763,"byte_end":96770,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":9577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97558,"byte_end":97565,"line_start":51,"line_end":51,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":9577},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97593,"byte_end":97600,"line_start":52,"line_end":52,"column_start":25,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":9577},"to":{"krate":0,"index":493}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97783,"byte_end":97786,"line_start":56,"line_end":56,"column_start":16,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2395},"to":{"krate":0,"index":496}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97789,"byte_end":97794,"line_start":56,"line_end":56,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":6176},"to":{"krate":0,"index":496}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97797,"byte_end":97801,"line_start":56,"line_end":56,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1913},"to":{"krate":0,"index":496}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97804,"byte_end":97813,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":1632},"to":{"krate":0,"index":496}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97816,"byte_end":97820,"line_start":56,"line_end":56,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":1903},"to":{"krate":0,"index":496}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":97823,"byte_end":97827,"line_start":56,"line_end":56,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":496}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98465,"byte_end":98472,"line_start":75,"line_end":75,"column_start":14,"column_end":21},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":9577},"to":{"krate":0,"index":496}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98727,"byte_end":98734,"line_start":92,"line_end":92,"column_start":21,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":9577},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":98883,"byte_end":98890,"line_start":101,"line_end":101,"column_start":21,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":9577},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101492,"byte_end":101495,"line_start":189,"line_end":189,"column_start":20,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":496},"to":{"krate":0,"index":513}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101825,"byte_end":101830,"line_start":204,"line_end":204,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":517}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101833,"byte_end":101836,"line_start":204,"line_end":204,"column_start":29,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2395},"to":{"krate":0,"index":517}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":101839,"byte_end":101847,"line_start":204,"line_end":204,"column_start":35,"column_end":43},"kind":"SuperTrait","from":{"krate":19,"index":568},"to":{"krate":0,"index":517}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102092,"byte_end":102094,"line_start":213,"line_end":213,"column_start":14,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":9783},"to":{"krate":0,"index":496}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102380,"byte_end":102382,"line_start":231,"line_end":231,"column_start":18,"column_end":20},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":9783},"to":{"krate":0,"index":513}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":102501,"byte_end":102503,"line_start":240,"line_end":240,"column_start":28,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":19,"index":2261},"to":{"krate":0,"index":517}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":104882,"byte_end":104886,"line_start":307,"line_end":307,"column_start":20,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":19,"index":6146},"to":{"krate":0,"index":517}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":105449,"byte_end":105453,"line_start":320,"line_end":320,"column_start":15,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":19,"index":6146},"to":{"krate":0,"index":496}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":106315,"byte_end":106319,"line_start":347,"line_end":347,"column_start":19,"column_end":23},"kind":{"Impl":{"id":39}},"from":{"krate":19,"index":6146},"to":{"krate":0,"index":513}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":106963,"byte_end":106967,"line_start":366,"line_end":366,"column_start":9,"column_end":13},"kind":{"Impl":{"id":40}},"from":{"krate":19,"index":6146},"to":{"krate":0,"index":493}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":107147,"byte_end":107151,"line_start":371,"line_end":371,"column_start":9,"column_end":13},"kind":{"Impl":{"id":41}},"from":{"krate":19,"index":6146},"to":{"krate":0,"index":517}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":107286,"byte_end":107290,"line_start":377,"line_end":377,"column_start":9,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":19,"index":6146},"to":{"krate":0,"index":496}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":107718,"byte_end":107722,"line_start":397,"line_end":397,"column_start":9,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":19,"index":6146},"to":{"krate":0,"index":513}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/dimension.rs","byte_start":107934,"byte_end":107938,"line_start":408,"line_end":408,"column_start":9,"column_end":13},"kind":{"Impl":{"id":44}},"from":{"krate":19,"index":6146},"to":{"krate":0,"index":493}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":111812,"byte_end":111819,"line_start":113,"line_end":113,"column_start":63,"column_end":70},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":13173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":112037,"byte_end":112044,"line_start":122,"line_end":122,"column_start":76,"column_end":83},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":13173},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":112704,"byte_end":112711,"line_start":147,"line_end":147,"column_start":85,"column_end":92},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":13173},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":113125,"byte_end":113135,"line_start":162,"line_end":162,"column_start":66,"column_end":76},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":113506,"byte_end":113516,"line_start":179,"line_end":179,"column_start":79,"column_end":89},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":114184,"byte_end":114194,"line_start":204,"line_end":204,"column_start":88,"column_end":98},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":114589,"byte_end":114599,"line_start":224,"line_end":224,"column_start":63,"column_end":73},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":13188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":114820,"byte_end":114830,"line_start":233,"line_end":233,"column_start":76,"column_end":86},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":13188},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":115493,"byte_end":115503,"line_start":258,"line_end":258,"column_start":85,"column_end":95},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":13188},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":115923,"byte_end":115936,"line_start":273,"line_end":273,"column_start":66,"column_end":79},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":116310,"byte_end":116323,"line_start":290,"line_end":290,"column_start":79,"column_end":92},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":682},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/iter.rs","byte_start":116994,"byte_end":117007,"line_start":315,"line_end":315,"column_start":88,"column_end":101},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":682},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":117934,"byte_end":117940,"line_start":23,"line_end":23,"column_start":71,"column_end":77},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":118169,"byte_end":118175,"line_start":33,"line_end":33,"column_start":54,"column_end":60},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":118640,"byte_end":118646,"line_start":53,"line_end":53,"column_start":77,"column_end":83},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":2159}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":118861,"byte_end":118867,"line_start":61,"line_end":61,"column_start":57,"column_end":63},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":2159}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":119276,"byte_end":119282,"line_start":83,"line_end":83,"column_start":36,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1995}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":119884,"byte_end":119890,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":131518,"byte_end":131526,"line_start":377,"line_end":377,"column_start":47,"column_end":55},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1084},"to":{"krate":2,"index":4834}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":131793,"byte_end":131801,"line_start":387,"line_end":387,"column_start":31,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1084},"to":{"krate":2,"index":4834}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":132870,"byte_end":132878,"line_start":417,"line_end":417,"column_start":74,"column_end":82},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1084},"to":{"krate":2,"index":4834}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":133182,"byte_end":133190,"line_start":427,"line_end":427,"column_start":64,"column_end":72},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1084},"to":{"krate":2,"index":4834}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":138701,"byte_end":138707,"line_start":600,"line_end":600,"column_start":9,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1978}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":139174,"byte_end":139180,"line_start":617,"line_end":617,"column_start":9,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1978}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":139778,"byte_end":139784,"line_start":636,"line_end":636,"column_start":66,"column_end":72},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":2007}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":140271,"byte_end":140277,"line_start":653,"line_end":653,"column_start":74,"column_end":80},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":2007}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":140831,"byte_end":140837,"line_start":672,"line_end":672,"column_start":31,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146012,"byte_end":146018,"line_start":829,"line_end":829,"column_start":66,"column_end":72},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146531,"byte_end":146538,"line_start":849,"line_end":849,"column_start":39,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":4838}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":146846,"byte_end":146853,"line_start":859,"line_end":859,"column_start":62,"column_end":69},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":4838}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/ops.rs","byte_start":147157,"byte_end":147163,"line_start":869,"line_end":869,"column_start":54,"column_end":60},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151883,"byte_end":151888,"line_start":39,"line_end":39,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":6176},"to":{"krate":0,"index":1030}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":151891,"byte_end":151896,"line_start":39,"line_end":39,"column_start":67,"column_end":72},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":1030}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":155090,"byte_end":155097,"line_start":120,"line_end":120,"column_start":62,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":1030},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157462,"byte_end":157469,"line_start":179,"line_end":179,"column_start":5,"column_end":12},"kind":"SuperTrait","from":{"krate":0,"index":1030},"to":{"krate":0,"index":1060}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157881,"byte_end":157898,"line_start":189,"line_end":189,"column_start":5,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":1060},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/storage.rs","byte_start":157910,"byte_end":157920,"line_start":189,"line_end":189,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":1048},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":184805,"byte_end":184812,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186059,"byte_end":186066,"line_start":68,"line_end":68,"column_start":20,"column_end":27},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":186289,"byte_end":186296,"line_start":76,"line_end":76,"column_start":20,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":189599,"byte_end":189611,"line_start":156,"line_end":156,"column_start":57,"column_end":69},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":192300,"byte_end":192312,"line_start":243,"line_end":243,"column_start":60,"column_end":72},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":195176,"byte_end":195188,"line_start":324,"line_end":324,"column_start":60,"column_end":72},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/cg.rs","byte_start":196773,"byte_end":196780,"line_start":368,"line_end":368,"column_start":88,"column_end":95},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1088},"to":{"krate":36,"index":877}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/componentwise.rs","byte_start":197922,"byte_end":197928,"line_start":17,"line_end":17,"column_start":54,"column_end":60},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":206335,"byte_end":206343,"line_start":28,"line_end":28,"column_start":33,"column_end":41},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":215543,"byte_end":215550,"line_start":285,"line_end":285,"column_start":17,"column_end":24},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":235036,"byte_end":235044,"line_start":720,"line_end":720,"column_start":42,"column_end":50},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1084},"to":{"krate":16,"index":380}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":235345,"byte_end":235352,"line_start":736,"line_end":736,"column_start":29,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1088},"to":{"krate":16,"index":390}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":235576,"byte_end":235584,"line_start":747,"line_end":747,"column_start":45,"column_end":53},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1084},"to":{"krate":16,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":235925,"byte_end":235933,"line_start":763,"line_end":763,"column_start":69,"column_end":77},"kind":{"Impl":{"id":113}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":236999,"byte_end":237007,"line_start":798,"line_end":798,"column_start":70,"column_end":78},"kind":{"Impl":{"id":114}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction.rs","byte_start":244718,"byte_end":244725,"line_start":989,"line_end":989,"column_start":21,"column_end":28},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":248382,"byte_end":248395,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":250407,"byte_end":250423,"line_start":65,"line_end":65,"column_start":5,"column_end":21},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":253366,"byte_end":253379,"line_start":136,"line_end":136,"column_start":37,"column_end":50},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/construction_slice.rs","byte_start":254534,"byte_end":254550,"line_start":162,"line_end":162,"column_start":37,"column_end":53},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":262377,"byte_end":262385,"line_start":26,"line_end":26,"column_start":65,"column_end":73},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":272944,"byte_end":272950,"line_start":341,"line_end":341,"column_start":9,"column_end":15},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":273416,"byte_end":273422,"line_start":358,"line_end":358,"column_start":9,"column_end":15},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":273809,"byte_end":273815,"line_start":372,"line_end":372,"column_start":9,"column_end":15},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":274158,"byte_end":274164,"line_start":385,"line_end":385,"column_start":9,"column_end":15},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":274636,"byte_end":274642,"line_start":402,"line_end":402,"column_start":9,"column_end":15},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/conversion.rs","byte_start":275035,"byte_end":275041,"line_start":416,"line_end":416,"column_start":9,"column_end":15},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":276093,"byte_end":276099,"line_start":21,"line_end":21,"column_start":61,"column_end":67},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":278701,"byte_end":278707,"line_start":95,"line_end":95,"column_start":57,"column_end":63},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":284275,"byte_end":284281,"line_start":256,"line_end":256,"column_start":49,"column_end":55},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":285488,"byte_end":285494,"line_start":294,"line_end":294,"column_start":54,"column_end":60},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":302641,"byte_end":302648,"line_start":800,"line_end":800,"column_start":17,"column_end":24},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":303428,"byte_end":303436,"line_start":817,"line_end":817,"column_start":25,"column_end":33},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":304382,"byte_end":304390,"line_start":838,"line_end":838,"column_start":25,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":307406,"byte_end":307412,"line_start":939,"line_end":939,"column_start":29,"column_end":35},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":4884}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":308922,"byte_end":308928,"line_start":987,"line_end":987,"column_start":26,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":4884}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/edition.rs","byte_start":309540,"byte_end":309546,"line_start":1008,"line_end":1008,"column_start":53,"column_end":59},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":4884}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":312843,"byte_end":312848,"line_start":50,"line_end":50,"column_start":35,"column_end":40},"kind":{"Impl":{"id":138}},"from":{"krate":2,"index":28514},"to":{"krate":0,"index":2427}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":313919,"byte_end":313928,"line_start":82,"line_end":82,"column_start":35,"column_end":44},"kind":{"Impl":{"id":139}},"from":{"krate":2,"index":28536},"to":{"krate":0,"index":2427}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":314881,"byte_end":314890,"line_start":113,"line_end":113,"column_start":43,"column_end":52},"kind":{"Impl":{"id":140}},"from":{"krate":2,"index":28536},"to":{"krate":0,"index":2427}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":315417,"byte_end":315426,"line_start":140,"line_end":140,"column_start":35,"column_end":44},"kind":{"Impl":{"id":141}},"from":{"krate":2,"index":28500},"to":{"krate":0,"index":2427}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":315927,"byte_end":315941,"line_start":166,"line_end":166,"column_start":35,"column_end":49},"kind":{"Impl":{"id":142}},"from":{"krate":2,"index":28580},"to":{"krate":0,"index":2427}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":317337,"byte_end":317344,"line_start":205,"line_end":205,"column_start":35,"column_end":42},"kind":{"Impl":{"id":143}},"from":{"krate":2,"index":28557},"to":{"krate":0,"index":2427}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":318249,"byte_end":318265,"line_start":237,"line_end":237,"column_start":35,"column_end":51},"kind":{"Impl":{"id":144}},"from":{"krate":2,"index":28603},"to":{"krate":0,"index":2427}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":319271,"byte_end":319276,"line_start":270,"line_end":270,"column_start":76,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":2482}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":320481,"byte_end":320492,"line_start":306,"line_end":306,"column_start":82,"column_end":93},"kind":"SuperTrait","from":{"krate":0,"index":2482},"to":{"krate":0,"index":2493}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/indexing.rs","byte_start":324125,"byte_end":324131,"line_start":435,"line_end":435,"column_start":54,"column_end":60},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":336584,"byte_end":336590,"line_start":84,"line_end":84,"column_start":63,"column_end":69},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":337972,"byte_end":337978,"line_start":139,"line_end":139,"column_start":36,"column_end":42},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":338380,"byte_end":338386,"line_start":151,"line_end":151,"column_start":54,"column_end":60},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":352785,"byte_end":352791,"line_start":626,"line_end":626,"column_start":57,"column_end":63},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":360556,"byte_end":360562,"line_start":862,"line_end":862,"column_start":43,"column_end":49},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":360943,"byte_end":360949,"line_start":872,"line_end":872,"column_start":46,"column_end":52},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361372,"byte_end":361378,"line_start":882,"line_end":882,"column_start":64,"column_end":70},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361637,"byte_end":361643,"line_start":890,"line_end":890,"column_start":67,"column_end":73},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":361908,"byte_end":361914,"line_start":898,"line_end":898,"column_start":49,"column_end":55},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":362388,"byte_end":362394,"line_start":916,"line_end":916,"column_start":60,"column_end":66},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365077,"byte_end":365083,"line_start":999,"line_end":999,"column_start":63,"column_end":69},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":365712,"byte_end":365718,"line_start":1019,"line_end":1019,"column_start":55,"column_end":61},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":366827,"byte_end":366839,"line_start":1055,"line_end":1055,"column_start":46,"column_end":58},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":368307,"byte_end":368319,"line_start":1106,"line_end":1106,"column_start":52,"column_end":64},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":369244,"byte_end":369250,"line_start":1131,"line_end":1131,"column_start":83,"column_end":89},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":369965,"byte_end":369971,"line_start":1147,"line_end":1147,"column_start":57,"column_end":63},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":370906,"byte_end":370912,"line_start":1173,"line_end":1173,"column_start":57,"column_end":63},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":371518,"byte_end":371524,"line_start":1189,"line_end":1189,"column_start":42,"column_end":48},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":16751},"to":{"krate":15,"index":12}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":371988,"byte_end":371994,"line_start":1210,"line_end":1210,"column_start":43,"column_end":49},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":16751},"to":{"krate":15,"index":56}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":372456,"byte_end":372462,"line_start":1233,"line_end":1233,"column_start":39,"column_end":45},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":16751},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":372948,"byte_end":372954,"line_start":1253,"line_end":1253,"column_start":43,"column_end":49},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":375574,"byte_end":375580,"line_start":1341,"line_end":1341,"column_start":35,"column_end":41},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":375689,"byte_end":375695,"line_start":1347,"line_end":1347,"column_start":42,"column_end":48},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":376063,"byte_end":376069,"line_start":1362,"line_end":1362,"column_start":45,"column_end":51},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":378268,"byte_end":378274,"line_start":1433,"line_end":1433,"column_start":61,"column_end":67},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":381633,"byte_end":381639,"line_start":1524,"line_end":1524,"column_start":44,"column_end":50},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":382161,"byte_end":382167,"line_start":1544,"line_end":1544,"column_start":60,"column_end":66},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383024,"byte_end":383030,"line_start":1573,"line_end":1573,"column_start":5,"column_end":11},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":383771,"byte_end":383775,"line_start":1595,"line_end":1595,"column_start":49,"column_end":53},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":17139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":386049,"byte_end":386053,"line_start":1660,"line_end":1660,"column_start":42,"column_end":46},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":17139},"to":{"krate":15,"index":12}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":386480,"byte_end":386484,"line_start":1679,"line_end":1679,"column_start":43,"column_end":47},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":17139},"to":{"krate":15,"index":56}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":386985,"byte_end":386989,"line_start":1703,"line_end":1703,"column_start":39,"column_end":43},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":17139},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix.rs","byte_start":387374,"byte_end":387380,"line_start":1720,"line_end":1720,"column_start":27,"column_end":33},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":16751},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":388643,"byte_end":388651,"line_start":26,"line_end":26,"column_start":56,"column_end":64},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":287}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":388882,"byte_end":388890,"line_start":37,"line_end":37,"column_start":61,"column_end":69},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":78}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":389129,"byte_end":389137,"line_start":48,"line_end":48,"column_start":63,"column_end":71},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":444}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":390152,"byte_end":390160,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":417}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":390406,"byte_end":390414,"line_start":94,"line_end":94,"column_start":44,"column_end":52},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":547}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":390577,"byte_end":390585,"line_start":102,"line_end":102,"column_start":49,"column_end":57},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":997}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":390748,"byte_end":390756,"line_start":110,"line_end":110,"column_start":58,"column_end":66},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":1011}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":391600,"byte_end":391608,"line_start":148,"line_end":148,"column_start":63,"column_end":71},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":999}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":392417,"byte_end":392425,"line_start":185,"line_end":185,"column_start":62,"column_end":70},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":1008}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":392960,"byte_end":392968,"line_start":203,"line_end":203,"column_start":71,"column_end":79},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":1019}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":397186,"byte_end":397193,"line_start":330,"line_end":330,"column_start":50,"column_end":57},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1088},"to":{"krate":36,"index":287}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":397408,"byte_end":397415,"line_start":341,"line_end":341,"column_start":55,"column_end":62},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1088},"to":{"krate":36,"index":78}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":398158,"byte_end":398166,"line_start":370,"line_end":370,"column_start":45,"column_end":53},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":389}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":398416,"byte_end":398424,"line_start":381,"line_end":381,"column_start":45,"column_end":53},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":391}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_alga.rs","byte_start":398666,"byte_end":398674,"line_start":392,"line_end":392,"column_start":37,"column_end":45},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1084},"to":{"krate":36,"index":393}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":401014,"byte_end":401026,"line_start":51,"line_end":51,"column_start":24,"column_end":36},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3163},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":401278,"byte_end":401290,"line_start":64,"line_end":64,"column_start":25,"column_end":37},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3163},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":401585,"byte_end":401597,"line_start":79,"line_end":79,"column_start":28,"column_end":40},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3163},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":401843,"byte_end":401855,"line_start":92,"line_end":92,"column_start":25,"column_end":37},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3163},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":402123,"byte_end":402135,"line_start":106,"line_end":106,"column_start":24,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3163},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":402352,"byte_end":402364,"line_start":116,"line_end":116,"column_start":25,"column_end":37},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3163},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":402647,"byte_end":402659,"line_start":132,"line_end":132,"column_start":22,"column_end":34},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3163},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":402825,"byte_end":402837,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3163},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":403118,"byte_end":403130,"line_start":155,"line_end":155,"column_start":43,"column_end":55},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3163},"to":{"krate":0,"index":1030}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":404225,"byte_end":404237,"line_start":207,"line_end":207,"column_start":46,"column_end":58},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3163},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":404665,"byte_end":404677,"line_start":227,"line_end":227,"column_start":53,"column_end":65},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3163},"to":{"krate":0,"index":1060}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/array_storage.rs","byte_start":404931,"byte_end":404943,"line_start":237,"line_end":237,"column_start":56,"column_end":68},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3163},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":412722,"byte_end":412734,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":16836},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":412849,"byte_end":412861,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":16836},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":415516,"byte_end":415531,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":16892},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416121,"byte_end":416133,"line_start":201,"line_end":201,"column_start":82,"column_end":94},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":16836},"to":{"krate":0,"index":1060}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416246,"byte_end":416261,"line_start":202,"line_end":202,"column_start":82,"column_end":97},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":16892},"to":{"krate":0,"index":1060}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416377,"byte_end":416392,"line_start":203,"line_end":203,"column_start":85,"column_end":100},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":16892},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416520,"byte_end":416532,"line_start":205,"line_end":205,"column_start":96,"column_end":108},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":16836},"to":{"krate":0,"index":1060}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416652,"byte_end":416667,"line_start":206,"line_end":206,"column_start":96,"column_end":111},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":16892},"to":{"krate":0,"index":1060}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416790,"byte_end":416805,"line_start":207,"line_end":207,"column_start":99,"column_end":114},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":16892},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":416884,"byte_end":416890,"line_start":209,"line_end":209,"column_start":54,"column_end":60},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":436971,"byte_end":436976,"line_start":713,"line_end":713,"column_start":32,"column_end":37},"kind":{"Impl":{"id":219}},"from":{"krate":2,"index":28514},"to":{"krate":0,"index":3328}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":437325,"byte_end":437334,"line_start":732,"line_end":732,"column_start":32,"column_end":41},"kind":{"Impl":{"id":220}},"from":{"krate":2,"index":28536},"to":{"krate":0,"index":3328}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":437693,"byte_end":437700,"line_start":751,"line_end":751,"column_start":32,"column_end":39},"kind":{"Impl":{"id":221}},"from":{"krate":2,"index":28557},"to":{"krate":0,"index":3328}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":438027,"byte_end":438036,"line_start":770,"line_end":770,"column_start":32,"column_end":41},"kind":{"Impl":{"id":222}},"from":{"krate":2,"index":28500},"to":{"krate":0,"index":3328}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":438360,"byte_end":438366,"line_start":789,"line_end":789,"column_start":54,"column_end":60},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":439618,"byte_end":439624,"line_start":830,"line_end":830,"column_start":57,"column_end":63},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/matrix_slice.rs","byte_start":440952,"byte_end":440963,"line_start":872,"line_end":872,"column_start":5,"column_end":16},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":16943},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":442510,"byte_end":442520,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":17055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":444072,"byte_end":444082,"line_start":92,"line_end":92,"column_start":42,"column_end":52},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":17055},"to":{"krate":2,"index":1820}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":444267,"byte_end":444277,"line_start":105,"line_end":105,"column_start":59,"column_end":69},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":17055},"to":{"krate":0,"index":1030}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":445199,"byte_end":445209,"line_start":149,"line_end":149,"column_start":63,"column_end":73},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":17055},"to":{"krate":0,"index":1030}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":446171,"byte_end":446181,"line_start":198,"line_end":198,"column_start":62,"column_end":72},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":17055},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":446516,"byte_end":446526,"line_start":212,"line_end":212,"column_start":69,"column_end":79},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":17055},"to":{"krate":0,"index":1060}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":446681,"byte_end":446691,"line_start":215,"line_end":215,"column_start":72,"column_end":82},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":17055},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":446840,"byte_end":446850,"line_start":218,"line_end":218,"column_start":66,"column_end":76},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":17055},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":447615,"byte_end":447625,"line_start":247,"line_end":247,"column_start":73,"column_end":83},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":17055},"to":{"krate":0,"index":1060}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":447784,"byte_end":447794,"line_start":250,"line_end":250,"column_start":76,"column_end":86},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":17055},"to":{"krate":0,"index":1064}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":447908,"byte_end":447918,"line_start":253,"line_end":253,"column_start":31,"column_end":41},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":17055},"to":{"krate":2,"index":4884}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":448625,"byte_end":448635,"line_start":271,"line_end":271,"column_start":50,"column_end":60},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":17055},"to":{"krate":2,"index":4884}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/vec_storage.rs","byte_start":449535,"byte_end":449545,"line_start":300,"line_end":300,"column_start":23,"column_end":33},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":17055},"to":{"krate":2,"index":4884}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":450207,"byte_end":450213,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":452452,"byte_end":452458,"line_start":87,"line_end":87,"column_start":60,"column_end":66},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/properties.rs","byte_start":453034,"byte_end":453046,"line_start":104,"line_end":104,"column_start":49,"column_end":61},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453873,"byte_end":453877,"line_start":8,"line_end":8,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1913},"to":{"krate":0,"index":3540}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453880,"byte_end":453889,"line_start":8,"line_end":8,"column_start":26,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1632},"to":{"krate":0,"index":3540}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453892,"byte_end":453897,"line_start":8,"line_end":8,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":6176},"to":{"krate":0,"index":3540}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":453900,"byte_end":453903,"line_start":8,"line_end":8,"column_start":46,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":2395},"to":{"krate":0,"index":3540}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/scalar.rs","byte_start":454201,"byte_end":454202,"line_start":17,"line_end":17,"column_start":52,"column_end":53},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3544},"to":{"krate":0,"index":3540}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":457999,"byte_end":458003,"line_start":56,"line_end":56,"column_start":22,"column_end":26},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":17139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":460173,"byte_end":460177,"line_start":113,"line_end":113,"column_start":9,"column_end":13},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":17139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":461207,"byte_end":461211,"line_start":149,"line_end":149,"column_start":22,"column_end":26},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":17139},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":461355,"byte_end":461359,"line_start":161,"line_end":161,"column_start":38,"column_end":42},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":17139},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":462987,"byte_end":462991,"line_start":220,"line_end":220,"column_start":22,"column_end":26},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":17139},"to":{"krate":2,"index":1995}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/unit.rs","byte_start":463158,"byte_end":463162,"line_start":229,"line_end":229,"column_start":19,"column_end":23},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":17139},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":463528,"byte_end":463534,"line_start":6,"line_end":6,"column_start":54,"column_end":60},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/statistics.rs","byte_start":465439,"byte_end":465445,"line_start":57,"line_end":57,"column_start":80,"column_end":86},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":474218,"byte_end":474231,"line_start":32,"line_end":32,"column_start":35,"column_end":48},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3687},"to":{"krate":0,"index":3674}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":474939,"byte_end":474945,"line_start":51,"line_end":51,"column_start":35,"column_end":41},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3689},"to":{"krate":0,"index":3674}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":475805,"byte_end":475816,"line_start":72,"line_end":72,"column_start":35,"column_end":46},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3692},"to":{"krate":0,"index":3674}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":476795,"byte_end":476801,"line_start":98,"line_end":98,"column_start":60,"column_end":66},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/base/norm.rs","byte_start":480544,"byte_end":480550,"line_start":216,"line_end":216,"column_start":63,"column_end":69},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":493263,"byte_end":493268,"line_start":30,"line_end":30,"column_start":70,"column_end":75},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":17165},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":493516,"byte_end":493521,"line_start":40,"line_end":40,"column_start":38,"column_end":43},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":17165},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":494941,"byte_end":494946,"line_start":94,"line_end":94,"column_start":29,"column_end":34},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":17165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":498568,"byte_end":498573,"line_start":213,"line_end":213,"column_start":55,"column_end":60},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":17165},"to":{"krate":15,"index":12}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":498984,"byte_end":498989,"line_start":231,"line_end":231,"column_start":57,"column_end":62},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":17165},"to":{"krate":15,"index":56}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":499469,"byte_end":499474,"line_start":254,"line_end":254,"column_start":49,"column_end":54},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":17165},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":499846,"byte_end":499851,"line_start":270,"line_end":270,"column_start":41,"column_end":46},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":17165},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":499944,"byte_end":499949,"line_start":272,"line_end":272,"column_start":43,"column_end":48},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":17165},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":500154,"byte_end":500159,"line_start":281,"line_end":281,"column_start":57,"column_end":62},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":17165},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point.rs","byte_start":500824,"byte_end":500829,"line_start":315,"line_end":315,"column_start":61,"column_end":66},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":17165},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alga.rs","byte_start":501506,"byte_end":501511,"line_start":10,"line_end":10,"column_start":53,"column_end":58},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":17165},"to":{"krate":36,"index":1023}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alga.rs","byte_start":501679,"byte_end":501684,"line_start":18,"line_end":18,"column_start":51,"column_end":56},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":17165},"to":{"krate":36,"index":1027}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alga.rs","byte_start":502217,"byte_end":502222,"line_start":50,"line_end":50,"column_start":41,"column_end":46},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":17165},"to":{"krate":36,"index":389}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alga.rs","byte_start":502467,"byte_end":502472,"line_start":61,"line_end":61,"column_start":41,"column_end":46},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":17165},"to":{"krate":36,"index":391}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_alga.rs","byte_start":502709,"byte_end":502714,"line_start":72,"line_end":72,"column_start":33,"column_end":38},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":17165},"to":{"krate":36,"index":393}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":504015,"byte_end":504020,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":17165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":507184,"byte_end":507189,"line_start":115,"line_end":115,"column_start":51,"column_end":56},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":17165},"to":{"krate":16,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_construction.rs","byte_start":507480,"byte_end":507488,"line_start":129,"line_end":129,"column_start":59,"column_end":67},"kind":{"Impl":{"id":273}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_conversion.rs","byte_start":510802,"byte_end":510807,"line_start":27,"line_end":27,"column_start":44,"column_end":49},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":17165},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_conversion.rs","byte_start":511501,"byte_end":511506,"line_start":52,"line_end":52,"column_start":62,"column_end":67},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":17165},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_conversion.rs","byte_start":513888,"byte_end":513895,"line_start":133,"line_end":133,"column_start":64,"column_end":71},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":1167},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_conversion.rs","byte_start":514162,"byte_end":514167,"line_start":144,"line_end":144,"column_start":53,"column_end":58},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":17165},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_ops.rs","byte_start":516133,"byte_end":516138,"line_start":21,"line_end":21,"column_start":46,"column_end":51},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":17165},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_ops.rs","byte_start":516353,"byte_end":516358,"line_start":32,"line_end":32,"column_start":49,"column_end":54},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":17165},"to":{"krate":2,"index":2159}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/point_ops.rs","byte_start":516588,"byte_end":516593,"line_start":46,"line_end":46,"column_start":49,"column_end":54},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":17165},"to":{"krate":2,"index":1995}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":524509,"byte_end":524517,"line_start":33,"line_end":33,"column_start":70,"column_end":78},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":17555},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":524771,"byte_end":524779,"line_start":43,"line_end":43,"column_start":38,"column_end":46},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":17555},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":524937,"byte_end":524945,"line_start":50,"line_end":50,"column_start":39,"column_end":47},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":17555},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":526452,"byte_end":526460,"line_start":108,"line_end":108,"column_start":29,"column_end":37},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":17555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":535689,"byte_end":535697,"line_start":355,"line_end":355,"column_start":32,"column_end":40},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":17555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538697,"byte_end":538705,"line_start":435,"line_end":435,"column_start":41,"column_end":49},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":17555},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":538813,"byte_end":538821,"line_start":437,"line_end":437,"column_start":55,"column_end":63},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":17555},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":539007,"byte_end":539015,"line_start":446,"line_end":446,"column_start":35,"column_end":43},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":17555},"to":{"krate":15,"index":12}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":539435,"byte_end":539443,"line_start":465,"line_end":465,"column_start":36,"column_end":44},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":17555},"to":{"krate":15,"index":56}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":539937,"byte_end":539945,"line_start":489,"line_end":489,"column_start":32,"column_end":40},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":17555},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation.rs","byte_start":540365,"byte_end":540373,"line_start":511,"line_end":511,"column_start":38,"column_end":46},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":17555},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":541874,"byte_end":541882,"line_start":21,"line_end":21,"column_start":61,"column_end":69},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":287}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":542077,"byte_end":542085,"line_start":30,"line_end":30,"column_start":68,"column_end":76},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":444}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":542384,"byte_end":542392,"line_start":44,"line_end":44,"column_start":66,"column_end":74},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":78}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":543102,"byte_end":543110,"line_start":73,"line_end":73,"column_start":64,"column_end":72},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":877}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":543497,"byte_end":543505,"line_start":87,"line_end":87,"column_start":74,"column_end":82},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":881}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":543920,"byte_end":543928,"line_start":101,"line_end":101,"column_start":70,"column_end":78},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":885}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":544915,"byte_end":544923,"line_start":144,"line_end":144,"column_start":60,"column_end":68},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":898}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_alga.rs","byte_start":545680,"byte_end":545688,"line_start":176,"line_end":176,"column_start":66,"column_end":74},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":932}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548395,"byte_end":548403,"line_start":11,"line_end":11,"column_start":21,"column_end":29},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":17555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_construction.rs","byte_start":548990,"byte_end":548998,"line_start":33,"line_end":33,"column_start":29,"column_end":37},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":17555},"to":{"krate":16,"index":390}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":550089,"byte_end":550097,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":550725,"byte_end":550734,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4288},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":551334,"byte_end":551343,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4286},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":551943,"byte_end":551951,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":552619,"byte_end":552627,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":553352,"byte_end":553360,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":554317,"byte_end":554325,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":17555},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":555938,"byte_end":555945,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":1097},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":556081,"byte_end":556088,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":556221,"byte_end":556228,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":1099},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_conversion.rs","byte_start":556365,"byte_end":556372,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":1097},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_ops.rs","byte_start":557272,"byte_end":557280,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":17555},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":563084,"byte_end":563093,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":570523,"byte_end":570531,"line_start":233,"line_end":233,"column_start":51,"column_end":59},"kind":{"Impl":{"id":369}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":571068,"byte_end":571077,"line_start":258,"line_end":258,"column_start":20,"column_end":29},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/rotation_specialization.rs","byte_start":592237,"byte_end":592245,"line_start":820,"line_end":820,"column_start":51,"column_end":59},"kind":{"Impl":{"id":371}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":595121,"byte_end":595131,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":595172,"byte_end":595182,"line_start":52,"line_end":52,"column_start":34,"column_end":44},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":595467,"byte_end":595477,"line_start":60,"line_end":60,"column_start":48,"column_end":58},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":595605,"byte_end":595615,"line_start":66,"line_end":66,"column_start":29,"column_end":39},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":595652,"byte_end":595662,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":596381,"byte_end":596391,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":17835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":620393,"byte_end":620403,"line_start":854,"line_end":854,"column_start":59,"column_end":69},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":17835},"to":{"krate":15,"index":12}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":620919,"byte_end":620929,"line_start":870,"line_end":870,"column_start":61,"column_end":71},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":17835},"to":{"krate":15,"index":56}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":621524,"byte_end":621534,"line_start":890,"line_end":890,"column_start":53,"column_end":63},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":17835},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622034,"byte_end":622044,"line_start":904,"line_end":904,"column_start":52,"column_end":62},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":622383,"byte_end":622397,"line_start":917,"line_end":917,"column_start":20,"column_end":34},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":640320,"byte_end":640334,"line_start":1425,"line_end":1425,"column_start":52,"column_end":66},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":4656},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":640949,"byte_end":640963,"line_start":1447,"line_end":1447,"column_start":59,"column_end":73},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":4656},"to":{"krate":15,"index":12}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":641302,"byte_end":641316,"line_start":1461,"line_end":1461,"column_start":61,"column_end":75},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":4656},"to":{"krate":15,"index":56}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion.rs","byte_start":641733,"byte_end":641747,"line_start":1480,"line_end":1480,"column_start":53,"column_end":67},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":4656},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":642644,"byte_end":642654,"line_start":17,"line_end":17,"column_start":49,"column_end":59},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":17835},"to":{"krate":36,"index":287}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":642778,"byte_end":642788,"line_start":24,"line_end":24,"column_start":43,"column_end":53},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":17835},"to":{"krate":36,"index":287}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":642919,"byte_end":642929,"line_start":31,"line_end":31,"column_start":54,"column_end":64},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":17835},"to":{"krate":36,"index":78}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":643068,"byte_end":643078,"line_start":38,"line_end":38,"column_start":48,"column_end":58},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":17835},"to":{"krate":36,"index":78}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":643219,"byte_end":643229,"line_start":45,"line_end":45,"column_start":50,"column_end":60},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":17835},"to":{"krate":36,"index":444}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":643873,"byte_end":643883,"line_start":76,"line_end":76,"column_start":39,"column_end":49},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":17835},"to":{"krate":36,"index":417}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":644029,"byte_end":644039,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":17835},"to":{"krate":36,"index":547}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":644102,"byte_end":644112,"line_start":89,"line_end":89,"column_start":36,"column_end":46},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":17835},"to":{"krate":36,"index":997}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":644185,"byte_end":644195,"line_start":93,"line_end":93,"column_start":45,"column_end":55},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":17835},"to":{"krate":36,"index":1011}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":644788,"byte_end":644798,"line_start":120,"line_end":120,"column_start":36,"column_end":46},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":17835},"to":{"krate":36,"index":999}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":645693,"byte_end":645707,"line_start":165,"line_end":165,"column_start":49,"column_end":63},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":287}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":645842,"byte_end":645856,"line_start":172,"line_end":172,"column_start":54,"column_end":68},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":78}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":646003,"byte_end":646017,"line_start":179,"line_end":179,"column_start":56,"column_end":70},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":444}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":646475,"byte_end":646489,"line_start":200,"line_end":200,"column_start":50,"column_end":64},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":877}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":646788,"byte_end":646802,"line_start":212,"line_end":212,"column_start":60,"column_end":74},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":881}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":647129,"byte_end":647143,"line_start":224,"line_end":224,"column_start":56,"column_end":70},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":885}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":648052,"byte_end":648066,"line_start":265,"line_end":265,"column_start":46,"column_end":60},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":898}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_alga.rs","byte_start":648566,"byte_end":648580,"line_start":292,"line_end":292,"column_start":44,"column_end":58},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":932}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":649500,"byte_end":649510,"line_start":20,"line_end":20,"column_start":20,"column_end":30},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":17835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652415,"byte_end":652425,"line_start":108,"line_end":108,"column_start":28,"column_end":38},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":17835},"to":{"krate":16,"index":390}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652530,"byte_end":652540,"line_start":115,"line_end":115,"column_start":29,"column_end":39},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":17835},"to":{"krate":16,"index":380}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":652763,"byte_end":652771,"line_start":127,"line_end":127,"column_start":52,"column_end":60},"kind":{"Impl":{"id":408}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":653323,"byte_end":653337,"line_start":151,"line_end":151,"column_start":20,"column_end":34},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":674119,"byte_end":674133,"line_start":681,"line_end":681,"column_start":28,"column_end":42},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4656},"to":{"krate":16,"index":390}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_construction.rs","byte_start":674265,"byte_end":674273,"line_start":688,"line_end":688,"column_start":56,"column_end":64},"kind":{"Impl":{"id":411}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":676789,"byte_end":676799,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":17835},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":677330,"byte_end":677344,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":677901,"byte_end":677915,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":678506,"byte_end":678520,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":679113,"byte_end":679127,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":679755,"byte_end":679769,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":680380,"byte_end":680394,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":4656},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":681731,"byte_end":681738,"line_start":221,"line_end":221,"column_start":48,"column_end":55},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":1099},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":681885,"byte_end":681894,"line_start":228,"line_end":228,"column_start":48,"column_end":57},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4288},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":682040,"byte_end":682054,"line_start":235,"line_end":235,"column_start":43,"column_end":57},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":4656},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":682208,"byte_end":682215,"line_start":242,"line_end":242,"column_start":48,"column_end":55},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":1097},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_conversion.rs","byte_start":682372,"byte_end":682382,"line_start":249,"line_end":249,"column_start":41,"column_end":51},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_coordinates.rs","byte_start":682656,"byte_end":682666,"line_start":10,"line_end":10,"column_start":30,"column_end":40},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_coordinates.rs","byte_start":682834,"byte_end":682844,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_ops.rs","byte_start":684512,"byte_end":684522,"line_start":66,"line_end":66,"column_start":37,"column_end":47},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_ops.rs","byte_start":684685,"byte_end":684695,"line_start":75,"line_end":75,"column_start":40,"column_end":50},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":2159}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/quaternion_ops.rs","byte_start":698109,"byte_end":698119,"line_start":550,"line_end":550,"column_start":28,"column_end":38},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":17835},"to":{"krate":2,"index":1995}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":702292,"byte_end":702303,"line_start":12,"line_end":12,"column_start":20,"column_end":31},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":712281,"byte_end":712292,"line_start":326,"line_end":326,"column_start":52,"column_end":63},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":712456,"byte_end":712467,"line_start":332,"line_end":332,"column_start":34,"column_end":45},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5089},"to":{"krate":15,"index":12}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":712812,"byte_end":712823,"line_start":346,"line_end":346,"column_start":35,"column_end":46},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5089},"to":{"krate":15,"index":56}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex.rs","byte_start":713263,"byte_end":713274,"line_start":365,"line_end":365,"column_start":31,"column_end":42},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5089},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":714206,"byte_end":714217,"line_start":20,"line_end":20,"column_start":49,"column_end":60},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":287}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":714352,"byte_end":714363,"line_start":27,"line_end":27,"column_start":54,"column_end":65},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":78}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":714510,"byte_end":714521,"line_start":34,"line_end":34,"column_start":56,"column_end":67},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":444}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":715135,"byte_end":715146,"line_start":61,"line_end":61,"column_start":50,"column_end":61},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":877}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":715486,"byte_end":715497,"line_start":75,"line_end":75,"column_start":60,"column_end":71},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":881}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":715865,"byte_end":715876,"line_start":89,"line_end":89,"column_start":56,"column_end":67},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":885}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":716826,"byte_end":716837,"line_start":132,"line_end":132,"column_start":46,"column_end":57},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":898}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_alga.rs","byte_start":717424,"byte_end":717435,"line_start":162,"line_end":162,"column_start":44,"column_end":55},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":932}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":718272,"byte_end":718283,"line_start":15,"line_end":15,"column_start":20,"column_end":31},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":727473,"byte_end":727484,"line_start":271,"line_end":271,"column_start":28,"column_end":39},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5089},"to":{"krate":16,"index":390}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_construction.rs","byte_start":727613,"byte_end":727621,"line_start":278,"line_end":278,"column_start":53,"column_end":61},"kind":{"Impl":{"id":486}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":728879,"byte_end":728890,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":729429,"byte_end":729440,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":730039,"byte_end":730050,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":730643,"byte_end":730654,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":731282,"byte_end":731293,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":731904,"byte_end":731915,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":5089},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":732391,"byte_end":732400,"line_start":158,"line_end":158,"column_start":45,"column_end":54},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":4286},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":732543,"byte_end":732554,"line_start":165,"line_end":165,"column_start":43,"column_end":54},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":732705,"byte_end":732712,"line_start":172,"line_end":172,"column_start":45,"column_end":52},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":1097},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_conversion.rs","byte_start":732859,"byte_end":732866,"line_start":179,"line_end":179,"column_start":45,"column_end":52},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":734177,"byte_end":734188,"line_start":47,"line_end":47,"column_start":34,"column_end":45},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":1978}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":734642,"byte_end":734653,"line_start":65,"line_end":65,"column_start":52,"column_end":63},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":1978}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":735147,"byte_end":735158,"line_start":84,"line_end":84,"column_start":34,"column_end":45},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":735644,"byte_end":735655,"line_start":102,"line_end":102,"column_start":52,"column_end":63},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":742319,"byte_end":742330,"line_start":303,"line_end":303,"column_start":50,"column_end":61},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":2007}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":742497,"byte_end":742508,"line_start":310,"line_end":310,"column_start":58,"column_end":69},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":2007}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":742701,"byte_end":742712,"line_start":318,"line_end":318,"column_start":50,"column_end":61},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":2011}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":742879,"byte_end":742890,"line_start":325,"line_end":325,"column_start":58,"column_end":69},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":2011}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":743082,"byte_end":743093,"line_start":333,"line_end":333,"column_start":51,"column_end":62},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":2007}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":743307,"byte_end":743318,"line_start":342,"line_end":342,"column_start":59,"column_end":70},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":2007}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":743556,"byte_end":743567,"line_start":352,"line_end":352,"column_start":51,"column_end":62},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":2011}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":743781,"byte_end":743792,"line_start":361,"line_end":361,"column_start":59,"column_end":70},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":2011}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":744029,"byte_end":744037,"line_start":371,"line_end":371,"column_start":50,"column_end":58},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":17555},"to":{"krate":2,"index":2007}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":744274,"byte_end":744282,"line_start":380,"line_end":380,"column_start":58,"column_end":66},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":17555},"to":{"krate":2,"index":2007}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":744543,"byte_end":744551,"line_start":390,"line_end":390,"column_start":50,"column_end":58},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":17555},"to":{"krate":2,"index":2011}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/unit_complex_ops.rs","byte_start":744788,"byte_end":744796,"line_start":399,"line_end":399,"column_start":58,"column_end":66},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":17555},"to":{"krate":2,"index":2011}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":745986,"byte_end":745997,"line_start":34,"line_end":34,"column_start":70,"column_end":81},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":18452},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":746211,"byte_end":746222,"line_start":44,"line_end":44,"column_start":38,"column_end":49},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":18452},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":746339,"byte_end":746350,"line_start":50,"line_end":50,"column_start":39,"column_end":50},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":18452},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":747791,"byte_end":747802,"line_start":108,"line_end":108,"column_start":29,"column_end":40},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":18452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":750765,"byte_end":750776,"line_start":195,"line_end":195,"column_start":41,"column_end":52},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":18452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751369,"byte_end":751380,"line_start":214,"line_end":214,"column_start":41,"column_end":52},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":18452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":751956,"byte_end":751967,"line_start":231,"line_end":231,"column_start":41,"column_end":52},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":18452},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":752072,"byte_end":752083,"line_start":233,"line_end":233,"column_start":55,"column_end":66},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":18452},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":752299,"byte_end":752310,"line_start":242,"line_end":242,"column_start":55,"column_end":66},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":18452},"to":{"krate":15,"index":12}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":752721,"byte_end":752732,"line_start":260,"line_end":260,"column_start":57,"column_end":68},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":18452},"to":{"krate":15,"index":56}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":753212,"byte_end":753223,"line_start":283,"line_end":283,"column_start":49,"column_end":60},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":18452},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation.rs","byte_start":753642,"byte_end":753653,"line_start":304,"line_end":304,"column_start":64,"column_end":75},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":18452},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":754602,"byte_end":754613,"line_start":22,"line_end":22,"column_start":61,"column_end":72},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":287}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":754805,"byte_end":754816,"line_start":31,"line_end":31,"column_start":68,"column_end":79},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":444}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":755108,"byte_end":755119,"line_start":45,"line_end":45,"column_start":66,"column_end":77},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":78}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":755826,"byte_end":755837,"line_start":74,"line_end":74,"column_start":64,"column_end":75},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":877}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":756188,"byte_end":756199,"line_start":88,"line_end":88,"column_start":74,"column_end":85},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":881}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":756570,"byte_end":756581,"line_start":102,"line_end":102,"column_start":70,"column_end":81},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":885}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":757538,"byte_end":757549,"line_start":145,"line_end":145,"column_start":60,"column_end":71},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":898}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_alga.rs","byte_start":758214,"byte_end":758225,"line_start":176,"line_end":176,"column_start":65,"column_end":76},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":926}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":759762,"byte_end":759773,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":18452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760441,"byte_end":760452,"line_start":41,"line_end":41,"column_start":56,"column_end":67},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":18452},"to":{"krate":16,"index":390}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_construction.rs","byte_start":760636,"byte_end":760644,"line_start":50,"line_end":50,"column_start":65,"column_end":73},"kind":{"Impl":{"id":557}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":763693,"byte_end":763704,"line_start":23,"line_end":23,"column_start":59,"column_end":70},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":764337,"byte_end":764348,"line_start":47,"line_end":47,"column_start":62,"column_end":73},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":764975,"byte_end":764986,"line_start":70,"line_end":70,"column_start":64,"column_end":75},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":765670,"byte_end":765681,"line_start":93,"line_end":93,"column_start":54,"column_end":65},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":766489,"byte_end":766500,"line_start":120,"line_end":120,"column_start":62,"column_end":73},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":18452},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":767639,"byte_end":767646,"line_start":156,"line_end":156,"column_start":70,"column_end":77},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/translation_conversion.rs","byte_start":767938,"byte_end":767949,"line_start":167,"line_end":167,"column_start":53,"column_end":64},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":18452},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":778375,"byte_end":778383,"line_start":80,"line_end":80,"column_start":88,"column_end":96},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":18631},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":778684,"byte_end":778692,"line_start":91,"line_end":91,"column_start":81,"column_end":89},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":18631},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":778850,"byte_end":778858,"line_start":98,"line_end":98,"column_start":76,"column_end":84},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":18631},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":779094,"byte_end":779102,"line_start":107,"line_end":107,"column_start":58,"column_end":66},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":18631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":788302,"byte_end":788310,"line_start":354,"line_end":354,"column_start":35,"column_end":43},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":18631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":789481,"byte_end":789489,"line_start":387,"line_end":387,"column_start":42,"column_end":50},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":18631},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":789632,"byte_end":789640,"line_start":394,"line_end":394,"column_start":49,"column_end":57},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":18631},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":789932,"byte_end":789940,"line_start":405,"line_end":405,"column_start":49,"column_end":57},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":18631},"to":{"krate":15,"index":12}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":790488,"byte_end":790496,"line_start":425,"line_end":425,"column_start":50,"column_end":58},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":18631},"to":{"krate":15,"index":56}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":791166,"byte_end":791174,"line_start":452,"line_end":452,"column_start":46,"column_end":54},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":18631},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry.rs","byte_start":791756,"byte_end":791764,"line_start":476,"line_end":476,"column_start":67,"column_end":75},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":18631},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":792806,"byte_end":792814,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":18631},"to":{"krate":36,"index":287}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":793047,"byte_end":793055,"line_start":33,"line_end":33,"column_start":71,"column_end":79},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":18631},"to":{"krate":36,"index":444}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":793388,"byte_end":793396,"line_start":49,"line_end":49,"column_start":69,"column_end":77},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":18631},"to":{"krate":36,"index":78}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":794191,"byte_end":794199,"line_start":81,"line_end":81,"column_start":67,"column_end":75},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":18631},"to":{"krate":36,"index":877}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":794606,"byte_end":794614,"line_start":97,"line_end":97,"column_start":77,"column_end":85},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":18631},"to":{"krate":36,"index":881}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":795049,"byte_end":795057,"line_start":113,"line_end":113,"column_start":73,"column_end":81},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":18631},"to":{"krate":36,"index":885}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_alga.rs","byte_start":796515,"byte_end":796523,"line_start":171,"line_end":171,"column_start":63,"column_end":71},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":18631},"to":{"krate":36,"index":898}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":798787,"byte_end":798795,"line_start":22,"line_end":22,"column_start":62,"column_end":70},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":18631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":800309,"byte_end":800317,"line_start":68,"line_end":68,"column_start":70,"column_end":78},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":18631},"to":{"krate":16,"index":390}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":800551,"byte_end":800559,"line_start":78,"line_end":78,"column_start":71,"column_end":79},"kind":{"Impl":{"id":595}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":801336,"byte_end":801344,"line_start":111,"line_end":111,"column_start":20,"column_end":28},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":18631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_construction.rs","byte_start":802396,"byte_end":802404,"line_start":146,"line_end":146,"column_start":20,"column_end":28},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":18631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_conversion.rs","byte_start":813422,"byte_end":813430,"line_start":20,"line_end":20,"column_start":68,"column_end":76},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":18631},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_conversion.rs","byte_start":814323,"byte_end":814331,"line_start":48,"line_end":48,"column_start":70,"column_end":78},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":18631},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_conversion.rs","byte_start":815072,"byte_end":815080,"line_start":72,"line_end":72,"column_start":57,"column_end":65},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":18631},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_conversion.rs","byte_start":816250,"byte_end":816258,"line_start":106,"line_end":106,"column_start":65,"column_end":73},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":18631},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/isometry_conversion.rs","byte_start":817965,"byte_end":817972,"line_start":152,"line_end":152,"column_start":63,"column_end":70},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":835729,"byte_end":835739,"line_start":72,"line_end":72,"column_start":9,"column_end":19},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":19172},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836036,"byte_end":836046,"line_start":83,"line_end":83,"column_start":81,"column_end":91},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":19172},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836203,"byte_end":836213,"line_start":89,"line_end":89,"column_start":76,"column_end":86},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":19172},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":836423,"byte_end":836433,"line_start":98,"line_end":98,"column_start":35,"column_end":45},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":19172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":844552,"byte_end":844562,"line_start":328,"line_end":328,"column_start":35,"column_end":45},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":19172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":845178,"byte_end":845188,"line_start":349,"line_end":349,"column_start":42,"column_end":52},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":19172},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":845330,"byte_end":845340,"line_start":355,"line_end":355,"column_start":49,"column_end":59},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":19172},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":845624,"byte_end":845634,"line_start":366,"line_end":366,"column_start":49,"column_end":59},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":19172},"to":{"krate":15,"index":12}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":846174,"byte_end":846184,"line_start":386,"line_end":386,"column_start":50,"column_end":60},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":19172},"to":{"krate":15,"index":56}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":846846,"byte_end":846856,"line_start":413,"line_end":413,"column_start":46,"column_end":56},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":19172},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity.rs","byte_start":847391,"byte_end":847401,"line_start":436,"line_end":436,"column_start":41,"column_end":51},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":19172},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":848470,"byte_end":848480,"line_start":19,"line_end":19,"column_start":64,"column_end":74},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":19172},"to":{"krate":36,"index":287}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":848713,"byte_end":848723,"line_start":30,"line_end":30,"column_start":71,"column_end":81},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":19172},"to":{"krate":36,"index":444}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":849056,"byte_end":849066,"line_start":46,"line_end":46,"column_start":69,"column_end":79},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":19172},"to":{"krate":36,"index":78}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":849863,"byte_end":849873,"line_start":78,"line_end":78,"column_start":67,"column_end":77},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":19172},"to":{"krate":36,"index":877}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":850280,"byte_end":850290,"line_start":94,"line_end":94,"column_start":77,"column_end":87},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":19172},"to":{"krate":36,"index":881}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":850725,"byte_end":850735,"line_start":110,"line_end":110,"column_start":73,"column_end":83},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":19172},"to":{"krate":36,"index":885}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_alga.rs","byte_start":852169,"byte_end":852179,"line_start":167,"line_end":167,"column_start":67,"column_end":77},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":19172},"to":{"krate":36,"index":898}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":853755,"byte_end":853765,"line_start":22,"line_end":22,"column_start":35,"column_end":45},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":19172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854437,"byte_end":854447,"line_start":48,"line_end":48,"column_start":43,"column_end":53},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":19172},"to":{"krate":16,"index":390}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":854724,"byte_end":854732,"line_start":60,"line_end":60,"column_start":73,"column_end":81},"kind":{"Impl":{"id":667}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":855159,"byte_end":855169,"line_start":77,"line_end":77,"column_start":35,"column_end":45},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":19172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":856706,"byte_end":856716,"line_start":130,"line_end":130,"column_start":20,"column_end":30},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":19172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_construction.rs","byte_start":857478,"byte_end":857488,"line_start":153,"line_end":153,"column_start":20,"column_end":30},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":19172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_conversion.rs","byte_start":867220,"byte_end":867230,"line_start":19,"line_end":19,"column_start":70,"column_end":80},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":19172},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_conversion.rs","byte_start":868136,"byte_end":868146,"line_start":47,"line_end":47,"column_start":57,"column_end":67},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":19172},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_conversion.rs","byte_start":869306,"byte_end":869316,"line_start":81,"line_end":81,"column_start":65,"column_end":75},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":19172},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/similarity_conversion.rs","byte_start":872698,"byte_end":872705,"line_start":166,"line_end":166,"column_start":65,"column_end":72},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891444,"byte_end":891447,"line_start":21,"line_end":21,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2395},"to":{"krate":0,"index":6509}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891450,"byte_end":891455,"line_start":21,"line_end":21,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":6176},"to":{"krate":0,"index":6509}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891458,"byte_end":891462,"line_start":21,"line_end":21,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1913},"to":{"krate":0,"index":6509}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891465,"byte_end":891474,"line_start":21,"line_end":21,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1632},"to":{"krate":0,"index":6509}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":891477,"byte_end":891481,"line_start":21,"line_end":21,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":1903},"to":{"krate":0,"index":6509}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892171,"byte_end":892180,"line_start":39,"line_end":39,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":6509},"to":{"krate":0,"index":6514}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892563,"byte_end":892572,"line_start":47,"line_end":47,"column_start":47,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":6509},"to":{"krate":0,"index":6517}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892764,"byte_end":892773,"line_start":52,"line_end":52,"column_start":45,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":6509},"to":{"krate":0,"index":6519}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":892813,"byte_end":892815,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":6522},"to":{"krate":0,"index":6519}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":893358,"byte_end":893366,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":19763},"to":{"krate":0,"index":6509}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":893601,"byte_end":893612,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":19778},"to":{"krate":0,"index":6509}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":893864,"byte_end":893871,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":19793},"to":{"krate":0,"index":6509}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":894582,"byte_end":894583,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":6540},"to":{"krate":0,"index":6514}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":895200,"byte_end":895201,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":6544},"to":{"krate":0,"index":6517}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":896207,"byte_end":896216,"line_start":176,"line_end":176,"column_start":69,"column_end":78},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":19823},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":896431,"byte_end":896440,"line_start":183,"line_end":183,"column_start":63,"column_end":72},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":19823},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":897650,"byte_end":897659,"line_start":218,"line_end":218,"column_start":65,"column_end":74},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":19823},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":897814,"byte_end":897823,"line_start":221,"line_end":221,"column_start":67,"column_end":76},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":19823},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":898062,"byte_end":898071,"line_start":230,"line_end":230,"column_start":53,"column_end":62},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":19823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906150,"byte_end":906159,"line_start":457,"line_end":457,"column_start":31,"column_end":40},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":19823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":906977,"byte_end":906986,"line_start":484,"line_end":484,"column_start":53,"column_end":62},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":19823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":907868,"byte_end":907877,"line_start":508,"line_end":508,"column_start":39,"column_end":48},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":19823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":908314,"byte_end":908323,"line_start":519,"line_end":519,"column_start":67,"column_end":76},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":19823},"to":{"krate":15,"index":12}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":908783,"byte_end":908792,"line_start":537,"line_end":537,"column_start":68,"column_end":77},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":19823},"to":{"krate":15,"index":56}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform.rs","byte_start":909325,"byte_end":909334,"line_start":560,"line_end":560,"column_start":64,"column_end":73},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":19823},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alga.rs","byte_start":910555,"byte_end":910564,"line_start":18,"line_end":18,"column_start":71,"column_end":80},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":19823},"to":{"krate":36,"index":287}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alga.rs","byte_start":910827,"byte_end":910836,"line_start":29,"line_end":29,"column_start":78,"column_end":87},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":19823},"to":{"krate":36,"index":444}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alga.rs","byte_start":911225,"byte_end":911234,"line_start":45,"line_end":45,"column_start":76,"column_end":85},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":19823},"to":{"krate":36,"index":78}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alga.rs","byte_start":912484,"byte_end":912493,"line_start":88,"line_end":88,"column_start":63,"column_end":72},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":19823},"to":{"krate":36,"index":877}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_alga.rs","byte_start":913034,"byte_end":913043,"line_start":108,"line_end":108,"column_start":73,"column_end":82},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":19823},"to":{"krate":36,"index":881}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":915540,"byte_end":915549,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":19823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_construction.rs","byte_start":916648,"byte_end":916657,"line_start":48,"line_end":48,"column_start":61,"column_end":70},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":19823},"to":{"krate":16,"index":390}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_conversion.rs","byte_start":917185,"byte_end":917194,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":19823},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_conversion.rs","byte_start":918026,"byte_end":918035,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":19823},"to":{"krate":36,"index":556}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_conversion.rs","byte_start":918819,"byte_end":918826,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_ops.rs","byte_start":921129,"byte_end":921138,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":19823},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/transform_ops.rs","byte_start":921494,"byte_end":921503,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":19823},"to":{"krate":2,"index":2159}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/reflection.rs","byte_start":943004,"byte_end":943014,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":6834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":947394,"byte_end":947407,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":6883},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":947444,"byte_end":947457,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":6883},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":947607,"byte_end":947620,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":6883},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":947765,"byte_end":947778,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":6883},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":948491,"byte_end":948504,"line_start":64,"line_end":64,"column_start":20,"column_end":33},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":6883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":972556,"byte_end":972564,"line_start":681,"line_end":681,"column_start":55,"column_end":63},"kind":{"Impl":{"id":816}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/orthographic.rs","byte_start":973607,"byte_end":973614,"line_start":712,"line_end":712,"column_start":47,"column_end":54},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":1099},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":974357,"byte_end":974369,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":6957},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":974406,"byte_end":974418,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":6957},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":974568,"byte_end":974580,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":6957},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":974725,"byte_end":974737,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":6957},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":975448,"byte_end":975460,"line_start":65,"line_end":65,"column_start":20,"column_end":32},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":6957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":982086,"byte_end":982094,"line_start":264,"line_end":264,"column_start":54,"column_end":62},"kind":{"Impl":{"id":823}},"from":{"krate":25,"index":2078},"to":{"krate":25,"index":480}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/geometry/perspective.rs","byte_start":982882,"byte_end":982889,"line_start":287,"line_end":287,"column_start":46,"column_end":53},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":1099},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":988426,"byte_end":988436,"line_start":57,"line_end":57,"column_start":54,"column_end":64},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":20536},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":988793,"byte_end":988803,"line_start":68,"line_end":68,"column_start":45,"column_end":55},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":20536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/bidiagonal.rs","byte_start":999302,"byte_end":999308,"line_start":358,"line_end":358,"column_start":66,"column_end":72},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1000760,"byte_end":1000768,"line_start":35,"line_end":35,"column_start":40,"column_end":48},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":20554},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1000894,"byte_end":1000902,"line_start":41,"line_end":41,"column_start":43,"column_end":51},"kind":{"Impl":{"id":829}},"from":{"krate":0,"index":20554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/cholesky.rs","byte_start":1004886,"byte_end":1004898,"line_start":151,"line_end":151,"column_start":64,"column_end":76},"kind":{"Impl":{"id":830}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/determinant.rs","byte_start":1005590,"byte_end":1005602,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"kind":{"Impl":{"id":831}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1008947,"byte_end":1008956,"line_start":43,"line_end":43,"column_start":54,"column_end":63},"kind":{"Impl":{"id":832}},"from":{"krate":0,"index":20566},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1009186,"byte_end":1009195,"line_start":50,"line_end":50,"column_start":45,"column_end":54},"kind":{"Impl":{"id":833}},"from":{"krate":0,"index":20566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1012609,"byte_end":1012618,"line_start":159,"line_end":159,"column_start":49,"column_end":58},"kind":{"Impl":{"id":834}},"from":{"krate":0,"index":20566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/full_piv_lu.rs","byte_start":1015869,"byte_end":1015875,"line_start":264,"line_end":264,"column_start":66,"column_end":72},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/givens.rs","byte_start":1016702,"byte_end":1016716,"line_start":20,"line_end":20,"column_start":23,"column_end":37},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":20583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1022637,"byte_end":1022647,"line_start":40,"line_end":40,"column_start":47,"column_end":57},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":20595},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1022837,"byte_end":1022847,"line_start":47,"line_end":47,"column_start":38,"column_end":48},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":20595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/hessenberg.rs","byte_start":1025903,"byte_end":1025915,"line_start":136,"line_end":136,"column_start":59,"column_end":71},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/inverse.rs","byte_start":1031129,"byte_end":1031141,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/inverse.rs","byte_start":1031512,"byte_end":1031524,"line_start":24,"line_end":24,"column_start":55,"column_end":67},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1040250,"byte_end":1040252,"line_start":42,"line_end":42,"column_start":54,"column_end":56},"kind":{"Impl":{"id":842}},"from":{"krate":0,"index":20608},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1041590,"byte_end":1041592,"line_start":89,"line_end":89,"column_start":45,"column_end":47},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":20608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1045298,"byte_end":1045300,"line_start":200,"line_end":200,"column_start":49,"column_end":51},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":20608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/lu.rs","byte_start":1050600,"byte_end":1050606,"line_start":371,"line_end":371,"column_start":66,"column_end":72},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1051941,"byte_end":1051960,"line_start":38,"line_end":38,"column_start":23,"column_end":42},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":20624},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052081,"byte_end":1052100,"line_start":44,"line_end":44,"column_start":18,"column_end":37},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":20624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052391,"byte_end":1052410,"line_start":55,"line_end":55,"column_start":6,"column_end":25},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":20624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/permutation_sequence.rs","byte_start":1052688,"byte_end":1052707,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":20624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1056838,"byte_end":1056840,"line_start":43,"line_end":43,"column_start":54,"column_end":56},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":20634},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1057048,"byte_end":1057050,"line_start":50,"line_end":50,"column_start":45,"column_end":47},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":20634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1061036,"byte_end":1061038,"line_start":162,"line_end":162,"column_start":49,"column_end":51},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":20634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/qr.rs","byte_start":1064895,"byte_end":1064901,"line_start":294,"line_end":294,"column_start":66,"column_end":72},"kind":{"Impl":{"id":853}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1066453,"byte_end":1066458,"line_start":45,"line_end":45,"column_start":40,"column_end":45},"kind":{"Impl":{"id":854}},"from":{"krate":0,"index":20650},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1066572,"byte_end":1066577,"line_start":51,"line_end":51,"column_start":31,"column_end":36},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":20650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/schur.rs","byte_start":1081139,"byte_end":1081151,"line_start":490,"line_end":490,"column_start":52,"column_end":64},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/solve.rs","byte_start":1084515,"byte_end":1084527,"line_start":9,"line_end":9,"column_start":52,"column_end":64},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1099138,"byte_end":1099141,"line_start":56,"line_end":56,"column_start":54,"column_end":57},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":20663},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1099497,"byte_end":1099500,"line_start":66,"line_end":66,"column_start":45,"column_end":48},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":20663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/svd.rs","byte_start":1117644,"byte_end":1117650,"line_start":549,"line_end":549,"column_start":66,"column_end":72},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":16751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123082,"byte_end":1123096,"line_start":47,"line_end":47,"column_start":40,"column_end":54},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":20680},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1123275,"byte_end":1123289,"line_start":54,"line_end":54,"column_start":31,"column_end":45},"kind":{"Impl":{"id":862}},"from":{"krate":0,"index":20680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_eigen.rs","byte_start":1131426,"byte_end":1131438,"line_start":307,"line_end":307,"column_start":59,"column_end":71},"kind":{"Impl":{"id":863}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1136378,"byte_end":1136398,"line_start":40,"line_end":40,"column_start":47,"column_end":67},"kind":{"Impl":{"id":864}},"from":{"krate":0,"index":20693},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1136588,"byte_end":1136608,"line_start":47,"line_end":47,"column_start":38,"column_end":58},"kind":{"Impl":{"id":865}},"from":{"krate":0,"index":20693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1140336,"byte_end":1140348,"line_start":148,"line_end":148,"column_start":59,"column_end":71},"kind":{"Impl":{"id":866}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/r/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.18.1/src/linalg/convolution.rs","byte_start":1141029,"byte_end":1141035,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"kind":{"Impl":{"id":867}},"from":{"krate":0,"index":2629},"to":{"krate":4294967295,"index":4294967295}}]}